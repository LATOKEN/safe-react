{"version":3,"sources":["../node_modules/eth-provider/browser.js","../node_modules/eth-provider/resolve/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/ethereum-provider/index.js","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/connections/http.js"],"names":["resolve","require","provider","presets","injected","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","connections","ipc","http","module","exports","targets","options","Array","isArray","undefined","concat","forEach","t","startsWith","alchemyId","Error","infuraId","sets","getProtocol","location","endsWith","map","type","protocol","filter","console","log","EventEmitter","EthereumProvider","ConnectionManager","monitor","update","status","emit","check","inSetup","setTimeout","send","on","indexOf","setMaxListeners","connection","enable","bind","_send","_sendBatch","subscribe","unsubscribe","sendAsync","sendAsyncBatch","isConnected","close","request","connected","nextId","promises","subscriptions","checkConnection","payload","id","method","error","result","reject","params","subscription","data","event","listener","attemptedChainSubscription","startChainSubscription","attemptedAccountsSubscription","startAccountsSubscription","attemptedNetworkSubscription","startNetworkSubscription","warn","this","listenerCount","networkChanged","netId","chainChanged","accountsChanged","accounts","Promise","then","length","coinbase","err","code","catch","jsonrpc","requests","all","push","success","_id","removeAllListeners","cb","results","entry","index","dev","process","interval","name","connect","message","connectionError","emitClose","closing","refresh","target","clearTimeout","connectTimer","closed","setupTimer","frame","direct","infura","alchemy","infuraRopsten","alchemyRopsten","infuraRinkeby","alchemyRinkeby","infuraKovan","alchemyKovan","infuraGoerli","alchemyGoerli","idChain","xDai","matic","InjectedConnection","_injected","UnavailableConnection","parse","WebSocketConnection","_WebSocket","url","create","socket","origin","e","addEventListener","payloads","load","onClose","readyState","CONNECTING","_","JSON","stringify","last","timeout","res","values","replace","split","uuid","v4","HTTPConnection","_XHR","pollId","_emit","init","response","pollSubscriptions","subscriptionTimeout","p","n","statusText","internal","xhr","responded","abort","open","setRequestHeader","onerror","ontimeout","onreadystatechange","responseText"],"mappings":"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","file":"static/js/37.4c930a57.chunk.js","sourcesContent":["const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets, options) => {\n  if (targets && !Array.isArray(targets) && typeof targets === 'object' && !options) {\n    options = targets\n    targets = undefined\n  }\n  if (!targets) targets = ['injected', 'frame']\n  if (!options) options = {}\n\n  targets = [].concat(targets)\n\n  targets.forEach(t => {\n    if (t.startsWith('alchemy') && !options.alchemyId) throw new Error('Alchemy was included as a connection target but no Alchemy project ID was passed in options e.g. { alchemyId: \\'123abc\\' }')\n    if (t.startsWith('infura') && !options.infuraId) throw new Error('Infura was included as a connection target but no Infura project ID was passed in options e.g. { infuraId: \\'123abc\\' }')\n  })\n\n  const sets = presets(options)\n\n  return provider(connections, resolve(targets, sets), options)\n}\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.enable = this.enable.bind(this)\n    this._send = this._send.bind(this)\n    this.send = this.send.bind(this)\n    this._sendBatch = this._sendBatch.bind(this)\n    this.subscribe = this.subscribe.bind(this)\n    this.unsubscribe = this.unsubscribe.bind(this)\n    this.sendAsync = this.sendAsync.bind(this)\n    this.sendAsyncBatch = this.sendAsyncBatch.bind(this)\n    this.isConnected = this.isConnected.bind(this)\n    this.close = this.close.bind(this)\n    this.request = this.request.bind(this)\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => {\n      this.connected = false\n      this.emit('close')\n      this.emit('disconnect')\n    })\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        // Events: connect, disconnect, chainChanged, accountsChanged, message\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Older EIP-1193\n        this.emit('message', { // Latest EIP-1193\n          type: payload.method,\n          data: {\n            subscription: payload.params.subscription,\n            result: payload.params.result\n          }\n        })\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'chainChanged' && !this.attemptedChainSubscription && this.connected) {\n        this.startChainSubscription()\n      } else if (event === 'accountsChanged' && !this.attemptedAccountsSubscription && this.connected) {\n        this.startAccountsSubscription()\n      } else if (event === 'networkChanged' && !this.attemptedNetworkSubscription && this.connected) {\n        this.startNetworkSubscription()\n        console.warn('The networkChanged event is being deprecated, use chainChainged instead')\n      }\n    })\n  }\n\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('chainChanged') && !this.attemptedChainSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      const networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n\n  async startChainSubscription () {\n    this.attemptedChainSubscription = true\n    try {\n      const chainChanged = await this.subscribe('eth_subscribe', 'chainChanged')\n      this.on(chainChanged, netId => this.emit('chainChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to chainChanged', e)\n    }\n  }\n\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      const accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n\n  _send (method, params = []) {\n    return new Promise((resolve, reject) => {\n      let payload\n      if (typeof method === 'object' && method !== null) {\n        payload = method\n        payload.params = payload.params || []\n        payload.jsonrpc = '2.0'\n        payload.id = this.nextId++\n      } else {\n        payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n      }\n      this.promises[payload.id] = { resolve, reject }\n      if (!payload.method || typeof payload.method !== 'string') {\n        this.promises[payload.id].reject(new Error('Method is not a valid string.'))\n        delete this.promises[payload.id]\n      } else if (!(payload.params instanceof Array)) {\n        this.promises[payload.id].reject(new Error('Params is not a valid array.'))\n        delete this.promises[payload.id]\n      } else {\n        this.connection.send(payload)\n      }\n    })\n  }\n\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    payload.jsonrpc = '2.0'\n    payload.id = payload.id || this.nextId++\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      const result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n\n  close () {\n    if (this.connection && this.connection.close) this.connection.close()\n    this.connected = false\n    const error = new Error('Provider closed, subscription lost, please subscribe again.')\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n\n  request (payload) {\n    return this._send(payload.method, payload.params)\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.options = options\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location, this.options)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', () => {\n        this.connected = false\n        this.emitClose()\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  emitClose () {\n    this.emit('close')\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection && this.connection.close && !this.connection.closed) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n    clearTimeout(this.setupTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      this.setupTimer = setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected', 4900)\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = (options = {}) => {\n  return {\n    injected: ['injected'],\n    frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n    direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n    infura: [`wss://mainnet.infura.io/ws/v3/${options.infuraId}`, `https://mainnet.infura.io/v3/${options.infuraId}`],\n    alchemy: [`wss://eth-mainnet.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-mainnet.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraRopsten: [`wss://ropsten.infura.io/ws/v3/${options.infuraId}`, `https://ropsten.infura.io/v3/${options.infuraId}`],\n    alchemyRopsten: [`wss://eth-ropsten.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-ropsten.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraRinkeby: [`wss://rinkeby.infura.io/ws/v3/${options.infuraId}`, `https://rinkeby.infura.io/v3/${options.infuraId}`],\n    alchemyRinkeby: [`wss://eth-rinkeby.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-rinkeby.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraKovan: [`wss://kovan.infura.io/ws/v3/${options.infuraId}`, `https://kovan.infura.io/v3/${options.infuraId}`],\n    alchemyKovan: [`wss://eth-kovan.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-kovan.alchemyapi.io/v2/${options.alchemyId}`],\n    infuraGoerli: [`wss://goerli.infura.io/ws/v3/${options.infuraId}`, `https://goerli.infura.io/ws/v3/${options.infuraId}`],\n    alchemyGoerli: [`wss://eth-goerli.ws.alchemyapi.io/v2/${options.alchemyId}`, `https://eth-goerli.alchemyapi.io/v2/${options.alchemyId}`],\n    idChain: ['wss://idchain.one/ws/'],\n    xDai: ['https://rpc.xdaichain.com', 'https://dai.poa.network'],\n    matic: ['https://rpc-mainnet.maticvigil.com']\n  }\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url, [], { origin: options.origin }) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst { v4: uuid } = require('uuid')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.options = options\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n    this._emit = (...args) => !this.closed ? this.emit(...args) : null\n  }\n\n  create () {\n    if (!XHR) return this._emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'net_version', params: [], id: 1 }, (err, response) => {\n      if (err) return this._emit('error', err)\n      this.connected = true\n      this._emit('connect')\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this._emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this._emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this._emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this._emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this._emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    // Below not working becasue XHR lib blocks it claiming \"restricted header\"\n    // if (this.options.origin) xhr.setRequestHeader('Origin', this.options.origin)\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n"],"sourceRoot":""}