{"version":3,"sources":["components/NetworkLabel/NetworkLabel.tsx","routes/safe/components/Apps/components/SecurityFeedbackModal/styles.tsx","routes/safe/components/Apps/components/SecurityFeedbackModal/SecurityFeedbackDomain.tsx","assets/icons/safe-created.svg","logic/hooks/useQuery.ts","routes/safe/components/Apps/components/SecurityFeedbackModal/UnknownAppWarning.tsx","../node_modules/lodash/uniq.js","routes/SafeAppLandingPage/components/SafeAppsDetails.tsx","assets/icons/demo.svg","routes/SafeAppLandingPage/components/TryDemoSafe.tsx","routes/SafeAppLandingPage/components/CreateNewSafe.tsx","components/SafeAddressSelector/SafeAddressSelector.tsx","routes/SafeAppLandingPage/components/UseYourSafe.tsx","routes/SafeAppLandingPage/components/UserSafeSection.tsx","routes/SafeAppLandingPage/SafeAppLandingPage.tsx"],"names":["NetworkLabel","props","networkInfo","onClick","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","sm","backgroundColor","border","textColor","fontColor","StyledTitle","Title","centered","bold","StyledSecurityTitle","Text","StyledIcon","Icon","StyledSecurityFeedbackContentText","showInOneLine","SecurityFeedbackDomain","url","size","type","color","useQuery","search","useLocation","useMemo","URLSearchParams","StyledBox","Box","StyledWarningTitle","isColumnLayout","StyledWarningText","StyledText","StyledFormControlLabel","FormControlLabel","colors","inputDisabled","UnknownAppWarning","onHideWarning","useState","toggleHideWarning","setToggleHideWarning","display","flexDirection","height","alignItems","mt","control","checked","onChange","name","label","baseUniq","require","module","exports","array","length","SafeAppDetails","iconUrl","description","availableChains","isInDefaultList","showAvailableChains","isSafeAppListLoading","useAppList","isLoading","DetailsContainer","SafeIcon","src","onError","setSafeAppLogoFallback","alt","DescriptionContainer","SafeAppTitle","Separator","ChainLabel","ChainsContainer","map","chainId","chainInfo","getChainById","error","currentTarget","onerror","fallbackSafeAppLogoSvg","div","img","Divider","black300","TryDemoSafe","safeAppUrl","history","useHistory","demoSafeUrl","demoSafeRoute","encodeURI","SafeDemoContainer","Spacer","DemoSvg","StyledDemoButton","event","preventDefault","trackEvent","SAFE_APPS_EVENTS","SHARED_APP_OPEN_DEMO","push","to","component","Link","variant","Button","secondary","CreateNewSafe","createSafeLink","OPEN_SAFE_ROUTE","encodeURIComponent","SAFE_ROUTES","APPS","SuccessSvg","StyledCreateButton","SafeAddressSelector","safes","value","shouldShowShortName","dataTestid","FormControl","StyledSafeSelector","autoWidth","disableUnderline","IconComponent","ExpandMore","fullWidth","safe","StyledMenuItem","address","shortName","hash","showAvatar","shortenHash","Select","separator","white","MenuItem","UseYourSafe","defaultSafe","selectedSafe","setSelectedSafe","useEffect","appsPath","generateSafeRoute","safeAddress","openSafeAppLink","SelectorContainer","newSelectedSafe","find","target","UserSafeSection","safeAppChainId","userAddress","useSelector","userAccountSelector","lastViewedSafeAddress","lastViewedSafe","safesFromService","useOwnerSafes","safesFromLocalStorage","useLocalSafes","addressBook","addressBookState","compatibleSafes","compatibleChains","reduce","result","flatSafesFromLocalStorage","flatSafesFromService","uniq","getNameFromAddressBook","getCompatibleSafes","includes","selectedUserSafe","getDefaultSafe","isWalletConnected","hasComplatibleSafes","showConnectWalletSection","UserSafeContainer","ConnectWalletContainer","ConnectWalletButton","ConnectButton","addressBookEntry","compatibleUserSafes","safeInTheSameChain","Container","SafeAppLandingPage","query","get","isValidChain","isValidChainId","setChainId","appList","isConfigServiceLoading","safeAppDetailsFromConfigService","useAsync","a","getAppInfoFromUrl","Error","safeAppDetailsFromManifest","manifestError","isManifestLoading","safeAppDetails","isSafeAppMissing","chainIds","showLoader","SHARED_APP_LANDING","SHARED_APP_CHAIN_ID","StyledCard","LoaderContainer","ActionsContainer","WELCOME_ROUTE","main","Card"],"mappings":"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","file":"static/js/44.a5c77dfd.chunk.js","sourcesContent":["import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getChainInfo } from 'src/config'\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\n\ntype Props = {\n  networkInfo?: ChainInfo\n  onClick?: () => void\n  flexGrow?: boolean\n  ['data-testid']?: string\n}\n\nfunction NetworkLabel(props: Props): ReactElement {\n  const { networkInfo, onClick, flexGrow } = props\n  const selectedNetwork = networkInfo || getChainInfo()\n\n  return (\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme} data-testid={props['data-testid']}>\n      {selectedNetwork.chainName}\n    </StyledLabel>\n  )\n}\n\nexport default NetworkLabel\n\ntype StyledLabelTypes = {\n  backgroundColor: string\n  textColor: string\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nconst StyledLabel = styled.span<StyledLabelTypes>`\n  position: relative;\n  bottom: 2px;\n  line-height: normal;\n  display: inline-block;\n  min-width: 70px;\n  font-size: ${extraSmallFontSize};\n  padding: ${xs} ${sm};\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\n  color: ${({ textColor }) => textColor ?? fontColor};\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\n  text-align: center;\n  border-radius: 4px;\n  text-transform: capitalize;\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\n`\n","import styled from 'styled-components'\nimport { Title, Text } from '@gnosis.pm/safe-react-components'\n\nexport const StyledTitle = styled(Title)<{ color?: string; bold?: boolean; centered?: boolean }>`\n  text-align: ${({ centered }) => (centered ? 'center' : 'left')};\n  margin: 24px 0;\n  color: inherit;\n  font-weight: ${({ bold }) => (bold ? 'bold' : 'normal')};\n`\n\nexport const StyledSecurityTitle = styled(Text)`\n  text-align: center;\n  color: #b2bbc0;\n  margin: 0 75px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Icon, Text } from '@gnosis.pm/safe-react-components'\n\ntype SecurityFeedbackDomainProps = {\n  url: string\n  showInOneLine?: boolean\n}\n\nconst SecurityFeedbackDomain: React.FC<SecurityFeedbackDomainProps> = ({ url, showInOneLine }): React.ReactElement => {\n  return (\n    <StyledSecurityFeedbackContentText size=\"xl\" showInOneLine={!!showInOneLine}>\n      <StyledIcon type=\"check\" color=\"primary\" size=\"sm\" /> {url}\n    </StyledSecurityFeedbackContentText>\n  )\n}\n\nconst StyledIcon = styled(Icon)`\n  position: relative;\n  top: 4px;\n  padding-right: 4px;\n`\n\nconst StyledSecurityFeedbackContentText = styled(Text)<{ showInOneLine: boolean }>`\n  display: block;\n  font-size: 12px;\n  font-weight: bold;\n  overflow-wrap: anywhere;\n  background-color: #effaf8;\n  padding: 10px 15px 10px 10px;\n  border-radius: 8px;\n  max-width: 75%;\n  ${({ showInOneLine }) =>\n    showInOneLine &&\n    `overflow-y: hidden;\n     white-space: nowrap;\n     `}\n`\n\nexport default SecurityFeedbackDomain\n","export default __webpack_public_path__ + \"static/media/safe-created.ad262168.svg\";","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useQuery = (): URLSearchParams => {\n  const { search } = useLocation()\n\n  return useMemo(() => new URLSearchParams(search), [search])\n}\n\nexport { useQuery }\n","import { useState } from 'react'\nimport Box from '@material-ui/core/Box'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport styled from 'styled-components'\nimport { Text, Icon } from '@gnosis.pm/safe-react-components'\n\nimport { StyledTitle } from 'src/routes/safe/components/Apps/components/SecurityFeedbackModal/styles'\nimport SecurityFeedbackDomain from './SecurityFeedbackDomain'\n\ntype UnknownAppWarningProps = {\n  url?: string\n  onHideWarning?: (hideWarning: boolean) => void\n}\n\nconst UnknownAppWarning = ({ url, onHideWarning }: UnknownAppWarningProps): React.ReactElement => {\n  const [toggleHideWarning, setToggleHideWarning] = useState(false)\n\n  const handleToggleWarningPreference = (): void => {\n    onHideWarning?.(!toggleHideWarning)\n    setToggleHideWarning(!toggleHideWarning)\n  }\n\n  const isColumnLayout = !!onHideWarning\n\n  return (\n    <StyledBox\n      display={isColumnLayout ? 'flex' : 'block'}\n      flexDirection=\"column\"\n      height={isColumnLayout ? '100%' : 'auto'}\n      alignItems=\"center\"\n    >\n      <Box display={isColumnLayout ? 'block' : 'flex'} alignItems=\"center\" mt={isColumnLayout ? 6 : 0}>\n        <StyledIcon type=\"alert\" size=\"md\" isColumnLayout={isColumnLayout} />\n        <StyledWarningTitle size=\"sm\" bold isColumnLayout={isColumnLayout}>\n          Warning\n        </StyledWarningTitle>\n      </Box>\n      <StyledWarningText isColumnLayout={isColumnLayout} size=\"xl\">\n        The application you are trying to access is not in the default Safe Apps list\n      </StyledWarningText>\n      <br />\n      <StyledText isColumnLayout={isColumnLayout} size=\"lg\">\n        Check the link you are using and ensure that it comes from a source you trust\n      </StyledText>\n      <br />\n      {url && <SecurityFeedbackDomain url={url} showInOneLine />}\n      <br />\n      {onHideWarning && (\n        <StyledFormControlLabel\n          control={\n            <Checkbox\n              checked={toggleHideWarning}\n              onChange={handleToggleWarningPreference}\n              name=\"Warning message preference\"\n            />\n          }\n          label=\"Don't show this warning again\"\n        />\n      )}\n    </StyledBox>\n  )\n}\n\nconst StyledBox = styled(Box)`\n  color: #e8663d;\n`\n\nconst StyledWarningTitle = styled(StyledTitle)<{ isColumnLayout: boolean }>`\n  font-size: 24px;\n  margin-left: 4px;\n  margin-top: ${({ isColumnLayout }) => (isColumnLayout ? '12px' : '24px')};\n`\n\nconst StyledWarningText = styled(Text)<{ isColumnLayout: boolean }>`\n  color: inherit;\n  text-align: ${({ isColumnLayout }) => (isColumnLayout ? 'center' : 'left')};\n`\n\nconst StyledText = styled(Text)<{ isColumnLayout: boolean }>`\n  text-align: ${({ isColumnLayout }) => (isColumnLayout ? 'center' : 'left')};\n`\n\nconst StyledIcon = styled(Icon)<{ isColumnLayout: boolean }>`\n  svg {\n    width: ${({ isColumnLayout }) => (isColumnLayout ? '32px' : '24px')};\n    height: ${({ isColumnLayout }) => (isColumnLayout ? '32px' : '24px')};\n  }\n  .icon-color {\n    fill: #e8663d;\n  }\n\n  .icon-stroke {\n    stroke: #e8663d;\n  }\n`\n\nconst StyledFormControlLabel = styled(FormControlLabel)`\n  flex: 1;\n  color: #000;\n  .MuiIconButton-root:not(.Mui-checked) {\n    color: ${({ theme }) => theme.colors.inputDisabled};\n  }\n`\n\nexport default UnknownAppWarning\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","import { ReactElement, SyntheticEvent } from 'react'\nimport styled from 'styled-components'\nimport Divider from '@material-ui/core/Divider'\nimport { Title, Text } from '@gnosis.pm/safe-react-components'\n\nimport { getChainById } from 'src/config'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { black300 } from 'src/theme/variables'\nimport fallbackSafeAppLogoSvg from 'src/assets/icons/apps.svg'\nimport UnknownAppWarning from 'src/routes/safe/components/Apps/components/SecurityFeedbackModal/UnknownAppWarning'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\n\ntype SafeAppDetailsTypes = {\n  iconUrl: string\n  name: string\n  description: string\n  availableChains: string[]\n  isInDefaultList: boolean\n}\n\nconst SafeAppDetails = ({\n  iconUrl,\n  name,\n  description,\n  availableChains,\n  isInDefaultList,\n}: SafeAppDetailsTypes): ReactElement => {\n  const showAvailableChains = availableChains?.length > 0\n  const { isLoading: isSafeAppListLoading } = useAppList()\n\n  return (\n    <>\n      <DetailsContainer>\n        <SafeIcon src={iconUrl} onError={setSafeAppLogoFallback} alt={`${name || 'Safe App'} Logo`} />\n        <DescriptionContainer>\n          <SafeAppTitle size=\"sm\">{name}</SafeAppTitle>\n          <div>{description}</div>\n        </DescriptionContainer>\n      </DetailsContainer>\n      <Separator />\n\n      {/* Available chains */}\n      {showAvailableChains && (\n        <>\n          <ChainLabel size=\"lg\">Available networks</ChainLabel>\n          <ChainsContainer>\n            {availableChains.map((chainId) => {\n              const chainInfo = getChainById(chainId)\n              return (\n                chainInfo.chainName && (\n                  <div key={chainId}>\n                    <NetworkLabel networkInfo={chainInfo} />\n                  </div>\n                )\n              )\n            })}\n          </ChainsContainer>\n          <Separator />\n        </>\n      )}\n      {!isSafeAppListLoading && !isInDefaultList && (\n        <>\n          <UnknownAppWarning />\n          <Separator />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default SafeAppDetails\n\nconst setSafeAppLogoFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = fallbackSafeAppLogoSvg\n}\n\nconst DetailsContainer = styled.div`\n  display: flex;\n`\nconst SafeIcon = styled.img`\n  width: 90px;\n  height: 90px;\n`\n\nconst SafeAppTitle = styled(Title)`\n  margin-top: 0px;\n  margin-bottom: 12px;\n`\n\nconst DescriptionContainer = styled.div`\n  padding-left: 66px;\n  flex-grow: 1;\n`\n\nconst Separator = styled(Divider)`\n  margin: 24px 0;\n`\n\nconst ChainLabel = styled(Text)`\n  color: ${black300};\n`\nconst ChainsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n\n  && > div {\n    margin-top: 12px;\n    margin-right: 8px;\n  }\n`\n","export default __webpack_public_path__ + \"static/media/demo.424695b1.svg\";","import { MouseEvent, ReactElement } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Title, Button } from '@gnosis.pm/safe-react-components'\n\nimport { demoSafeRoute } from 'src/routes/routes'\nimport { secondary } from 'src/theme/variables'\nimport DemoSvg from 'src/assets/icons/demo.svg'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport Spacer from 'src/components/Spacer'\n\nconst TryDemoSafe = ({ safeAppUrl }: { safeAppUrl: string | null }): ReactElement => {\n  const history = useHistory()\n  const demoSafeUrl = `${demoSafeRoute}?appUrl=${encodeURI(safeAppUrl || '')}`\n\n  const handleDemoSafeClick = (event: MouseEvent) => {\n    event.preventDefault()\n\n    trackEvent({ ...SAFE_APPS_EVENTS.SHARED_APP_OPEN_DEMO, label: safeAppUrl })\n    history.push(demoSafeUrl)\n  }\n\n  return (\n    <SafeDemoContainer>\n      <Title size=\"xs\">Want to try the app before using it?</Title>\n\n      <Spacer />\n\n      <img alt=\"Demo\" height={92} src={DemoSvg} />\n\n      {safeAppUrl && (\n        <StyledDemoButton\n          onClick={handleDemoSafeClick}\n          to={demoSafeUrl}\n          color=\"primary\"\n          component={Link}\n          size=\"lg\"\n          variant=\"outlined\"\n        >\n          Try Demo\n        </StyledDemoButton>\n      )}\n    </SafeDemoContainer>\n  )\n}\n\nexport default TryDemoSafe\n\nconst SafeDemoContainer = styled.div`\n  flex: 1 0 50%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst StyledDemoButton = styled(Button)`\n  border: 2px solid ${secondary};\n  margin-top: 30px;\n`\n","import { ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Text } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport SuccessSvg from 'src/assets/icons/safe-created.svg'\nimport { OPEN_SAFE_ROUTE, SAFE_ROUTES } from 'src/routes/routes'\n\ntype CreateNewSafeProps = {\n  safeAppUrl: string\n}\n\nconst CreateNewSafe = ({ safeAppUrl }: CreateNewSafeProps): ReactElement => {\n  const createSafeLink = `${OPEN_SAFE_ROUTE}?redirect=${encodeURIComponent(`${SAFE_ROUTES.APPS}?appUrl=${safeAppUrl}`)}`\n\n  return (\n    <>\n      <img alt=\"Vault\" height={92} src={SuccessSvg} />\n\n      <StyledCreateButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={createSafeLink}>\n        <Text size=\"xl\" color=\"white\">\n          Create new Safe\n        </Text>\n      </StyledCreateButton>\n    </>\n  )\n}\n\nexport default CreateNewSafe\n\nconst StyledCreateButton = styled(Button)`\n  margin-top: 30px;\n`\n","import { ReactElement, ChangeEvent } from 'react'\nimport styled from 'styled-components'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport FormControl from '@material-ui/core/FormControl'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Select from '@material-ui/core/Select'\nimport ExpandMore from '@material-ui/icons/ExpandMore'\n\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { black300 } from 'src/theme/variables'\nimport { getChainById } from 'src/config'\n\ntype SafeAddressSelectorProps = {\n  safes: AddressBookEntry[]\n  value: string\n  onChange: (event: ChangeEvent<{ value: string }>) => void\n  shouldShowShortName?: boolean\n  dataTestid?: string\n}\n\nconst SafeAddressSelector = ({\n  safes,\n  value,\n  onChange,\n  shouldShowShortName = true,\n  dataTestid,\n}: SafeAddressSelectorProps): ReactElement => {\n  return (\n    <FormControl>\n      <StyledSafeSelector\n        data-testid={dataTestid || 'safe-selector'}\n        value={value}\n        onChange={onChange}\n        autoWidth\n        disableUnderline\n        IconComponent={ExpandMore}\n        fullWidth\n      >\n        {safes.map((safe) => (\n          <StyledMenuItem key={`${safe.address}-${safe.chainId}`} value={safe.address}>\n            <EthHashInfo\n              shouldShowShortName={shouldShowShortName}\n              shortName={getChainById(safe.chainId).shortName}\n              hash={safe.address}\n              showAvatar\n              shortenHash={4}\n              name={safe.name}\n            />\n          </StyledMenuItem>\n        ))}\n      </StyledSafeSelector>\n    </FormControl>\n  )\n}\n\nexport default SafeAddressSelector\n\nconst StyledSafeSelector = styled(Select)`\n  &.MuiInput-root {\n    margin: 0;\n    padding: 8px 16px;\n    border-radius: 8px;\n    border: 2px solid ${({ theme }) => theme.colors.separator};\n    background-color: ${({ theme }) => theme.colors.white};\n  }\n\n  & .MuiSelect-select:focus {\n    background-color: inherit;\n  }\n\n  & .MuiSelect-icon {\n    right: 16px;\n    color: ${black300};\n  }\n`\n\nconst StyledMenuItem = styled(MenuItem)`\n  padding: 12px;\n`\n\nexport const getAddressLabel = (address: string): string => {\n  const firstPart = address.slice(0, 6)\n  const lastPart = address.slice(38)\n\n  return `${firstPart}...${lastPart}`\n}\n","import { useEffect, useState, ReactElement } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Text, Button } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\n\nimport SafeAddressSelector from 'src/components/SafeAddressSelector/SafeAddressSelector'\nimport { getChainById } from 'src/config'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\n\ntype UseYourSafeTypes = {\n  safeAppUrl: string\n  defaultSafe: AddressBookEntry\n  safes: AddressBookEntry[]\n}\n\nconst UseYourSafe = ({ safes, safeAppUrl, defaultSafe }: UseYourSafeTypes): ReactElement => {\n  const [selectedSafe, setSelectedSafe] = useState<AddressBookEntry>(defaultSafe)\n\n  useEffect(() => {\n    setSelectedSafe(defaultSafe)\n  }, [defaultSafe])\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getChainById(selectedSafe.chainId).shortName,\n    safeAddress: selectedSafe.address,\n  })\n  const openSafeAppLink = `${appsPath}?appUrl=${encodeURI(safeAppUrl)}`\n  return (\n    <>\n      <SelectorContainer>\n        <SafeAddressSelector\n          value={selectedSafe.address}\n          safes={safes}\n          onChange={(event) => {\n            const newSelectedSafe = safes.find(({ address }) => address === event.target.value)\n            if (newSelectedSafe) {\n              setSelectedSafe(newSelectedSafe)\n            }\n          }}\n        />\n      </SelectorContainer>\n\n      <StyledCreateButton size=\"lg\" color=\"primary\" variant=\"contained\" component={Link} to={openSafeAppLink}>\n        <Text size=\"xl\" color=\"white\">\n          Connect Safe\n        </Text>\n      </StyledCreateButton>\n    </>\n  )\n}\n\nexport default UseYourSafe\n\nconst StyledCreateButton = styled(Button)`\n  margin-top: 30px;\n`\n\nconst SelectorContainer = styled.div`\n  flex-grow: 1;\n  justify-content: center;\n  margin-top: 24px;\n  max-width: 320px;\n  width: 100%;\n`\n","import { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Title } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport uniq from 'lodash/uniq'\n\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport ConnectButton from 'src/components/ConnectButton'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport useOwnerSafes from 'src/logic/safe/hooks/useOwnerSafes'\nimport useLocalSafes, { LocalSafes } from 'src/logic/safe/hooks/useLocalSafes'\nimport { lastViewedSafe } from 'src/logic/currentSession/store/selectors'\nimport { addressBookState } from 'src/logic/addressBook/store/selectors'\nimport CreateNewSafe from './CreateNewSafe'\nimport UseYourSafe from './UseYourSafe'\n\ntype UserSafeProps = {\n  safeAppUrl: string\n  availableChains: string[]\n  safeAppChainId: string\n}\n\nconst getCompatibleSafes = (\n  safesFromLocalStorage: LocalSafes,\n  safesFromService: Record<string, string[]>,\n  compatibleChains: string[],\n  addressBook: AddressBookEntry[],\n): AddressBookEntry[] => {\n  return compatibleChains.reduce((result, chainId) => {\n    const flatSafesFromLocalStorage = safesFromLocalStorage[chainId]?.map(({ address }) => address) || []\n    const flatSafesFromService = safesFromService[chainId] || []\n\n    // we remove duplicated safes\n    const allSafes = uniq([...flatSafesFromService, ...flatSafesFromLocalStorage])\n\n    const compatibleSafes = allSafes.map((address) => ({\n      address,\n      chainId,\n      name: getNameFromAddressBook(addressBook, address, chainId),\n    }))\n\n    return [...result, ...compatibleSafes]\n  }, [])\n}\n\nconst UserSafeSection = ({ safeAppUrl, availableChains, safeAppChainId }: UserSafeProps): ReactElement => {\n  const userAddress = useSelector(userAccountSelector)\n  const lastViewedSafeAddress = useSelector(lastViewedSafe)\n  const safesFromService = useOwnerSafes()\n  const safesFromLocalStorage = useLocalSafes()\n  const addressBook = useSelector(addressBookState)\n\n  // we include the chainId provided in the query params in the available chains list\n  const compatibleChains = !availableChains.includes(safeAppChainId)\n    ? [...availableChains, safeAppChainId]\n    : availableChains\n\n  // we collect all compatible safes from backend and localstorage\n  const compatibleSafes = getCompatibleSafes(safesFromLocalStorage, safesFromService, compatibleChains, addressBook)\n\n  const selectedUserSafe = getDefaultSafe(compatibleSafes, lastViewedSafeAddress, safeAppChainId)\n\n  const isWalletConnected = !!userAddress\n  const hasComplatibleSafes = compatibleSafes.length > 0\n\n  const showConnectWalletSection = !isWalletConnected && !hasComplatibleSafes\n\n  return (\n    <UserSafeContainer>\n      <Title size=\"xs\">Use the dApp with your Safe!</Title>\n      {showConnectWalletSection ? (\n        <ConnectWalletContainer>\n          <ConnectWalletButton data-testid=\"connect-wallet-btn\" />\n        </ConnectWalletContainer>\n      ) : selectedUserSafe ? (\n        <UseYourSafe safeAppUrl={safeAppUrl} defaultSafe={selectedUserSafe} safes={compatibleSafes} />\n      ) : (\n        <CreateNewSafe safeAppUrl={safeAppUrl} />\n      )}\n    </UserSafeContainer>\n  )\n}\n\nexport default UserSafeSection\n\nconst UserSafeContainer = styled.div`\n  flex: 1 0 50%;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst ConnectWalletContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`\nconst ConnectWalletButton = styled(ConnectButton)`\n  height: 52px;\n`\n\nconst getNameFromAddressBook = (addressBook: AddressBookEntry[], address: string, chainId: string) => {\n  const addressBookEntry = addressBook.find(\n    (addressBookEntry) => addressBookEntry.address === address && addressBookEntry.chainId === chainId,\n  )\n\n  return addressBookEntry?.name || ''\n}\n\nconst getDefaultSafe = (\n  compatibleUserSafes: AddressBookEntry[],\n  lastViewedSafeAddress: string | null,\n  safeAppChainId: string | null,\n) => {\n  // as a first option, we use the last viewed user Safe in the provided chain\n  const lastViewedSafe = compatibleUserSafes.find(\n    (safe) => safe.address === lastViewedSafeAddress && safe.chainId === safeAppChainId,\n  )\n\n  if (lastViewedSafe) {\n    return lastViewedSafe\n  }\n\n  // as a second option, we use any user Safe in the provided chain\n  const safeInTheSameChain = compatibleUserSafes.find((safe) => safe.chainId === safeAppChainId)\n\n  if (safeInTheSameChain) {\n    return safeInTheSameChain\n  }\n\n  // as a fallback we salect a random compatible user Safe\n  return compatibleUserSafes[0]\n}\n","import { ReactElement, useEffect, useMemo } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { Card, Loader } from '@gnosis.pm/safe-react-components'\n\nimport { isValidChainId } from 'src/config'\nimport { WELCOME_ROUTE } from 'src/routes/routes'\nimport { useAppList } from 'src/routes/safe/components/Apps/hooks/appList/useAppList'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport { getAppInfoFromUrl } from 'src/routes/safe/components/Apps/utils'\nimport { setChainId } from 'src/logic/config/utils'\nimport { useQuery } from 'src/logic/hooks/useQuery'\nimport useAsync from 'src/logic/hooks/useAsync'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\nimport SafeAppDetails from 'src/routes/SafeAppLandingPage/components/SafeAppsDetails'\nimport TryDemoSafe from 'src/routes/SafeAppLandingPage/components/TryDemoSafe'\nimport UserSafeSection from './components/UserSafeSection'\n\nconst SafeAppLandingPage = (): ReactElement => {\n  const query = useQuery()\n  const safeAppChainId = query.get('chainId')\n  const safeAppUrl = query.get('appUrl')\n  const isValidChain = useMemo(() => isValidChainId(safeAppChainId), [safeAppChainId])\n\n  // if no valid chainId is present in query params we redirect to the Welcome page\n  useEffect(() => {\n    // we set the valid Safe App chainId in the state\n    if (isValidChain) {\n      setChainId(safeAppChainId as string)\n    }\n  }, [safeAppChainId, isValidChain])\n\n  // fetch Safe App details from the Config service\n  const { appList, isLoading: isConfigServiceLoading } = useAppList()\n  const safeAppDetailsFromConfigService = appList.find(({ url }) => safeAppUrl === url)\n\n  // fetch Safe App details from Manifest.json\n  const [safeAppDetailsFromManifest, manifestError, isManifestLoading] = useAsync<SafeApp>(async () => {\n    if (safeAppUrl) {\n      return getAppInfoFromUrl(safeAppUrl)\n    }\n    throw new Error('No Safe App URL provided.')\n  }, [safeAppUrl])\n\n  const safeAppDetails = safeAppDetailsFromConfigService || safeAppDetailsFromManifest\n  const isLoading = isConfigServiceLoading || isManifestLoading\n  const isSafeAppMissing = !isLoading && !safeAppDetails && manifestError\n\n  const availableChains = safeAppDetails?.chainIds || []\n\n  const showLoader = isLoading || !safeAppDetails\n\n  useEffect(() => {\n    if (!isLoading && safeAppDetails) {\n      trackEvent({\n        ...SAFE_APPS_EVENTS.SHARED_APP_LANDING,\n        label: safeAppDetails?.name,\n      })\n      trackEvent({\n        ...SAFE_APPS_EVENTS.SHARED_APP_CHAIN_ID,\n        label: safeAppChainId,\n      })\n    }\n  }, [isLoading, safeAppDetails, safeAppChainId])\n\n  if (!safeAppUrl || !isValidChain || isSafeAppMissing) {\n    return <Redirect to={WELCOME_ROUTE} />\n  }\n\n  return (\n    <Container>\n      <StyledCard>\n        {showLoader ? (\n          <LoaderContainer>\n            <Loader size=\"md\" />\n          </LoaderContainer>\n        ) : (\n          <>\n            {/* Safe App details */}\n            {safeAppDetails && (\n              <SafeAppDetails\n                iconUrl={safeAppDetails.iconUrl}\n                name={safeAppDetails.name}\n                description={safeAppDetails?.description}\n                availableChains={availableChains}\n                isInDefaultList={!!safeAppDetailsFromConfigService}\n              />\n            )}\n\n            <ActionsContainer>\n              {/* User Safe Section */}\n              {safeAppChainId && (\n                <UserSafeSection\n                  safeAppUrl={safeAppUrl}\n                  availableChains={availableChains}\n                  safeAppChainId={safeAppChainId}\n                />\n              )}\n              {/* Demo Safe Section */}\n              <TryDemoSafe safeAppUrl={safeAppUrl} />\n            </ActionsContainer>\n          </>\n        )}\n      </StyledCard>\n    </Container>\n  )\n}\n\nexport default SafeAppLandingPage\n\nconst Container = styled.main`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`\n\nconst StyledCard = styled(Card)`\n  flex-grow: 1;\n  max-width: 850px;\n  border-radius: 20px;\n  padding: 50px 58px;\n`\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 400px;\n`\n\nconst ActionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n"],"sourceRoot":""}