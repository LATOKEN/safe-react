{"version":3,"sources":["components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/layout/Heading/index.module.scss","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/style.ts","routes/safe/components/Settings/ThresholdSettings/ChangeThreshold/index.tsx","routes/safe/components/Settings/ThresholdSettings/style.ts","routes/safe/components/Settings/ThresholdSettings/index.tsx"],"names":["style","minWidth","SelectInput","classes","disableError","formControlProps","input","name","onChange","value","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","error","touched","inputProps","htmlFor","variant","cx","classNames","bind","styles","Heading","props","align","children","className","color","margin","tag","testId","truncate","capitalize","undefined","React","module","exports","useStyles","makeStyles","createStyles","modalContent","padding","md","lg","ownersText","marginLeft","sm","inputRow","position","ChangeThresholdModal","onClose","ownersCount","safeAddress","threshold","dispatch","useDispatch","safeVersion","useSelector","currentSafeCurrentVersion","useState","data","setData","editedThreshold","setEditedThreshold","disabledSubmitForm","setDisabledSubmitForm","useEffect","isCurrent","txData","getGnosisSafeInstanceAt","methods","changeThreshold","encodeABI","calculateChangeThresholdData","handleThreshold","target","parseInt","handleSubmit","txParameters","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","safeTxGas","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","trackEvent","SETTINGS_EVENTS","THRESHOLD","OWNERS","TxModalWrapper","onSubmit","isSubmitDisabled","ModalHeader","title","Hairline","GnoForm","initialValues","toString","Block","Row","Paragraph","weight","Col","xs","Field","render","SelectField","Array","Number","map","x","index","MenuItem","validate","composeValidators","required","mustBeInteger","minValue","differentFrom","noMargin","size","secondaryText","fontColor","container","buttonRow","left","bottom","boxSizing","width","justifyContent","borderTop","border","modifyBtn","height","xl","fontSize","smallFontSize","ThresholdSettings","isModalOpen","setModalOpen","currentSafe","address","owners","granted","grantedSelector","toggleModal","prevOpen","Bold","length","Track","CHANGE","Button","onClick","Modal","description","handleClose","open"],"mappings":"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","file":"static/js/55.7dcf98fe.chunk.js","sourcesContent":["import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { FieldMetaState } from 'react-final-form'\nimport { FormControlProps } from '@material-ui/core/FormControl/FormControl'\n\nconst style = {\n  minWidth: '100%',\n}\n\ntype Props = {\n  classes: SelectProps['classes']\n  label: SelectProps['label']\n  renderValue: SelectProps['renderValue']\n  disableError: boolean\n  formControlProps: FormControlProps\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: FieldMetaState<any>\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}: Props): React.ReactElement => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        variant=\"outlined\"\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    modalContent: {\n      padding: `${md} ${lg}`,\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n  }),\n)\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, differentFrom, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { useStyles } from './style'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\n\nconst THRESHOLD_FIELD_NAME = 'threshold'\n\ntype ChangeThresholdModalProps = {\n  onClose: () => void\n  ownersCount?: number\n  safeAddress: string\n  threshold?: number\n}\n\nexport const ChangeThresholdModal = ({\n  onClose,\n  ownersCount = 0,\n  safeAddress,\n  threshold = 1,\n}: ChangeThresholdModalProps): ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const safeVersion = useSelector(currentSafeCurrentVersion) as string\n  const [data, setData] = useState('')\n  const [editedThreshold, setEditedThreshold] = useState<number>(threshold)\n  const [disabledSubmitForm, setDisabledSubmitForm] = useState<boolean>(true)\n\n  useEffect(() => {\n    let isCurrent = true\n    const calculateChangeThresholdData = () => {\n      const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n      const txData = safeInstance.methods.changeThreshold(editedThreshold).encodeABI()\n      if (isCurrent) {\n        setData(txData)\n      }\n    }\n\n    calculateChangeThresholdData()\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, editedThreshold])\n\n  const handleThreshold = ({ target }) => {\n    const value = parseInt(target.value)\n    setDisabledSubmitForm(value === editedThreshold || value === threshold)\n    setEditedThreshold(value)\n  }\n\n  const handleSubmit = (txParameters: TxParameters, delayExecution: boolean) => {\n    dispatch(\n      createTransaction({\n        safeAddress,\n        to: safeAddress,\n        valueInWei: '0',\n        txData: data,\n        txNonce: txParameters.safeNonce,\n        safeTxGas: txParameters.safeTxGas,\n        ethParameters: txParameters,\n        notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n        delayExecution,\n      }),\n    )\n\n    trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.OWNERS, label: ownersCount })\n    trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.THRESHOLD, label: editedThreshold })\n\n    onClose()\n  }\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={handleSubmit} isSubmitDisabled={disabledSubmitForm} onClose={onClose}>\n      <ModalHeader onClose={onClose} title=\"Change threshold\" />\n      <Hairline />\n      <GnoForm initialValues={{ threshold: editedThreshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <Block className={classes.modalContent}>\n            <Row>\n              <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n            </Row>\n            <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n              <Col xs={2}>\n                <Field\n                  data-testid=\"threshold-select-input\"\n                  name={THRESHOLD_FIELD_NAME}\n                  onChange={handleThreshold}\n                  render={(props) => (\n                    <SelectField {...props} disableError>\n                      {[...Array(Number(ownersCount))].map((x, index) => (\n                        <MenuItem key={index} value={`${index + 1}`}>\n                          {index + 1}\n                        </MenuItem>\n                      ))}\n                    </SelectField>\n                  )}\n                  validate={composeValidators(required, mustBeInteger, minValue(1), differentFrom(threshold))}\n                />\n              </Col>\n              <Col xs={10}>\n                <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                  {`out of ${ownersCount} owner(s)`}\n                </Paragraph>\n              </Col>\n            </Row>\n          </Block>\n        )}\n      </GnoForm>\n    </TxModalWrapper>\n  )\n}\n","import { createStyles } from '@material-ui/core/styles'\nimport { border, fontColor, lg, secondaryText, smallFontSize, xl } from 'src/theme/variables'\n\nexport const styles = createStyles({\n  ownersText: {\n    color: secondaryText,\n    '& b': {\n      color: fontColor,\n    },\n  },\n  container: {\n    padding: lg,\n  },\n  buttonRow: {\n    padding: lg,\n    position: 'absolute',\n    left: 0,\n    bottom: 0,\n    boxSizing: 'border-box',\n    width: '100%',\n    justifyContent: 'flex-end',\n    borderTop: `2px solid ${border}`,\n  },\n  modifyBtn: {\n    height: xl,\n    fontSize: smallFontSize,\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Bold from 'src/components/layout/Bold'\nimport Button from 'src/components/layout/Button'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\n\nimport { ChangeThresholdModal } from './ChangeThreshold'\nimport { styles } from './style'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport Track from 'src/components/Track'\n\nconst useStyles = makeStyles(styles)\n\nconst ThresholdSettings = (): React.ReactElement => {\n  const classes = useStyles()\n  const [isModalOpen, setModalOpen] = useState(false)\n  const { address: safeAddress = '', owners, threshold = 1 } = useSelector(currentSafe)\n  const granted = useSelector(grantedSelector)\n\n  const toggleModal = () => {\n    setModalOpen((prevOpen) => !prevOpen)\n  }\n\n  return (\n    <>\n      <Block className={classes.container}>\n        <Heading tag=\"h2\">Required Confirmations</Heading>\n        <Paragraph>Any transaction requires the confirmation of:</Paragraph>\n        <Paragraph className={classes.ownersText} size=\"lg\">\n          <Bold>{threshold}</Bold> out of <Bold>{owners?.length || 0}</Bold> owners\n        </Paragraph>\n        {owners && owners.length > 1 && granted && (\n          <Row className={classes.buttonRow}>\n            <Track {...SETTINGS_EVENTS.THRESHOLD.CHANGE}>\n              <Button\n                className={classes.modifyBtn}\n                color=\"primary\"\n                minWidth={120}\n                onClick={toggleModal}\n                variant=\"contained\"\n              >\n                Change\n              </Button>\n            </Track>\n          </Row>\n        )}\n      </Block>\n      <Modal\n        description=\"Change Required Confirmations Form\"\n        handleClose={toggleModal}\n        open={isModalOpen}\n        title=\"Change Required Confirmations\"\n      >\n        <ChangeThresholdModal\n          onClose={toggleModal}\n          ownersCount={owners?.length}\n          safeAddress={safeAddress}\n          threshold={threshold}\n        />\n      </Modal>\n    </>\n  )\n}\n\nexport default ThresholdSettings\n"],"sourceRoot":""}