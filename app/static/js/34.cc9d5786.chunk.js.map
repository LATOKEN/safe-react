{"version":3,"sources":["routes/safe/components/Balances/SendModal/utils.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/Table/TableHead.tsx","components/layout/Heading/index.module.scss","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/ButtonHelper/index.tsx","components/Table/sorting.ts","components/Table/index.tsx","components/forms/AddressInput/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","components/layout/Typography/index.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx"],"names":["getStepTitle","currentStep","totalSteps","styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cx","classNames","bind","Heading","props","children","tag","truncate","capitalize","undefined","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","state","previous","_proto","componentDidUpdate","_this$props","setState","render","OnChange","_ref","createElement","Field","subscription","allowNull","UnStyledButton","styled","theme","colors","separator","ButtonHelper","dataTestId","type","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","defaultOrder","newOrder","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","AddressInput","text","placeholder","fieldMutator","inputAdornment","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","TextField","spellCheck","validate","formContainer","md","minHeight","gap","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","formMutators","setOwnerAddress","args","utils","changeValue","setOwnerName","OwnerForm","onSubmit","initialValues","addressBookMap","useSelector","currentNetworkAddressBookAsMap","currentSafe","safeAddress","owners","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","ModalHeader","subTitle","GnoForm","ownerName","ownerAddress","values","mutators","scannedAddress","startsWith","replace","xs","validAddressBookName","isValidAddress","center","Footer","Buttons","cancelButtonProps","confirmButtonProps","info","textAlign","flexDirection","details","borderRight","border","overflow","ownersTitle","owner","textOverflow","selectedOwner","paddingLeft","Overline","ReviewAddOwner","onClickBack","setData","currentSafeWithNames","safeName","safeVersion","currentVersion","connectedWalletAddress","userAccountSelector","isCurrent","calculateAddOwnerData","log","getSafeSDK","sdk","getAddOwnerTx","threshold","safeTxGas","safeTx","txData","_811","TxModalWrapper","onBack","weight","PrefixedEthHashInfo","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","headingText","fontSize","ownersText","inputRow","errorText","bottom","ThresholdForm","numOptions","toString","SelectField","Array","x","MenuItem","mustBeInteger","minValue","maxValue","sendAddOwner","txParameters","dispatch","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","trackEvent","SETTINGS_EVENTS","THRESHOLD","OWNERS","store","getState","AddOwnerModal","activeScreen","setActiveScreen","setValues","useDispatch","useSafeAddress","currentSafeCurrentVersion","chainId","currentChainId","onAddOwner","addressBookAddOrUpdate","makeAddressBookEntry","_808","paperClassName","newValues","stateValues","manage","container","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","pristine","initialValue","justify","CheckOwner","ReviewRemoveOwnerModal","calculateRemoveOwnerData","getRemoveOwnerTx","ErrorCodes","_812","safeOwner","sameAddress","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","RemoveOwnerModal","onRemoveOwner","_809","cpValues","marginRight","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","calculateReplaceOwnerData","getSwapOwnerTx","oldOwnerAddress","newOwnerAddress","_813","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","onReplaceOwner","_getChainId","_810","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","paddingBottom","annotation","hide","visibility","actions","noBorderBottom","borderBottom","editOwnerIcon","replaceOwnerIcon","controlsRow","borderRadius","removeOwnerIcon","RENAME_OWNER_BTN_TEST_ID","REMOVE_OWNER_BTN_TEST_ID","ADD_OWNER_BTN_TEST_ID","REPLACE_OWNER_BTN_TEST_ID","OWNERS_ROW_TEST_ID","ManageOwners","granted","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","action","row","prevState","onHide","Boolean","nameColumn","toLowerCase","custom","addressColumn","actionsColumn","generateColumns","autoColumns","c","ownerData","getOwnerData","TableContainer","TableRow","cn","TableCell","Track","EDIT_OWNER","tooltip","REPLACE_OWNER","REMOVE_OWNER","end","ADD_OWNER"],"mappings":"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","file":"static/js/34.cc9d5786.chunk.js","sourcesContent":["export const getStepTitle = (currentStep: number, totalSteps: number): string => `Step ${currentStep} of ${totalSteps}`\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { FieldMetaState } from 'react-final-form'\nimport { FormControlProps } from '@material-ui/core/FormControl/FormControl'\n\nconst style = {\n  minWidth: '100%',\n}\n\ntype Props = {\n  classes: SelectProps['classes']\n  label: SelectProps['label']\n  renderValue: SelectProps['renderValue']\n  disableError: boolean\n  formControlProps: FormControlProps\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: FieldMetaState<any>\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}: Props): React.ReactElement => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        variant=\"outlined\"\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort =\n    (property: string, orderAttr: string): (() => void) =>\n    () => {\n      const { onSort } = this.props\n\n      onSort(property, orderAttr)\n    }\n\n  render(): React.ReactElement {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nconst UnStyledButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 50%;\n  transition: background-color 0.2s ease-in-out;\n  outline-color: transparent;\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.separator};\n  }\n`\ntype Props = {\n  onClick?: () => void\n  children: ReactElement\n  dataTestId?: string\n}\n\nconst ButtonHelper = ({ onClick = () => undefined, children, dataTestId }: Props): React.ReactElement => {\n  return (\n    <UnStyledButton onClick={onClick} type={'button'} data-testid={dataTestId}>\n      {children}\n    </UnStyledButton>\n  )\n}\n\nexport default ButtonHelper\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => {\n  const [currentInput, setCurrentInput] = useState<string>('')\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\n  const resolvedAddress = resolutions[currentInput]\n  const isResolving = resolvedAddress === ''\n\n  // External validators must receive an unprefixed address\n  const sanitizedValidators = useCallback(\n    (val: string) => {\n      const parsed = parsePrefixedAddress(val)\n      return composeValidators(...validators)(parsed.address)\n    },\n    [validators],\n  )\n\n  // Internal validators + externally passed validators\n  const allValidators = useMemo(\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\n    [sanitizedValidators],\n  )\n\n  const onValueChange = useCallback(\n    (rawVal: string) => {\n      const address = trimSpaces(rawVal)\n\n      setCurrentInput(rawVal)\n\n      // A crypto domain name\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\n        getAddressFromDomain(address)\n          .then((resolverAddr) => {\n            const formattedAddress = checksumAddress(resolverAddr)\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\n          })\n          .catch((err) => {\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\n            logError(Errors._101, err.message)\n          })\n      } else {\n        // A regular address hash\n        if (!mustBeEthereumAddress(address)) {\n          const parsed = parsePrefixedAddress(address)\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\n\n          // Field mutator (parent component) always gets an unprefixed address\n          fieldMutator(checkedAddress)\n        }\n      }\n    },\n    [setCurrentInput, setResolutions, fieldMutator],\n  )\n\n  useEffect(() => {\n    if (resolvedAddress) {\n      onValueChange(resolvedAddress)\n    }\n  }, [resolvedAddress, onValueChange])\n\n  const adornment = isResolving\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CircularProgress size=\"16px\" />\n          </InputAdornment>\n        ),\n      }\n    : inputAdornment\n\n  return (\n    <>\n      <Field\n        className={className}\n        component={TextField as any}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        inputAdornment={adornment}\n        name={name}\n        placeholder={placeholder}\n        label={text}\n        spellCheck={false}\n        validate={allValidators}\n        inputProps={{\n          'data-testid': testId,\n        }}\n      />\n\n      <OnChange name={name}>{onValueChange}</OnChange>\n    </>\n  )\n}\n\nexport default AddressInput\n","import { lg, md } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { Mutator } from 'final-form'\n\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport { styles } from './style'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { OwnerValues } from '../..'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values) => void\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\n  const classes = useStyles()\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners = [] } = useSelector(currentSafe)\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle={getStepTitle(1, 3)} />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        initialValues={{\n          ownerName: initialValues?.ownerName,\n          ownerAddress: initialValues?.ownerAddress,\n        }}\n        onSubmit={handleSubmit}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row margin=\"md\">\n                  <Paragraph>Add a new owner to the active Safe</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\n                      label=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\n                  confirmButtonProps={{\n                    type: 'submit',\n                    text: 'Next',\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\n                  }}\n                />\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core/styles'\n\nexport const styles = createStyles({\n  root: {\n    height: '372px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 2px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: `${sm} ${lg}`,\n  },\n  owner: {\n    padding: `${sm} ${lg}`,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  selectedOwner: {\n    padding: `${sm} ${lg}`,\n    alignItems: 'center',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n})\n","import styled from 'styled-components'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nexport const Overline = styled(Paragraph)`\n  font-size: 11px;\n  line-height: 14px;\n  letter-spacing: 1px;\n`\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { OwnerValues } from '../..'\nimport { styles } from './style'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { Overline } from 'src/components/layout/Typography'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nconst useStyles = makeStyles(styles)\n\ntype ReviewAddOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  values: OwnerValues\n}\n\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateAddOwnerData = async () => {\n      try {\n        console.log('go get sdk for', connectedWalletAddress, safeAddress, safeVersion)\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        console.log('got sdk ', sdk)\n        const safeTx = await sdk.getAddOwnerTx(\n          { ownerAddress: values.ownerAddress, threshold: +values.threshold },\n          { safeTxGas: 0 },\n        )\n        console.log('go safeTx', safeTx)\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(Errors._811, error.message)\n      }\n    }\n    calculateAddOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [connectedWalletAddress, safeAddress, safeVersion, values.ownerAddress, values.threshold])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle={getStepTitle(3, 3)} />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${(owners?.length || 0) + 1} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map((owner) => (\n              <Fragment key={owner.address}>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Fragment>\n            ))}\n            <Row align=\"center\" className={classes.info}>\n              <Overline noMargin>ADDING NEW OWNER &darr;</Overline>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner} data-testid=\"add-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={values.ownerAddress}\n                  name={values.ownerName}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(values.ownerAddress)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype SubmitProps = {\n  threshold: number\n}\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (values: SubmitProps) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe)\n  const numOptions = owners ? owners.length + 1 : 0\n\n  const handleSubmit = (values: SubmitProps) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle={getStepTitle(2, 3)} />\n      <Hairline />\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Row>\n                <Paragraph className={classes.headingText} weight=\"bolder\">\n                  Set the required owner confirmations:\n                </Paragraph>\n              </Row>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name=\"threshold\"\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(numOptions))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    out of {numOptions} owner(s)\n                  </Paragraph>\n                </Col>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Modal.Footer.Buttons\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                confirmButtonProps={{\n                  type: 'submit',\n                  text: 'Review',\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\n                }}\n              />\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { OwnerForm } from './screens/OwnerForm'\nimport { ReviewAddOwner } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafe, currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport { store } from 'src/store'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\nexport type OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendAddOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  txParameters: TxParameters,\n  dispatch: Dispatch,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getAddOwnerTx(\n    { ownerAddress: values.ownerAddress, threshold: +values.threshold },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n\n  trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.THRESHOLD, label: values.threshold })\n  trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.OWNERS, label: currentSafe(store.getState()).owners.length })\n}\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\n  const dispatch = useDispatch()\n  const { safeAddress } = useSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const chainId = useSelector(currentChainId)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('selectOwner')\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewAddOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('selectOwner')\n    }\n  }\n\n  const ownerSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      ownerName: newValues.ownerName,\n      ownerAddress: checksumAddress(newValues.ownerAddress),\n    }))\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      threshold: newValues.threshold,\n    }))\n    setActiveScreen('reviewAddOwner')\n  }\n\n  const onAddOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendAddOwner(\n        values,\n        safeAddress,\n        safeVersion,\n        txParameters,\n        dispatch,\n        connectedWalletAddress,\n        delayExecution,\n      )\n      dispatch(\n        addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress, chainId })),\n      )\n    } catch (error) {\n      logError(Errors._808, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Add owner to Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Add owner to Safe\"\n    >\n      <>\n        {activeScreen === 'selectOwner' && (\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\n        )}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewAddOwner' && (\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: lg,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    container: {\n      padding: `${md} ${lg}`,\n      minHeight: '200px',\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n  }),\n)\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { currentChainId } from 'src/logic/config/store/selectors'\n\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\n\ntype OwnProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const chainId = useSelector(currentChainId)\n\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\n    // Update the value only if the ownerName really changed\n    if (ownerName !== owner.name) {\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName, chainId })))\n    }\n    onClose()\n  }\n\n  return (\n    <Modal\n      description=\"Edit owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"smaller-modal-window\"\n      title=\"Edit owner from Safe\"\n    >\n      <ModalHeader onClose={onClose} title=\"Edit owner name\" />\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\n        {(...args) => {\n          const pristine = args[2].pristine\n          return (\n            <>\n              <Block className={classes.container}>\n                <Row margin=\"md\">\n                  <Field\n                    component={TextField}\n                    initialValue={owner.name}\n                    name=\"ownerName\"\n                    placeholder=\"Owner name*\"\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\n                    label=\"Owner name*\"\n                    type=\"text\"\n                    validate={composeValidators(required, validAddressBookName)}\n                  />\n                </Row>\n                <Row>\n                  <Block justify=\"center\">\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Block>\n                </Row>\n              </Block>\n              <GenericModal.Footer>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n  }),\n)\n","import { ReactElement } from 'react'\n\nimport { getExplorerInfo } from 'src/config'\nimport { Modal } from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\n\ninterface CheckOwnerProps {\n  onClose: () => void\n  onSubmit: () => void\n  owner: OwnerData\n}\n\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle={getStepTitle(1, 3)} title=\"Remove owner\" />\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"md\">\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\n        </Row>\n        <Row>\n          <Col align=\"center\" xs={12}>\n            <PrefixedEthHashInfo\n              hash={owner.address}\n              name={owner.name}\n              showCopyBtn\n              showAvatar\n              explorerUrl={getExplorerInfo(owner.address)}\n            />\n          </Col>\n        </Row>\n      </Block>\n      <Modal.Footer>\n        <Modal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\n        />\n      </Modal.Footer>\n    </>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, border, lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: `${sm} ${lg}`,\n    },\n    owner: {\n      padding: `${sm} ${lg}`,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwner: {\n      padding: `${sm} ${lg}`,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { logError } from 'src/logic/exceptions/CodedException'\nimport ErrorCodes from 'src/logic/exceptions/registry'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { Overline } from 'src/components/layout/Typography'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\ntype ReviewRemoveOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  owner: OwnerData\n  threshold?: number\n}\n\nexport const ReviewRemoveOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  threshold = 1,\n}: ReviewRemoveOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const numOptions = owners ? owners.length - 1 : 0\n\n  useEffect(() => {\n    let isCurrent = true\n\n    if (!threshold) {\n      console.error(\"Threshold value was not define, tx can't be executed\")\n      return\n    }\n\n    const calculateRemoveOwnerData = async () => {\n      try {\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        const safeTx = await sdk.getRemoveOwnerTx(\n          { ownerAddress: owner.address, threshold: +threshold },\n          { safeTxGas: 0 },\n        )\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(ErrorCodes._812, error.message)\n      }\n    }\n    calculateRemoveOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, threshold])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Remove owner\" subTitle={getStepTitle(3, 3)} />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          {/* Details */}\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${threshold} out of ${numOptions} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          {/* Owners */}\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${numOptions} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map(\n              (safeOwner) =>\n                !sameAddress(safeOwner.address, owner.address) && (\n                  <Fragment key={safeOwner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <PrefixedEthHashInfo\n                          hash={safeOwner.address}\n                          name={safeOwner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(safeOwner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Overline noMargin>REMOVING OWNER &darr;</Overline>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwner} data-testid=\"remove-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={owner.address}\n                  name={owner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(owner.address)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    headingText: {\n      fontSize: md,\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n    errorText: {\n      position: 'absolute',\n      bottom: '-25px',\n    },\n  }),\n)\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe)\n  const ownersCount = owners?.length ?? 0\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle={getStepTitle(2, 3)} title=\"Remove owner\" />\n      <Hairline />\n      <GnoForm\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\n        onSubmit={handleSubmit}\n      >\n        {() => {\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\n                    Set the required owner confirmations:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                </Row>\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                  <Col xs={2}>\n                    <Field\n                      data-testid=\"threshold-select-input\"\n                      name=\"threshold\"\n                      render={(props) => (\n                        <>\n                          <SelectField {...props} disableError>\n                            {[...Array(Number(numOptions))].map((x, index) => (\n                              <MenuItem key={index} value={`${index + 1}`}>\n                                {index + 1}\n                              </MenuItem>\n                            ))}\n                          </SelectField>\n                          {props.meta.error && props.meta.touched && (\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                              {props.meta.error}\n                            </Paragraph>\n                          )}\n                        </>\n                      )}\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                    />\n                  </Col>\n                  <Col xs={10}>\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\n                    </Paragraph>\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { CheckOwner } from './screens/CheckOwner'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { ReviewRemoveOwnerModal } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafe, currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport { store } from 'src/store'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\ntype OwnerValues = OwnerData & {\n  threshold: string\n}\n\nexport const sendRemoveOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getRemoveOwnerTx(\n    { ownerAddress: ownerAddressToRemove, threshold: +values.threshold },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n\n  trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.THRESHOLD, label: values.threshold })\n  trackEvent({ ...SETTINGS_EVENTS.THRESHOLD.OWNERS, label: currentSafe(store.getState()).owners.length })\n}\n\ntype RemoveOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\n  const dispatch = useDispatch()\n  const { safeAddress } = useSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewRemoveOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('checkOwner')\n    }\n  }\n\n  const ownerSubmitted = () => {\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    const cpValues = { ...values, threshold: newValues.threshold }\n    setValues(cpValues)\n    setActiveScreen('reviewRemoveOwner')\n  }\n\n  const onRemoveOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendRemoveOwner(\n        values,\n        safeAddress,\n        safeVersion,\n        owner.address,\n        dispatch,\n        txParameters,\n        connectedWalletAddress,\n        delayExecution,\n      )\n    } catch (error) {\n      logError(Errors._809, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Remove owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Remove owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewRemoveOwner' && (\n          <ReviewRemoveOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onRemoveOwner}\n            owner={owner}\n            threshold={Number(values.threshold)}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    owner: {\n      alignItems: 'center',\n    },\n    address: {\n      marginRight: sm,\n    },\n  }),\n)\n","import { Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { useStyles } from './style'\nimport { getExplorerInfo } from 'src/config'\n\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\n\nimport { OwnerValues } from '../..'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\ntype NewOwnerProps = {\n  ownerAddress: string\n  ownerName: string\n}\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values: NewOwnerProps) => void\n  owner: OwnerData\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\n  const classes = useStyles()\n\n  const handleSubmit = (values: NewOwnerProps) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners } = useSelector(currentSafe)\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle={getStepTitle(1, 2)} />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        onSubmit={handleSubmit}\n        initialValues={{\n          ownerName: initialValues?.name,\n          ownerAddress: initialValues?.address,\n        }}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph>\n                    Review the owner you want to replace from the active Safe. Then specify the new owner you want to\n                    replace it with:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph>Current owner</Paragraph>\n                </Row>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <PrefixedEthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Paragraph>New owner</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\n                      label=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: `${sm} ${lg}`,\n    },\n    owner: {\n      padding: `${sm} ${lg}`,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwnerRemoved: {\n      padding: `${sm} ${lg}`,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    selectedOwnerAdded: {\n      padding: `${sm} ${lg}`,\n      alignItems: 'center',\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { Overline } from 'src/components/layout/Typography'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\n\ntype ReplaceOwnerProps = {\n  onClose: () => void\n  onClickBack: () => void\n  onSubmit: (txParameters: TxParameters, delayExecution: boolean) => void\n  owner: OwnerData\n  newOwner: {\n    address: string\n    name: string\n  }\n}\n\nexport const ReviewReplaceOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  newOwner,\n}: ReplaceOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    threshold = 1,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateReplaceOwnerData = async () => {\n      try {\n        const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n        const safeTx = await sdk.getSwapOwnerTx(\n          { oldOwnerAddress: owner.address, newOwnerAddress: newOwner.address },\n          { safeTxGas: 0 },\n        )\n        const txData = safeTx.data.data\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        logError(Errors._813, error.message)\n      }\n    }\n    calculateReplaceOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, connectedWalletAddress, owner.address, newOwner.address])\n\n  return (\n    <TxModalWrapper txData={data} onSubmit={onSubmit} onBack={onClickBack}>\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle={getStepTitle(2, 2)} />\n      <Hairline />\n      <Block margin=\"md\">\n        <Row className={classes.root}>\n          <Col layout=\"column\" xs={4}>\n            <Block className={classes.details}>\n              <Block margin=\"lg\">\n                <Paragraph color=\"primary\" noMargin size=\"lg\">\n                  Details\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Safe name\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {safeName}\n                </Paragraph>\n              </Block>\n              <Block margin=\"lg\">\n                <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                  Any transaction requires the confirmation of:\n                </Paragraph>\n                <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                  {`${threshold} out of ${owners?.length || 0} owner(s)`}\n                </Paragraph>\n              </Block>\n            </Block>\n          </Col>\n          <Col className={classes.owners} layout=\"column\" xs={8}>\n            <Row className={classes.ownersTitle}>\n              <Paragraph color=\"primary\" noMargin size=\"lg\">\n                {`${owners?.length || 0} Safe owner(s)`}\n              </Paragraph>\n            </Row>\n            <Hairline />\n            {owners?.map(\n              (safeOwner) =>\n                !sameAddress(safeOwner.address, owner.address) && (\n                  <Fragment key={safeOwner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <PrefixedEthHashInfo\n                          hash={safeOwner.address}\n                          name={safeOwner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(safeOwner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </Fragment>\n                ),\n            )}\n            <Row align=\"center\" className={classes.info}>\n              <Overline noMargin>REMOVING OWNER &darr;</Overline>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerRemoved} data-testid=\"remove-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={owner.address}\n                  name={owner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(owner.address)}\n                />\n              </Col>\n            </Row>\n            <Row align=\"center\" className={classes.info}>\n              <Overline noMargin>ADDING NEW OWNER &darr;</Overline>\n            </Row>\n            <Hairline />\n            <Row className={classes.selectedOwnerAdded} data-testid=\"add-owner-review\">\n              <Col align=\"center\" xs={12}>\n                <PrefixedEthHashInfo\n                  hash={newOwner.address}\n                  name={newOwner.name}\n                  showCopyBtn\n                  showAvatar\n                  explorerUrl={getExplorerInfo(newOwner.address)}\n                />\n              </Col>\n            </Row>\n            <Hairline />\n          </Col>\n        </Row>\n        <Hairline />\n      </Block>\n    </TxModalWrapper>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { isValidAddress } from 'src/utils/isValidAddress'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { getSafeSDK } from 'src/logic/wallets/getWeb3'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { _getChainId } from 'src/config'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\nexport type OwnerValues = {\n  address: string\n  name: string\n}\n\nexport const sendReplaceOwner = async (\n  newOwner: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n  connectedWalletAddress: string,\n  delayExecution: boolean,\n): Promise<void> => {\n  const sdk = await getSafeSDK(connectedWalletAddress, safeAddress, safeVersion)\n  const safeTx = await sdk.getSwapOwnerTx(\n    { oldOwnerAddress: ownerAddressToRemove, newOwnerAddress: newOwner.address },\n    { safeTxGas: 0 },\n  )\n  const txData = safeTx.data.data\n\n  await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n      delayExecution,\n    }),\n  )\n}\n\ntype ReplaceOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\n  const dispatch = useDispatch()\n  const { safeAddress } = useSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setNewOwner({ address: '', name: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => setActiveScreen('checkOwner')\n\n  const ownerSubmitted = (newValues) => {\n    const { ownerAddress, ownerName } = newValues\n\n    if (isValidAddress(ownerAddress)) {\n      const checksumAddr = checksumAddress(ownerAddress)\n      setNewOwner({ address: checksumAddr, name: ownerName })\n      setActiveScreen('reviewReplaceOwner')\n    }\n  }\n\n  const onReplaceOwner = async (txParameters: TxParameters, delayExecution: boolean) => {\n    onClose()\n\n    try {\n      await sendReplaceOwner(\n        newOwner,\n        safeAddress,\n        safeVersion,\n        owner.address,\n        dispatch,\n        txParameters,\n        connectedWalletAddress,\n        delayExecution,\n      )\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ ...newOwner, chainId: _getChainId() })))\n    } catch (error) {\n      logError(Errors._810, error.message)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Replace owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Replace owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\n        )}\n        {activeScreen === 'reviewReplaceOwner' && (\n          <ReviewReplaceOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onReplaceOwner}\n            owner={owner}\n            newOwner={newOwner}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const OWNERS_TABLE_NAME_ID = 'name'\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\n\nexport type OwnerData = { address: string; name: string }\n\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\n  return owners.map((owner) => ({\n    [OWNERS_TABLE_NAME_ID]: owner.name,\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const nameColumn: TableColumn = {\n    id: OWNERS_TABLE_NAME_ID,\n    order: false,\n    formatTypeSort: (value: string) => value.toLowerCase(),\n    disablePadding: false,\n    label: 'Name',\n    width: 150,\n    custom: false,\n    align: 'left',\n  }\n\n  const addressColumn: TableColumn = {\n    id: OWNERS_TABLE_ADDRESS_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Address',\n    custom: false,\n    align: 'left',\n  }\n\n  const actionsColumn: TableColumn = {\n    id: OWNERS_TABLE_ACTIONS_ID,\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n  }\n\n  return List([nameColumn, addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      minHeight: '420px',\n    },\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: `${background}`,\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n      gap: '16px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    editOwnerIcon: {\n      cursor: 'pointer',\n    },\n    replaceOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    controlsRow: {\n      backgroundColor: 'white',\n      padding: lg,\n      borderRadius: sm,\n    },\n    removeOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n  }),\n)\n","import { useState, ReactElement } from 'react'\nimport { Icon } from '@gnosis.pm/safe-react-components'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport cn from 'classnames'\n\nimport { AddOwnerModal } from './AddOwnerModal'\nimport { EditOwnerModal } from './EditOwnerModal'\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\nimport { useStyles } from './style'\n\nimport { getExplorerInfo } from 'src/config'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\nimport Track from 'src/components/Track'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\n\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\n\ntype Props = {\n  granted: boolean\n  owners: AddressBookState\n}\n\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\n  const classes = useStyles()\n\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\n  const [modalsStatus, setModalStatus] = useState({\n    showAddOwner: false,\n    showRemoveOwner: false,\n    showReplaceOwner: false,\n    showEditOwner: false,\n  })\n\n  const onShow = (action, row?: OwnerData) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !prevState[`show${action}`],\n    }))\n    if (row) {\n      setSelectedOwner(row)\n    }\n  }\n\n  const onHide = (action) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\n    }))\n    setSelectedOwner(undefined)\n  }\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const ownerData = getOwnerData(owners)\n\n  return (\n    <>\n      <Block className={classes.formContainer}>\n        <Heading className={classes.title} tag=\"h2\">\n          Manage Safe Owners\n        </Heading>\n        <Paragraph className={classes.annotation}>\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\n          with Safe or any third parties.\n        </Paragraph>\n        <TableContainer>\n          <Table\n            columns={columns}\n            data={ownerData}\n            defaultFixed\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\n            disablePagination\n            label=\"Owners\"\n            noBorder\n            size={ownerData.length}\n          >\n            {(sortedData) =>\n              sortedData.map((row, index) => (\n                <TableRow\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                  data-testid={OWNERS_ROW_TEST_ID}\n                  key={index}\n                >\n                  {autoColumns.map((column: any) => (\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\n                        <Block justify=\"left\">\n                          <PrefixedEthHashInfo\n                            hash={row[column.id]}\n                            showCopyBtn\n                            showAvatar\n                            explorerUrl={getExplorerInfo(row[column.id])}\n                          />\n                        </Block>\n                      ) : (\n                        row[column.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <Track {...SETTINGS_EVENTS.OWNERS.EDIT_OWNER}>\n                        <ButtonHelper onClick={onShow('EditOwner', row)} dataTestId={RENAME_OWNER_BTN_TEST_ID}>\n                          <Icon size=\"sm\" type=\"edit\" color=\"icon\" tooltip=\"Edit owner\" />\n                        </ButtonHelper>\n                      </Track>\n                      {granted && (\n                        <>\n                          <Track {...SETTINGS_EVENTS.OWNERS.REPLACE_OWNER}>\n                            <ButtonHelper onClick={onShow('ReplaceOwner', row)} dataTestId={REPLACE_OWNER_BTN_TEST_ID}>\n                              <Icon size=\"sm\" type=\"replaceOwner\" color=\"icon\" tooltip=\"Replace owner\" />\n                            </ButtonHelper>\n                          </Track>\n                          {ownerData.length > 1 && (\n                            <Track {...SETTINGS_EVENTS.OWNERS.REMOVE_OWNER}>\n                              <ButtonHelper onClick={onShow('RemoveOwner', row)} dataTestId={REMOVE_OWNER_BTN_TEST_ID}>\n                                <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove owner\" />\n                              </ButtonHelper>\n                            </Track>\n                          )}\n                        </>\n                      )}\n                    </Row>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </Table>\n        </TableContainer>\n      </Block>\n      {granted && (\n        <>\n          <Hairline />\n          <Row align=\"end\" className={classes.controlsRow} grow>\n            <Col end=\"xs\">\n              <Track {...SETTINGS_EVENTS.OWNERS.ADD_OWNER}>\n                <Button\n                  color=\"primary\"\n                  onClick={onShow('AddOwner')}\n                  size=\"small\"\n                  testId={ADD_OWNER_BTN_TEST_ID}\n                  variant=\"contained\"\n                >\n                  Add new owner\n                </Button>\n              </Track>\n            </Col>\n          </Row>\n        </>\n      )}\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\n      {selectedOwner && (\n        <>\n          <RemoveOwnerModal\n            isOpen={modalsStatus.showRemoveOwner}\n            onClose={onHide('RemoveOwner')}\n            owner={selectedOwner}\n          />\n          <ReplaceOwnerModal\n            isOpen={modalsStatus.showReplaceOwner}\n            onClose={onHide('ReplaceOwner')}\n            owner={selectedOwner}\n          />\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ManageOwners\n"],"sourceRoot":""}