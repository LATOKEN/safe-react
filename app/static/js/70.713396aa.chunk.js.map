{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../../src/utils.ts","../../src/actions.ts","../../src/constants.ts","../../src/streams.ts","../../src/pipe.ts","../../src/transformers.ts","../../src/system.ts","../../src/index.ts","../../src/comparators.tsx","../../src/domIOSystem.ts","../../src/loggerSystem.ts","../../src/propsReadySystem.ts","../../src/stateFlagsSystem.ts","../../src/scrollSeekSystem.ts","../../src/AATree.ts","../../src/utils/binaryArraySearch.ts","../../src/utils/correctItemSize.ts","../../src/sizeSystem.ts","../../src/scrollToIndexSystem.ts","../../src/sizeRangeSystem.ts","../../src/windowScrollerSystem.ts","../../src/gridSystem.ts","../../src/hooks/useSize.ts","../../src/hooks/useWindowViewportRect.ts","../../src/hooks/useIsomorphicLayoutEffect.ts","../../src/hooks/useChangedChildSizes.ts","../../src/hooks/useScrollTop.ts","../../src/initialTopMostItemIndexSystem.ts","../../src/followOutputSystem.ts","../../src/groupedListSystem.ts","../../src/listStateSystem.ts","../../src/utils/simpleMemoize.ts","../../src/initialItemCountSystem.ts","../../src/topItemCountSystem.ts","../../src/totalListHeightSystem.ts","../../src/upwardScrollFixSystem.ts","../../src/initialScrollTopSystem.ts","../../src/alignToBottomSystem.ts","../../src/scrollIntoViewSystem.ts","../../src/listSystem.ts","../../src/utils/positionStickyCssValue.ts","../../src/List.tsx","../../src/Grid.tsx","../../src/Table.tsx","../../src/components.tsx"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","compose","a","b","thrush","arg","proc","curry2to1","arg1","arg2","curry1to0","prop","property","object","tap","tup","args","call","always","value","joinProc","procs","noop","subscribe","emitter","subscription","publish","publisher","reset","getValue","depot","connect","handleNext","unsub","stream","subscriptions","indexOf","Error","statefulStream","initial","innerSubject","action","streamFromEmitter","statefulStreamFromEmitter","combineOperators","operators","pipe","source","project","defaultComparator","previous","next","distinctUntilChanged","comparator","done","current","filter","predicate","map","mapTo","scan","scanner","skip","times","throttleTime","interval","currentValue","timeout","setTimeout","debounceTime","clearTimeout","withLatestFrom","sources","values","Array","called","pendingCall","allCalled","Math","bit","prevCalled","concat","merge","duc","combineLatest","emitters","system","constructor","dependencies","singleton","id","Symbol","useIsomorphicLayoutEffect","document","systemToComponent","systemSpec","Root","requiredPropNames","Object","optionalPropNames","methodNames","eventNames","Context","createContext","requiredPropName","optionalPropName","handlers","cleanup","currentSubscription","eventHandler","Component","forwardRef","children","propsWithChildren","useState","singletons","_init","init","applyPropsToSystem","buildEventHandlers","eventName","useImperativeHandle","acc","buildMethods","createElement","result","index","idx","len","keys","obj","omit","usePublisher","useCallback","useEmitterValue","useContext","setValue","useEmitter","callback","tupleComparator","prev","rangeComparator","startIndex","endIndex","LogLevel","domIOSystem","u","scrollContainerState","scrollTop","deviation","smoothScrollTargetReached","statefulScrollTop","viewportHeight","scrollHeight","headerHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","CONSOLE_METHOD_MAP","DEBUG","INFO","_CONSOLE_METHOD_MAP","WARN","ERROR","loggerSystem","logLevel","log","label","message","level","globalThis","window","console","propsReadySystem","_ref","propsReady","didMount","ready","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","state","offsetBottom","stateFlagsSystem","_ref$","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","isScrolling","isScrollingBy","top","atBottomState","_ref2","atBottomBecause","scrollTopDelta","_headerHeight","lastJumpDueToItemResize","_ref3","jump","changed","scrollDirection","direction","prevScrollTop","scrollVelocity","_","scrollSeekSystem","isSeeking","rangeChanged","scrollSeekConfiguration","speed","config","range","enter","exit","velocity","change","scrollSeekRangeChanged","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","key","last","adjust","clone","deleteLast","remove","findMaxKeyValue","field","Infinity","insert","split","skew","walkWithin","start","end","push","walk","isSingle","rl","rlvl","rangesWithin","arrayToRanges","items","parser","length","i","nextIndex","nextValue","findIndexOfClosestSmallerOrEqual","floor","match","join","findClosestSmallerOrEqual","el","dimension","round","getBoundingClientRect","rangeIncludes","refRange","size","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","arrayBinarySearch","kv","slice","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","ranges","groupIndices","newSizeTree","groupSize","itemSize","reduce","tree","groupIndex","insertRanges","min","overlappingRanges","some","_step2","firstPassDone","shouldInsert","rangeStart","rangeEnd","rangeValue","newOffsetTree","c","groupOffsetTree","offsetOf","sizes","hasGroups","groupOffset","SIZE_MAP","offsetHeight","offsetWidth","sizeSystem","_ref4","sizeRanges","totalCount","statefulTotalCount","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","correctItemSize","data","indexes","_ref5","_ref6","_ref7","trackItemSizes","listRefresh","oldSizes","newSizes","_ref9","diff","val","_ref10","beforeUnshiftWith","_ref11","_ref12","shiftWithOffset","_ref13","_ref14","_ref15","max","SUPPORTS_SCROLL_TO_OPTIONS","documentElement","style","normalizeIndexLocation","location","align","behavior","scrollToIndexSystem","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","normalLocation","originalIndexFromItemIndex","retry","listChanged","timeoutRef","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","fixedHeaderHeight","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","customScrollParent","offsetTop","INITIAL_GRID_STATE","bottom","itemHeight","itemWidth","PROBE_GRID_STATE","ceil","buildItems","from","gridSystem","stateFlags","scrollSeek","initialItemCount","gridState","viewportDimensions","height","width","itemDimensions","startOffset","endOffset","item","viewport","viewportWidth","perRow","itemsPerRow","_gridLayout","gridLayout","endReached","startReached","itemTop","totalListHeight","viewportInfo","visibleWidth","visibleHeight","useSizeWithElRef","enabled","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","unobserve","useSize","useWindowViewportRectRef","calculateInfo","rect","customScrollParentRect","deltaTop","innerHeight","pageYOffset","_useSizeWithElRef","scrollAndResizeEventHandler","useEffect","addEventListener","removeEventListener","useLayoutEffect","scrollContainerStateCallback","results","child","dataset","parseInt","knownSize","parseFloat","lastResult","scrollableElement","parentElement","firstElementChild","useScrollTop","scrollerElement","scrollerRefCallback","scrollerRef","scrollTopTarget","handler","ev","localRef","passive","scrollByCallback","scrollToCallback","isSmooth","abs","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","EMPTY_LIST_STATE","topItems","transposeItems","originalIndex","_step","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","type","buildListState","lastItem","listStateSystem","func","rangeTopListHeight","itemsRendered","listState","sizesValue","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","findRange","maxIndex","_step3","count","initialItemCountSystem","includedGroupsCount","adjustedCount","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","upwardScrollFixSystem","_ref$2","deviationOffset","prevItems","newDev","onlyItem","prevItem","find","pItem","amount","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","scrollIntoViewSystem","scrollIntoView","_ref2$","featureGroup1System","listSystem","domIO","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","position","_excluded","identity","listComponentPropsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","alias","warn","combinedSystem","propsSystem","deprecatedProps","addDeprecatedAlias","group","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","deprecateComponentProp","componentName","comp","_extends2","placeholder","DefaultScrollSeekPlaceholder","GROUP_STYLE","zIndex","overflowAnchor","Items","showTopList","_ref5$showTopList","windowScrollContainerStateCallback","_scrollContainerStateCallback","useChangedListContentsSizes","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","_useScrollTop","tabIndex","buildWindowScroller","_useScrollTop2","Viewport","viewportRef","WindowViewport","TopItemListContainer","TopItemList","required","optional","methods","events","TheViewport","WindowScroller","Scroller","List","_systemToComponent","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","listRef","firstItem","firstChild","tableComponentPropsSystem","fixedHeaderContent","TableComponent","TableHeadComponent","TableBodyComponent","TableRowComponent","FillerRow","padding","border","paddingTopEl","paddingBottomEl","theadRef","TheScroller","TheTable","TheTHead","theHead","borderSpacing","Virtuoso"],"mappings":"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","file":"static/js/70.713396aa.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","/**\n * Utils includes\n * - a handful of functional utilities inspired by or taken from the [Ramda library](https://ramdajs.com/);\n * - TypeScript crutches - the [[tup]] function.\n *\n * Use these for your convenience - they are here so that urx is zero-dependency package.\n *\n * @packageDocumentation\n */\n\n/** @internal */\nexport interface Proc {\n  (): any\n}\n\n/**\n * Performs left to right composition of two functions.\n */\nexport function compose<I, A, R>(a: (arg: A) => R, b: (arg: I) => A): (arg: I) => R {\n  return (arg: I) => a(b(arg))\n}\n\n/**\n * Takes a value and applies a function to it.\n */\nexport function thrush<I, K>(arg: I, proc: (arg: I) => K) {\n  return proc(arg)\n}\n\n/**\n * Takes a 2 argument function and partially applies the first argument.\n */\nexport function curry2to1<T, K, R>(proc: (arg1: T, arg2: K) => R, arg1: T): (arg2: K) => R {\n  return arg2 => proc(arg1, arg2)\n}\n\n/**\n * Takes a 1 argument function and returns a function which when called, executes it with the provided argument.\n */\nexport function curry1to0<T, R>(proc: (arg: T) => R, arg: T): () => R {\n  return () => proc(arg)\n}\n\n/**\n * Returns a function which extracts the property from from the passed object.\n */\nexport function prop(property: string) {\n  return (object: any) => object[property]\n}\n\n/**\n * Calls callback with the first argument, and returns it.\n */\nexport function tap<T>(arg: T, proc: (arg: T) => any): T {\n  proc(arg)\n  return arg\n}\n\n/**\n *  Utility function to help typescript figure out that what we pass is a tuple and not a generic array.\n *  Taken from (this StackOverflow tread)[https://stackoverflow.com/questions/49729550/implicitly-create-a-tuple-in-typescript/52445008#52445008]\n */\nexport function tup<T extends Array<any>>(...args: T): T {\n  return args\n}\n\n/**\n * Calls the passed function.\n */\nexport function call(proc: Proc) {\n  proc()\n}\n\n/**\n * returns a function which when called always returns the passed value\n */\nexport function always<T>(value: T) {\n  return () => value\n}\n\n/**\n * returns a function which calls all passed functions in the passed order.\n * joinProc does not pass arguments or collect return values.\n */\nexport function joinProc(...procs: Proc[]) {\n  return () => {\n    procs.map(call)\n  }\n}\n\nexport function noop() {}\n","/**\n * urx Actions operate on streams - `publish` publishes data in a stream, and `subscribe` attaches a subscription to a stream.\n * @packageDocumentation\n */\nimport { PUBLISH, RESET, SUBSCRIBE, VALUE } from './constants'\nimport { curry2to1 } from './utils'\n\n/**\n * A Publisher is the **input end** of a Stream. The [[publish]] action publishes values in publishers.\n * @typeParam T the type of values to be published.\n */\nexport interface Publisher<T> {\n  /** @internal */\n  (action: PUBLISH, value: T): void\n}\n\n/**\n * An Emitter is the **output end** of a Stream. The [[subscribe]] action binds {@link Subscription | subscriptions} to emitters.\n * @typeParam T the type of values that will be emitted.\n */\nexport interface Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE, subscription: Subscription<T>): Unsubscribe\n  /** @internal */\n  (action: RESET): void\n}\n\n/**\n * Subscriptions are bound to Emitters with the [[subscribe]] action, and get called with the new values.\n * @typeParam T the Emitter value type.\n */\nexport interface Subscription<T> {\n  (value: T): any\n}\n\n/**\n * Subscribe-like actions return unsubscribe handles of the Unsubscribe type, which, when called, unbind the subscription.\n */\nexport interface Unsubscribe {\n  (): void\n}\n\n/**\n * Streams present both the input and the output ends of a stream.\n * A single stream instance can be both subscribed to and published in.\n */\nexport interface Stream<T> extends Publisher<T>, Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE | PUBLISH | RESET): any // fix for bug with pipe + connect\n}\n\n/**\n * Just like {@link Stream | streams}, stateful streams present both input and output ends of a stream.\n * A single stream instance can be both subscribed to and published in.\n * Stateful Streams can also act like depots, preserving the last passed value and immediately publishing it to new subscriptions.\n * [[getValue]] can be used to extract value from stateful streams.\n */\nexport interface StatefulStream<T> extends Publisher<T>, Emitter<T> {\n  /** @internal */\n  (action: SUBSCRIBE | PUBLISH | RESET | VALUE): any // fix for bug with pipe + connect\n  // StatefulStream should extend rather then duplicate the signature, but this somehow causes a bug in TS\n}\n\n/**\n * Subscribes the specified [[Subscription]] to the updates from the Emitter.\n * The emitter calls the subscription with the new data each time new data is published into it.\n *\n * ```ts\n * const foo = stream<number>();\n * subscribe(foo, (value) => console.log(value));\n * ```\n *\n * @returns an [[Unsubscribe]] handle  - calling it will unbind the subscription from the emitter.\n *```ts\n * const foo = stream<number>();\n * const unsub = subscribe(foo, (value) => console.log(value));\n * unsub();\n *```\n */\nexport function subscribe<T>(emitter: Emitter<T>, subscription: Subscription<T>): Unsubscribe {\n  return emitter(SUBSCRIBE, subscription)\n}\n\n/**\n * Publishes the value into the passed [[Publisher]].\n *\n * ```ts\n * const foo = stream<number>();\n * publish(foo, 42);\n * ```\n */\nexport function publish<T>(publisher: Publisher<T>, value: T) {\n  publisher(PUBLISH, value)\n}\n\n/**\n * Clears all subscriptions from the [[Emitter]].\n * ```ts\n * const foo = stream<number>();\n * subscribe(foo, (value) => console.log(value));\n * reset(foo);\n * publish(foo, 42);\n * ```\n */\nexport function reset(emitter: Emitter<any>) {\n  emitter(RESET)\n}\n\n/**\n * Extracts the current value from a stateful stream. Use it only as an escape hatch, as it violates the concept of reactive programming.\n * ```ts\n * const foo = statefulStream(42);\n * console.log(getValue(foo));\n * ```\n */\nexport function getValue<T>(depot: StatefulStream<T>): T {\n  return depot(VALUE)\n}\n\n/**\n * Connects two streams - any value emitted from the emitter will be published in the publisher.\n * ```ts\n * const foo = stream<number>();\n * const bar = stream<number>();\n * subscribe(bar, (value) => console.log(`Bar emitted ${value}`));\n *\n * connect(foo, bar);\n * publish(foo);\n * ```\n * @returns an [[Unsubscribe]] handle which will disconnect the two streams.\n */\nexport function connect<T>(emitter: Emitter<T>, publisher: Publisher<T>) {\n  return subscribe(emitter, curry2to1(publisher, PUBLISH))\n}\n\n/**\n * Executes the passed subscription at most once, for the next emit from the emitter.\n * ```ts\n * const foo = stream<number>()\n * handleNext(foo, value => console.log(value)) // called once, with 42\n * publish(foo, 42)\n * publish(foo, 43)\n * ```\n * @returns an [[Unsubscribe]] handle to unbind the subscription if necessary.\n */\nexport function handleNext<T>(emitter: Emitter<T>, subscription: Subscription<T>) {\n  const unsub = emitter(SUBSCRIBE, value => {\n    unsub()\n    subscription(value)\n  })\n  return unsub\n}\n","export const PUBLISH = 0 as const\nexport type PUBLISH = typeof PUBLISH\n\nexport const SUBSCRIBE = 1 as const\nexport type SUBSCRIBE = typeof SUBSCRIBE\n\nexport const RESET = 2 as const\nexport type RESET = typeof RESET\n\nexport const VALUE = 4 as const\nexport type VALUE = typeof VALUE\n","/**\n * Streams are the basic building blocks of a reactive system. Think of them as the system permanent \"data tubes\".\n *\n * A stream acts as both an [[Emitter]] and [[Publisher]]. Each stream can have multiple {@link Subscription | Subscriptions}.\n *\n * urx streams are either **stateless** or **stateful**.\n * Stateless streams emit data to existing subscriptions when published, without keeping track of it.\n * Stateful streams remember the last published value and immediately publish it to new subscriptions.\n *\n * ```ts\n * import { stream, statefulStream, publish, subscribe } from \"@virtuoso.dev/urx\";\n *\n * // foo is a stateless stream\n * const foo = stream<number>();\n *\n * publish(foo, 42);\n * // this subsription will not be called...\n * subscribe(foo, (value) => console.log(value));\n * // it will only catch published values after it\n * publish(foo, 43);\n *\n * // stateful streams always start with an initial value\n * const bar = statefulStream(42);\n *\n * // subscribing to a stateful stream\n * // immediately calls the subscription with the current value\n * subscribe(bar, (value) => console.log(value));\n *\n * // subsequent publishing works just like stateless streams\n * publish(bar, 43);\n * ```\n * @packageDocumentation\n */\n\nimport { Emitter, StatefulStream, Stream, Subscription, Unsubscribe, subscribe, connect } from './actions'\nimport { RESET, PUBLISH, SUBSCRIBE, VALUE } from './constants'\nimport { tap, noop } from './utils'\n\n/**\n * Constructs a new stateless stream.\n * ```ts\n * const foo = stream<number>();\n * ```\n * @typeParam T the type of values to publish in the stream.\n * @returns a [[Stream]]\n */\nexport function stream<T>(): Stream<T> {\n  const subscriptions = [] as Subscription<T>[]\n\n  return ((action: PUBLISH | SUBSCRIBE | RESET, arg: any) => {\n    switch (action) {\n      case RESET:\n        subscriptions.splice(0, subscriptions.length)\n        return\n      case SUBSCRIBE:\n        subscriptions.push(arg)\n        return () => {\n          const indexOf = subscriptions.indexOf(arg)\n          if (indexOf > -1) {\n            subscriptions.splice(indexOf, 1)\n          }\n        }\n      case PUBLISH:\n        subscriptions.slice().forEach(subscription => {\n          subscription(arg as T)\n        })\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  }) as Stream<T>\n}\n\n/**\n * Constructs a new stateful stream.\n * ```ts\n * const foo = statefulStream(42);\n * ```\n * @param initial the initial value in the stream.\n * @typeParam T the type of values to publish in the stream. If omitted, the function infers it from the initial value.\n * @returns a [[StatefulStream]]\n */\nexport function statefulStream<T>(initial: T): StatefulStream<T> {\n  let value: T = initial\n  const innerSubject = stream<T>()\n\n  return ((action: PUBLISH | SUBSCRIBE | RESET | VALUE, arg: any) => {\n    switch (action) {\n      case SUBSCRIBE:\n        const subscription = arg as Subscription<T>\n        subscription(value)\n        break\n      case PUBLISH:\n        value = arg as T\n        break\n      case VALUE:\n        return value\n    }\n    return innerSubject(action as any, arg)\n  }) as StatefulStream<T>\n}\n\n/**\n * Event handlers are special emitters which can have **at most one active subscription**.\n * Subscribing to an event handler unsubscribes the previous subscription, if present.\n * ```ts\n * const foo = stream<number>();\n * const fooEvent = eventHandler(foo);\n *\n * // will be called once with 42\n * subscribe(fooEvent, (value) => console.log(`Sub 1 ${value}`));\n * publish(foo, 42);\n *\n * // unsubscribes sub 1\n * subscribe(fooEvent, (value) => console.log(`Sub 2 ${value}`));\n * publish(foo, 43);\n * ```\n * @param emitter the source emitter.\n * @returns the single-subscription emitter.\n */\nexport function eventHandler<T>(emitter: Emitter<T>) {\n  let unsub: Unsubscribe | undefined\n  let currentSubscription: any\n  let cleanup = () => unsub && unsub()\n\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<T>) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (subscription) {\n          if (currentSubscription === subscription) {\n            return\n          }\n          cleanup()\n          currentSubscription = subscription\n          unsub = subscribe(emitter, subscription!)\n          return unsub\n        } else {\n          cleanup()\n          return noop\n        }\n      case RESET:\n        cleanup()\n        currentSubscription = null\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<T>\n}\n\n/**\n * Creates and connects a \"junction\" stream to the specified emitter. Often used with [[pipe]], to avoid the multiple evaluation of operator sets.\n *\n * ```ts\n * const foo = stream<number>();\n *\n * const fooX2 = pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`multiplying ${value}`);\n *     return value * 2;\n *   })\n * );\n *\n * subscribe(fooX2, (value) => console.log(value));\n * subscribe(fooX2, (value) => console.log(value));\n *\n * publish(foo, 42); // executes the map operator twice for each subscription.\n *\n * const sharedFooX2 = streamFromEmitter(pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`shared multiplying ${value}`);\n *     return value * 2;\n *   })\n * ));\n *\n * subscribe(sharedFooX2, (value) => console.log(value));\n * subscribe(sharedFooX2, (value) => console.log(value));\n *\n * publish(foo, 42);\n *```\n * @returns the resulting stream.\n */\nexport function streamFromEmitter<T>(emitter: Emitter<T>): Stream<T> {\n  return tap(stream<T>(), stream => connect(emitter, stream))\n}\n\n/**\n * Creates and connects a \"junction\" stateful stream to the specified emitter. Often used with [[pipe]], to avoid the multiple evaluation of operator sets.\n *\n * ```ts\n * const foo = stream<number>();\n *\n * const fooX2 = pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`multiplying ${value}`);\n *     return value * 2;\n *   })\n * );\n *\n * subscribe(fooX2, (value) => console.log(value));\n * subscribe(fooX2, (value) => console.log(value));\n *\n * publish(foo, 42); // executes the map operator twice for each subscription.\n *\n * const sharedFooX2 = statefulStreamFromEmitter(pipe(\n *   foo,\n *   map((value) => {\n *     console.log(`shared multiplying ${value}`);\n *     return value * 2;\n *   })\n * ), 42);\n *\n * subscribe(sharedFooX2, (value) => console.log(value));\n * subscribe(sharedFooX2, (value) => console.log(value));\n *\n * publish(foo, 42);\n *```\n * @param initial the initial value in the stream.\n * @returns the resulting stateful stream.\n */\nexport function statefulStreamFromEmitter<T>(emitter: Emitter<T>, initial: T): StatefulStream<T> {\n  return tap(statefulStream(initial), stream => connect(emitter, stream))\n}\n","/**\n *\n * Stream values can be transformed and controlled by {@link pipe | **piping**} through **operators**.\n * urx includes several operators like [[map]], [[filter]], [[scan]], and [[throttleTime]].\n * The [[withLatestFrom]] operator allows the combination of values from other streams.\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // create an emitter that first adds 2 to the passed value, then multiplies it by * 2\n * const bar = pipe(foo, map(value => value + 2), map(value => value * 2))\n * subscribe(bar, value => console.log(value))\n * publish(foo, 2) // outputs 8\n * ```\n *\n * ### Implementing Custom Operators\n * To implement your own operators, implement the [[Operator]] interface.\n * @packageDocumentation\n */\nimport { compose, thrush } from './utils'\nimport { Emitter, subscribe, Subscription, reset } from './actions'\nimport { SUBSCRIBE, RESET } from './constants'\n\n/**\n * Operators can transform and control the flow of values.\n * [[pipe]] is used to transform one Emitter into another by stacking operators to its values.\n * To build your own operator that looks like the built-in ones,\n * create a function which returns an operator.\n * The following custom operator multiplies the passed value:\n *\n * ```ts\n * function multiplyBy(multiplier: number): Operator<number> {\n *  return done => value => done(value * multiplier)\n * }\n *\n * const foo = stream<number>()\n * const multipliedFoo = pipe(foo, multiplyBy(3))\n * subscribe(multipliedFoo, value => console.log(value))\n * publish(foo, 42)\n * ```\n */\nexport interface Operator<Input, Output = Input> {\n  (done: (value: Output) => void): (value: Input) => void\n}\n\n/** @internal */\ntype CombineOperatorsReturnType<I, O> = (subscriber: (value: O) => void) => (value: I) => void\n\n/** @internal */\nfunction combineOperators<I>(...operators: Operator<any, any>[]): CombineOperatorsReturnType<I, any> {\n  return (subscriber: (value: any) => void) => {\n    return operators.reduceRight(thrush, subscriber)\n  }\n}\n\n/** @internal */\ntype O<I, OP> = Operator<I, OP>\n\n/**\n * Creates a new emitter from the passed one by piping its values through one or more operators.\n * Operators can perform various actions like filter values, pull values from other emitters, or compute new values.\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // create an emitter that first adds 2 to the passed value, then multiplies it by * 2\n * const bar = pipe(foo, map(value => value + 2), map(value => value * 2))\n * subscribe(bar, value => console.log(value))\n * publish(foo, 2) // outputs 8\n * ```\n * #### Sharing Subscription Calculations\n *\n * `pipe` acts as a proxy for the source emitter, and re-runs the operators for each subscription to the derived emitter.\n * Use [[streamFromEmitter]] or [[statefulStreamFromEmitter]] to avoid that.\n */\nexport function pipe<T>(s: Emitter<T>): Emitter<T> // prettier-ignore\nexport function pipe<T, O1>(s: Emitter<T>, o1: O<T, O1>): Emitter<O1> // prettier-ignore\nexport function pipe<T, O1, O2>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>]): Emitter<O2> // prettier-ignore\nexport function pipe<T, O1, O2, O3>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>]): Emitter<O3> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>]): Emitter<O4> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>]): Emitter<O5> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5, O6>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>, O<O5, O6>]): Emitter<O6> // prettier-ignore\nexport function pipe<T, O1, O2, O3, O4, O5, O6, O7>(s: Emitter<T>, ...o: [O<T, O1>, O<O1, O2>, O<O2, O3>, O<O3, O4>, O<O4, O5>, O<O5, O6>, O<O6, O7>]): Emitter<O7> // prettier-ignore\nexport function pipe<T>(source: Emitter<T>, ...operators: O<any, any>[]): Emitter<any> {\n  // prettier-ignore\n  const project = combineOperators(...operators)\n  return ((action: SUBSCRIBE | RESET, subscription: Subscription<any>) => {\n    switch (action) {\n      case SUBSCRIBE:\n        return subscribe(source, project(subscription))\n      case RESET:\n        reset(source)\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  }) as Emitter<any>\n}\n\n/**\n * A function which determines if two values are equal.\n * Implement custom comparators when [[distinctUntilChanged]] needs to work on non-primitive objects.\n * @returns true if values should be considered equal.\n */\nexport interface Comparator<T> {\n  (previous: T, next: T): boolean\n}\n\n/**\n * The default [[Comparator]] for [[distinctUntilChanged]] and [[duc]].\n */\nexport function defaultComparator<T>(previous: T, next: T) {\n  return previous === next\n}\n\n/**\n * Filters out identical values. Pass an optional [[Comparator]] if you need to filter non-primitive values.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, distinctUntilChanged()),\n *  console.log\n * ) // will be called only once\n *\n * publish(foo, 42)\n * publish(foo, 42)\n * ```\n */\nexport function distinctUntilChanged<T>(comparator: Comparator<T> = defaultComparator): Operator<T> {\n  let current: T\n  return done => next => {\n    if (!comparator(current, next)) {\n      current = next\n      done(next)\n    }\n  }\n}\n\n/**\n * Filters out values for which the predicator does not return `true`-ish.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, filter(value => value % 2 === 0)),\n *  console.log\n * ) // will be called only with even values\n *\n * publish(foo, 2)\n * publish(foo, 3)\n * publish(foo, 4)\n * publish(foo, 5)\n * ```\n */\nexport function filter<T>(predicate: (value: T) => boolean): Operator<T> {\n  return done => value => {\n    predicate(value) && done(value)\n  }\n}\n\n/**\n * Maps values using the provided project function.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, map(value => value * 2)),\n *  console.log\n * ) // 4, 6\n *\n * publish(foo, 2)\n * publish(foo, 3)\n * ```\n */\nexport function map<T, K>(project: (value: T) => K): Operator<T, K> {\n  return done => compose(done, project)\n}\n\n/**\n * Maps values to the hard-coded value.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, mapTo(3)),\n *  console.log\n * ) // 3, 3\n *\n * publish(foo, 1)\n * publish(foo, 2)\n * ```\n */\nexport function mapTo<T>(value: T): Operator<any, T> {\n  return done => () => done(value)\n}\n\n/**\n * Works like Array#reduce.\n * Applies an accumulator function on the emitter, and outputs intermediate result. Starts with the initial value.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, scan((acc, value) => acc + value, 2),\n *  console.log\n * ) // 3, 5\n *\n * publish(foo, 1)\n * publish(foo, 2)\n * ```\n */\nexport function scan<T, K>(scanner: (current: T, value: K) => T, initial: T): Operator<K, T> {\n  return done => value => done((initial = scanner(initial, value)))\n}\n\n/**\n * Skips the specified amount of values from the emitter.\n * ```ts\n * const foo = stream<number>()\n *\n * subscribe(\n *  pipe(foo, skip(2)),\n *  console.log\n * ) // 3, 4\n *\n * publish(foo, 1) // skipped\n * publish(foo, 2) // skipped\n * publish(foo, 3)\n * publish(foo, 4)\n * ```\n */\nexport function skip<T>(times: number): Operator<T> {\n  return done => value => {\n    times > 0 ? times-- : done(value)\n  }\n}\n\n/**\n * Throttles flowing values at the provided interval in milliseconds.\n * [Throttle VS Debounce in SO](https://stackoverflow.com/questions/25991367/difference-between-throttling-and-debouncing-a-function).\n *\n * ```ts\n *  const foo = stream<number>()\n *  publish(foo, 1)\n *\n *  setTimeout(() => publish(foo, 2), 20)\n *  setTimeout(() => publish(foo, 3), 20)\n *\n *  subscribe(pipe(foo, throttleTime(50)), val => {\n *    console.log(value); // 3\n *  })\n * ```\n */\nexport function throttleTime<T>(interval: number): Operator<T> {\n  let currentValue: T | undefined\n  let timeout: any\n\n  return done => value => {\n    currentValue = value\n\n    if (timeout) {\n      return\n    }\n\n    timeout = setTimeout(() => {\n      timeout = undefined\n      done(currentValue!)\n    }, interval)\n  }\n}\n\n/**\n * Debounces flowing values at the provided interval in milliseconds.\n * [Throttle VS Debounce in SO](https://stackoverflow.com/questions/25991367/difference-between-throttling-and-debouncing-a-function).\n *\n * ```ts\n *  const foo = stream<number>()\n *  publish(foo, 1)\n *\n *  setTimeout(() => publish(foo, 2), 20)\n *  setTimeout(() => publish(foo, 3), 20)\n *\n *  subscribe(pipe(foo, debounceTime(50)), val => {\n *    console.log(value); // 3\n *  })\n * ```\n */\nexport function debounceTime<T>(interval: number): Operator<T> {\n  let currentValue: T | undefined\n  let timeout: any\n\n  return done => value => {\n    currentValue = value\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n\n    timeout = setTimeout(() => {\n      done(currentValue!)\n    }, interval)\n  }\n}\n\n/**\n * Combines the source Emitter with the latest values from the specified Emitters into an array. Outputs only when the source Emitter emits.\n * See [[combineLatest]] for a transformer that outputs when any of the emitters emit.\n *\n * ```ts\n *  const foo = stream<number>()\n *  const bar = stream<number>()\n *  subscribe(\n *    pipe(\n *      foo,\n *      withLatestFrom(bar)\n *    ),\n *    (([foo, bar]) => console.log({ foo, bar }))\n *  )\n *\n *  publish(foo, 1) // nothing happens, bar has not emitted yet\n *  publish(bar, 1) // still nothing\n *  publish(foo, 2) // logs { foo: 2, bar: 1 }\n *  publish(bar, 2)\n *  publish(foo, 3) // logs { foo: 3, bar: 2 }\n * ```\n */\nexport function withLatestFrom<T, R1>(...s: [Emitter<R1>]): Operator<T, [T, R1]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2>(...s: [Emitter<R1>, Emitter<R2>]): Operator<T, [T, R1, R2]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>]): Operator<T, [T, R1, R2, R3]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>]): Operator<T, [T, R1, R2, R3, R4]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>]): Operator<T, [T, R1, R2, R3, R4, R5]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5, R6>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>, Emitter<R6>]): Operator<T, [T, R1, R2, R3, R4, R5, R6]> // prettier-ignore\nexport function withLatestFrom<T, R1, R2, R3, R4, R5, R6, R7>( ...s: [Emitter<R1>, Emitter<R2>, Emitter<R3>, Emitter<R4>, Emitter<R5>, Emitter<R6>, Emitter<R7>]): Operator<T, [T, R1, R2, R3, R4, R5, R6, R7]> // prettier-ignore\nexport function withLatestFrom(...sources: Emitter<any>[]): Operator<any, any> {\n  const values = new Array(sources.length)\n  let called = 0\n  let pendingCall: null | (() => void) = null\n  const allCalled = Math.pow(2, sources.length) - 1\n\n  sources.forEach((source, index) => {\n    const bit = Math.pow(2, index)\n    subscribe(source, value => {\n      let prevCalled = called\n      called = called | bit\n      values[index] = value\n      if (prevCalled !== allCalled && called === allCalled && pendingCall) {\n        pendingCall()\n        pendingCall = null\n      }\n    })\n  })\n\n  return done => value => {\n    let call = () => done([value].concat(values))\n    if (called === allCalled) {\n      call()\n    } else {\n      pendingCall = call\n    }\n  }\n}\n","/**\n * Transformers change and combine streams, similar to operators.\n * urx comes with two combinators - [[combineLatest]] and [[merge]], and one convenience filter - [[duc]].\n *\n * @packageDocumentation\n */\nimport { Emitter, publish, reset, subscribe, Subscription } from './actions'\nimport { RESET, SUBSCRIBE } from './constants'\nimport { Comparator, defaultComparator, distinctUntilChanged, pipe } from './pipe'\nimport { stream } from './streams'\nimport { joinProc } from './utils'\n\n/**\n * Merges one or more emitters from the same type into a new Emitter which emits values from any of the source emitters.\n * ```ts\n * const foo = stream<number>()\n * const bar = stream<number>()\n *\n * subscribe(merge(foo, bar), (value) => console.log(value)) // 42, 43\n *\n * publish(foo, 42)\n * publish(bar, 43)\n * ```\n */\nexport function merge<T>(...sources: Emitter<T>[]): Emitter<T> {\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<any>) {\n    switch (action) {\n      case SUBSCRIBE:\n        return joinProc(...sources.map(source => subscribe(source, subscription!)))\n      case RESET:\n        // do nothing, we are stateless\n        return\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<T>\n}\n\n/**\n * A convenience wrapper that emits only the distinct values from the passed Emitter. Wraps [[pipe]] and [[distinctUntilChanged]].\n *\n * ```ts\n * const foo = stream<number>()\n *\n * // this line...\n * const a = duc(foo)\n *\n * // is equivalent to this\n * const b = pipe(distinctUntilChanged(foo))\n * ```\n *\n * @param source The source emitter.\n * @param comparator optional custom comparison function for the two values.\n *\n * @typeParam T the type of the value emitted by the source.\n *\n * @returns the resulting emitter.\n */\nexport function duc<T>(source: Emitter<T>, comparator: Comparator<T> = defaultComparator): Emitter<T> {\n  return pipe(source, distinctUntilChanged(comparator))\n}\n\n/**\n * Creates an emitter with the latest values from all passed emitters as an array.\n *\n * `combineLatest` acts as a Depot. Using it on stateless streams persists the last emitted value of each [[Emitter]].\n * Provided that all emitters have emitted at least once, subscribing to the resulting emitter will immediately receive their combined latest values.\n *\n * ```ts\n * const foo = stream<number>()\n * const bar = stream<number>()\n *\n * subscribe(combineLatest(foo, bar), ([foo, bar]) => console.log({ foo, bar }))\n *\n * publish(foo, 42)\n * publish(bar, 43) // { foo: 42, bar: 43 }\n * publish(foo, 44) // { foo: 44, bar: 43 }\n * publish(bar, 45) // { foo: 44, bar: 45 }\n * ```\n */\nexport function combineLatest<O1, O2>(...emitters: [Emitter<O1>, Emitter<O2>]): Emitter<[O1, O2]> // prettier-ignore\nexport function combineLatest<O1, O2, O3>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>]): Emitter<[O1, O2, O3]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>]): Emitter<[O1, O2, O3, O4]> // prettier-ignore\nexport function combineLatest<O1, O2, O3>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>]): Emitter<[O1, O2, O3]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>]): Emitter<[O1, O2, O3, O4, O5]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>]): Emitter<[O1, O2, O3, O4, O5, O6]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>]): Emitter<[O1, O2, O3, O4, O5, O6, O7]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9, O10>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>, Emitter<O10>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9, O10]> // prettier-ignore\nexport function combineLatest<O1, O2, O3, O4, O5, O6, O7, O8, O9, O10, O11>( ...emitters: [Emitter<O1>, Emitter<O2>, Emitter<O3>, Emitter<O4>, Emitter<O5>, Emitter<O6>, Emitter<O7>, Emitter<O8>, Emitter<O9>, Emitter<O10>, Emitter<O11>]): Emitter<[O1, O2, O3, O4, O5, O6, O7, O8, O9, O10, O11]> // prettier-ignore\nexport function combineLatest(...emitters: Emitter<any>[]): Emitter<any> {\n  let innerSubject = stream<any>()\n  const values = new Array(emitters.length)\n  let called = 0\n  const allCalled = Math.pow(2, emitters.length) - 1\n\n  emitters.forEach((source, index) => {\n    const bit = Math.pow(2, index)\n    subscribe(source, value => {\n      values[index] = value\n      called = called | bit\n      if (called === allCalled) {\n        publish(innerSubject, values)\n      }\n    })\n  })\n\n  return function(action: SUBSCRIBE | RESET, subscription?: Subscription<any>) {\n    switch (action) {\n      case SUBSCRIBE:\n        if (called === allCalled) {\n          subscription!(values)\n        }\n        return subscribe(innerSubject, subscription!)\n      case RESET:\n        return reset(innerSubject)\n      default:\n        throw new Error(`unrecognized action ${action}`)\n    }\n  } as Emitter<any>\n}\n","/**\n * ## Thinking in Systems\n * systems are a stateful **data-processing machines** which accept input through **input streams**,\n * init and maintain state in **depots** and, in certain conditions, emit values to subscriptions through **output streams**.\n * Systems can specify other systems as dependencies, and can act as singletons in the resulting dependency tree.\n *\n * ### Depots\n *\n * The first, and probably the most critical part to understand are **the depots**\n * mostly because they are somewhat implicit.\n * Unlike other state management paradigms, the depots are not kept in a single data structure.\n * Insted, depots are defined and maintained as stateful streams, stateful transfomers\n * like [[combineLatest]] or stateful operators like[ []withLatestFrom] or [[scan]].\n *\n * **Depots persist values over time**.\n * If it was not for them, the system had to re-receive its entire input state simultaneously in order to calculate the values for its output stream.\n *\n * Of course, strictly speaking, it is possible to implement a pure, stateless system as a form of a complex map/reduce. urx would not mind that ;).\n *\n * ### Input Streams\n *\n * The system receives updates from the rest of the world through values published in its input streams.\n * The streams used can be either stateless (acting as means to send **signals**) or stateful, where the initial stream state acts as the default value for that system parameter.\n *\n * The effects of the input streams are up to the system data-processing logic. It can change its depots' state, and/or emit values through its output streams.\n *\n * ### Data Processing\n *\n * The actual system behavior is exclusively implemented by **applying transformers and operators** to the input streams, producing the respective output streams.\n * In the final state the system streams are organized in a directed graph, where incoming data is routed through certain edges and nodes.\n * Simple systems like the one in [urx by example](https://urx.virtuoso.dev/docs/urx-by-example) can use a straightforward single-step transformation (in this case, `combineLatest` and `map`),\n * while complex ones can introduce multiple intermediate streams to model their logic.\n *\n * ### Output Streams\n *\n * The system publishes updates to its clients (other systems or an UI bound to it) by publishing data in its output streams.\n * State-reflecting output streams, like `sum` in the [urx by example](https://urx.virtuoso.dev/docs/urx-by-example) should use stateful streams as output streams.\n * Signal-like output should use regular, stateless streams. In general, stateless input streams tend to have a symmetrical stateless streams, and the opposite.\n *\n * @packageDocumentation\n */\nimport { Emitter } from './actions'\n\n/**\n * Systems are a dictionaries of streams. a [[SystemConstructor]] should return a System.\n */\nexport interface System {\n  [key: string]: Emitter<any>\n}\n\n/**\n * a SystemSpec is the result from a [[system]] call. To obtain the [[System]], pass the spec to [[init]].\n */\nexport interface SystemSpec<SS extends SystemSpecs, C extends SystemConstructor<SS>> {\n  id: string\n  constructor: C\n  dependencies: SS\n  singleton: boolean\n}\n\n/** @internal **/\nexport type AnySystemSpec = SystemSpec<any, any>\n\n/** @internal **/\nexport type SystemSpecs = AnySystemSpec[]\n\n/** @internal **/\nexport type SR<E extends AnySystemSpec, R extends System = ReturnType<E['constructor']>> = R\n\n/** @internal **/\nexport type SpecResults<SS extends SystemSpecs, L = SS['length']> = L extends 0\n  ? []\n  : L extends 1\n  ? [SR<SS[0]>]\n  : L extends 2\n  ? [SR<SS[0]>, SR<SS[1]>]\n  : L extends 3\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>]\n  : L extends 4\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>]\n  : L extends 5\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>]\n  : L extends 6\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>]\n  : L extends 7\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>]\n  : L extends 8\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>]\n  : L extends 9\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>]\n  : L extends 10\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>, SR<SS[9]>]\n  : L extends 11\n  ? [SR<SS[0]>, SR<SS[1]>, SR<SS[2]>, SR<SS[3]>, SR<SS[4]>, SR<SS[5]>, SR<SS[6]>, SR<SS[7]>, SR<SS[8]>, SR<SS[9]>, SR<SS[10]>]\n  : never\n\n/**\n * The system constructor is a function which initializes and connects streams and returns them as a [[System]].\n * If the [[system]] call specifies system dependencies, the constructor receives the dependencies as an array argument.\n */\nexport type SystemConstructor<D extends SystemSpecs> = (dependencies: SpecResults<D>) => System\n\n/**\n * `system` defines a specification of a system - its constructor, dependencies and if it should act as a singleton in a system dependency tree.\n * When called, system returns a [[SystemSpec]], which is then initialized along with its dependencies by passing it to [[init]].\n *\n * ```ts\n * @import { subscribe, publish, system, init, tup, connect, map, pipe } from 'urx'\n *\n * // a simple system with two streams\n * const sys1 = system(() => {\n *  const a = stream<number>()\n *  const b = stream<number>()\n *\n *  connect(pipe(a, map(value => value * 2)), b)\n *  return { a, b }\n * })\n *\n * // a second system which depends on the streams from the first one\n * const sys2 = system(([ {a, b} ]) => {\n *  const c = stream<number>()\n *  connect(pipe(b, map(value => value * 2)), c)\n *  // re-export the `a` stream, keep `b` internal\n *  return { a, c }\n * }, tup(sys1))\n *\n * // init will recursively initialize sys2 dependencies, in this case sys1\n * const { a, c } = init(sys2)\n * subscribe(c, c => console.log(`Value multiplied by 4`, c))\n * publish(a, 2)\n * ```\n *\n * #### Singletons in Dependency Tree\n *\n * By default, systems will be initialized only once if encountered multiple times in the dependency tree.\n * In the below dependency system tree, systems `b` and `c` will receive the same stream instances from system `a` when system `d` is initialized.\n * ```txt\n *   a\n *  / \\\n * b   c\n *  \\ /\n *   d\n * ```\n * If `a` gets `{singleton: false}` as a last argument, `init` creates two separate instances - one for `b` and one for `c`.\n *\n * @param constructor the system constructor function. Initialize and connect the streams in its body.\n *\n * @param dependencies the system dependencies, which the constructor will receive as arguments.\n * Use the [[tup]] utility **For TypeScript type inference to work correctly**.\n * ```ts\n * const sys3 = system(() => { ... }, tup(sys2, sys1))\n * ```\n * @param __namedParameters Options\n * @param singleton determines if the system will act as a singleton in a system dependency tree. `true` by default.\n */\nexport function system<F extends SystemConstructor<D>, D extends SystemSpecs>(\n  constructor: F,\n  dependencies: D = ([] as unknown) as D,\n  { singleton }: { singleton: boolean } = { singleton: true }\n): SystemSpec<D, F> {\n  return {\n    id: id(),\n    constructor,\n    dependencies,\n    singleton,\n  }\n}\n\n/** @internal */\nconst id = () => (Symbol() as unknown) as string\n\n/**\n * Initializes a [[SystemSpec]] by recursively initializing its dependencies.\n *\n * ```ts\n * // a simple system with two streams\n * const sys1 = system(() => {\n *  const a = stream<number>()\n *  const b = stream<number>()\n *\n *  connect(pipe(a, map(value => value * 2)), b)\n *  return { a, b }\n * })\n *\n * const { a, b } = init(sys1)\n * subscribe(b, b => console.log(b))\n * publish(a, 2)\n * ```\n *\n * @returns the [[System]] constructed by the spec constructor.\n * @param systemSpec the system spec to initialize.\n */\nexport function init<SS extends AnySystemSpec>(systemSpec: SS): SR<SS> {\n  const singletons = new Map<string, System>()\n  const _init = <SS extends AnySystemSpec>({ id, constructor, dependencies, singleton }: SS) => {\n    if (singleton && singletons.has(id)) {\n      return singletons.get(id)! as SR<SS>\n    }\n    const system = constructor(dependencies.map((e: AnySystemSpec) => _init(e)))\n    if (singleton) {\n      singletons.set(id, system)\n    }\n    return system as any\n  }\n  return _init(systemSpec)\n}\n","/**\n * `@virtuoso.dev/react-urx` exports the [[systemToComponent]] function.\n * It wraps urx systems in to UI **logic provider components**,\n * mapping the system input and output streams to the component input / output points.\n *\n * ### Simple System wrapped as React Component\n *\n * ```tsx\n * const sys = system(() => {\n *   const foo = statefulStream(42)\n *   return { foo }\n * })\n *\n * const { Component: MyComponent, useEmitterValue } = systemToComponent(sys, {\n *   required: { fooProp: 'foo' },\n * })\n *\n * const Child = () => {\n *   const foo = useEmitterValue('foo')\n *   return <div>{foo}</div>\n * }\n *\n * const App = () => {\n *   return <Comp fooProp={42}><Child /><Comp>\n * }\n * ```\n *\n * @packageDocumentation\n */\nimport * as React from 'react'\nimport {\n  ComponentType,\n  createContext,\n  createElement,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactNode,\n  RefAttributes,\n  useContext,\n  useImperativeHandle,\n  useState,\n  useCallback,\n} from 'react'\nimport {\n  AnySystemSpec,\n  reset,\n  curry1to0,\n  curry2to1,\n  Emitter,\n  SR,\n  eventHandler,\n  getValue,\n  publish,\n  Publisher,\n  init,\n  StatefulStream,\n  Stream,\n  subscribe,\n  always,\n  tap,\n} from '@virtuoso.dev/urx'\n\n/** @internal */\ninterface Dict<T> {\n  [key: string]: T\n}\n\n/** @internal */\nfunction omit<O extends Dict<any>, K extends readonly string[]>(keys: K, obj: O): Omit<O, K[number]> {\n  var result = {} as Dict<any>\n  var index = {} as Dict<1>\n  var idx = 0\n  var len = keys.length\n\n  while (idx < len) {\n    index[keys[idx]] = 1\n    idx += 1\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop]\n    }\n  }\n\n  return result as any\n}\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\n/** @internal */\nexport type Observable<T> = Emitter<T> | Publisher<T>\n\n/**\n * Describes the mapping between the system streams and the component properties.\n * Each property uses the keys as the names of the properties and the values as the corresponding stream names.\n * @typeParam SS the type of the system.\n */\nexport interface SystemPropsMap<SS extends AnySystemSpec, K = keyof SR<SS>, D = { [key: string]: K }> {\n  /**\n   * Specifies the required component properties.\n   */\n  required?: D\n  /**\n   * Specifies the optional component properties.\n   */\n  optional?: D\n  /**\n   * Specifies the component methods, if any. Streams are converted to methods with a single argument.\n   * When invoked, the method publishes the value of the argument to the specified stream.\n   */\n  methods?: D\n  /**\n   * Specifies the component \"event\" properties, if any.\n   * Event properties accept callback functions which get executed when the stream emits a new value.\n   */\n  events?: D\n}\n\n/** @internal */\nexport type PropsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['required'], string>]: M['required'][K] extends string\n    ? SR<E>[M['required'][K]] extends Observable<infer R>\n      ? R\n      : never\n    : never\n} &\n  {\n    [K in Extract<keyof M['optional'], string>]?: M['optional'][K] extends string\n      ? SR<E>[M['optional'][K]] extends Observable<infer R>\n        ? R\n        : never\n      : never\n  } &\n  {\n    [K in Extract<keyof M['events'], string>]?: M['events'][K] extends string\n      ? SR<E>[M['events'][K]] extends Observable<infer R>\n        ? (value: R) => void\n        : never\n      : never\n  }\n\n/** @internal */\nexport type MethodsFromPropMap<E extends AnySystemSpec, M extends SystemPropsMap<E>> = {\n  [K in Extract<keyof M['methods'], string>]: M['methods'][K] extends string\n    ? SR<E>[M['methods'][K]] extends Observable<infer R>\n      ? (value: R) => void\n      : never\n    : never\n}\n\n/**\n * Used to correctly specify type refs for system components\n *\n * ```tsx\n * const s = system(() => { return { a: statefulStream(0) } })\n * const { Component } = systemToComponent(s)\n *\n * const App = () => {\n *  const ref = useRef<RefHandle<typeof Component>>()\n *  return <Component ref={ref} />\n * }\n * ```\n *\n * @typeParam T the type of the component\n */\nexport type RefHandle<T> = T extends ForwardRefExoticComponent<RefAttributes<infer Handle>> ? Handle : never\n\n/**\n * Converts a system spec to React component by mapping the system streams to component properties, events and methods. Returns hooks for querying and modifying\n * the system streams from the component's child components.\n * @param systemSpec The return value from a [[system]] call.\n * @param map The streams to props / events / methods mapping Check [[SystemPropsMap]] for more details.\n * @param Root The optional React component to render. By default, the resulting component renders nothing, acting as a logical wrapper for its children.\n * @returns an object containing the following:\n *  - `Component`: the React component.\n *  - `useEmitterValue`: a hook that lets child components use values emitted from the specified output stream.\n *  - `useEmitter`: a hook that calls the provided callback whenever the specified stream emits a value.\n *  - `usePublisher`: a hook which lets child components publish values to the specified stream.\n *  <hr />\n */\nexport function systemToComponent<SS extends AnySystemSpec, M extends SystemPropsMap<SS>, S extends SR<SS>, R>(\n  systemSpec: SS,\n  map: M,\n  Root?: R\n) {\n  const requiredPropNames = Object.keys(map.required || {})\n  const optionalPropNames = Object.keys(map.optional || {})\n  const methodNames = Object.keys(map.methods || {})\n  const eventNames = Object.keys(map.events || {})\n  const Context = createContext<SR<SS>>(({} as unknown) as any)\n\n  type RootCompProps = R extends ComponentType<infer RP> ? RP : { children?: ReactNode }\n\n  type CompProps = PropsFromPropMap<SS, M> & RootCompProps\n\n  type CompMethods = MethodsFromPropMap<SS, M>\n\n  function applyPropsToSystem(system: ReturnType<SS['constructor']>, props: any) {\n    if (system['propsReady']) {\n      publish(system['propsReady'], false)\n    }\n\n    for (const requiredPropName of requiredPropNames) {\n      const stream = system[map.required![requiredPropName]]\n      publish(stream, (props as any)[requiredPropName])\n    }\n\n    for (const optionalPropName of optionalPropNames) {\n      if (optionalPropName in props) {\n        const stream = system[map.optional![optionalPropName]]\n        publish(stream, (props as any)[optionalPropName])\n      }\n    }\n\n    if (system['propsReady']) {\n      publish(system['propsReady'], true)\n    }\n  }\n\n  function buildMethods(system: ReturnType<SS['constructor']>) {\n    return methodNames.reduce((acc, methodName) => {\n      ;(acc as any)[methodName] = (value: any) => {\n        const stream = system[map.methods![methodName]]\n        publish(stream, value)\n      }\n      return acc\n    }, {} as CompMethods)\n  }\n\n  function buildEventHandlers(system: ReturnType<SS['constructor']>) {\n    return eventNames.reduce((handlers, eventName) => {\n      handlers[eventName] = eventHandler(system[map.events![eventName]])\n      return handlers\n    }, {} as { [key: string]: Emitter<any> })\n  }\n\n  /**\n   * A React component generated from an urx system\n   */\n  const Component = forwardRef<CompMethods, CompProps>((propsWithChildren, ref) => {\n    const { children, ...props } = propsWithChildren as any\n\n    const [system] = useState(() => {\n      return tap(init(systemSpec), system => applyPropsToSystem(system, props))\n    })\n\n    const [handlers] = useState(curry1to0(buildEventHandlers, system))\n\n    useIsomorphicLayoutEffect(() => {\n      for (const eventName of eventNames) {\n        if (eventName in props) {\n          subscribe(handlers[eventName], props[eventName])\n        }\n      }\n      return () => {\n        Object.values(handlers).map(reset)\n      }\n    }, [props, handlers, system])\n\n    useIsomorphicLayoutEffect(() => {\n      applyPropsToSystem(system, props)\n    })\n\n    useImperativeHandle(ref, always(buildMethods(system)))\n\n    return createElement(\n      Context.Provider,\n      { value: system },\n      Root\n        ? createElement(\n            (Root as unknown) as ComponentType,\n            omit([...requiredPropNames, ...optionalPropNames, ...eventNames], props),\n            children\n          )\n        : children\n    )\n  })\n\n  const usePublisher = <K extends keyof S>(key: K) => {\n    return useCallback(curry2to1(publish, React.useContext(Context)[key]), [key]) as (\n      value: S[K] extends Stream<infer R> ? R : never\n    ) => void\n  }\n\n  /**\n   * Returns the value emitted from the stream.\n   */\n  const useEmitterValue = <K extends keyof S, V = S[K] extends StatefulStream<infer R> ? R : never>(key: K) => {\n    const context = useContext(Context)\n    const source: StatefulStream<V> = context[key]\n\n    const [value, setValue] = useState(curry1to0(getValue, source))\n\n    useIsomorphicLayoutEffect(\n      () =>\n        subscribe(source, (next: V) => {\n          if (next !== value) {\n            setValue(always(next))\n          }\n        }),\n      [source, value]\n    )\n\n    return value\n  }\n\n  const useEmitter = <K extends keyof S, V = S[K] extends Stream<infer R> ? R : never>(key: K, callback: (value: V) => void) => {\n    const context = useContext(Context)\n    const source: Stream<V> = context[key]\n    useIsomorphicLayoutEffect(() => subscribe(source, callback), [callback, source])\n  }\n\n  return {\n    Component,\n    usePublisher,\n    useEmitterValue,\n    useEmitter,\n  }\n}\n","import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<[number, number]>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([scrollTop]) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([, scrollHeight]) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [[scrollTop, scrollHeight], viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, [scrollTop, scrollHeight]) => {\n          if (current.scrollHeight !== scrollHeight) {\n            if (current.scrollTop !== scrollTop) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(([scrollTop]) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, { offsetTree }]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = lastIndex\n          }\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight\n            listBottom += headerHeight\n            listBottom -= deviation\n\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      fixedHeaderHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<[number, number]>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([[windowScrollTop, scrollHeight], { offsetTop }]) => {\n        return [Math.max(0, windowScrollTop - offsetTop), scrollHeight]\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth)\n\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return max(1, floor(viewportWidth / itemWidth))\n}\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  log: Log,\n  customScrollParent?: HTMLElement\n) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    customScrollParent\n      ? scrollContainerStateCallback([Math.max(scrollTop, 0), customScrollParent.scrollHeight])\n      : scrollContainerStateCallback([Math.max(scrollTop, 0), scrollableElement.scrollHeight])\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n\n      scrollContainerStateCallback([Math.max(scrollTop, 0), scrollHeight])\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback([scrollTop, scrollHeight])\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { IndexLocation, scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport function getInitialTopMostItemIndexNumber(location: IndexLocation, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<IndexLocation>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, atBottomState, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount], [{ items, totalCount }, lastJumpDueToItemResize]) => {\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const firstItemIndex = items[0].originalIndex\n                const prevFirstItemIndex = prevItems[0].originalIndex\n                const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n                const onlyItem = items.length === 1\n\n                if (!atStart) {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset || onlyItem) {\n                      newDev = item.offset - prevItem.offset + item.size - prevItem.size\n                      break\n                    }\n                  }\n                }\n              }\n\n              if (newDev !== 0) {\n                newDev += lastJumpDueToItemResize\n              }\n            }\n\n            return [newDev, items, totalCount] as [number, ListItem<any>[], number]\n          },\n          [0, [], 0] as [number, ListItem<any>[], number]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom, atBottomState),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          // console.log({ amount, scrollTop, scrollDirection, scrollingInProgress, isAtBottom, atBottomState })\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP // && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\n\nexport interface ScrollIntoViewLocation {\n  index: number\n  behavior?: 'auto' | 'smooth'\n  done?: () => void\n}\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([{ index, behavior = 'auto', done }, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const lastIndex = totalCount - 1\n          let location = null\n          index = originalIndexFromItemIndex(index, sizes)\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          const itemTop = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { index, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, index)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { index, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = statefulStream<unknown>(null)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components<any>>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: { overflowAnchor: 'none' },\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, context)\n          )\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport { map, pipe, statefulStream, system, tup, statefulStreamFromEmitter, distinctUntilChanged, noop, compose } from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\n\nconst tableComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = statefulStream<unknown>(null)\n  const fixedHeaderContent = statefulStream<FixedHeaderContent>(null)\n  const components = statefulStream<TableComponents>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst FillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(sizeRanges, itemSize, trackItemSizes, scrollContainerStateCallback, log, customScrollParent)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      } as any,\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        } as any,\n        fixedHeaderContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) } as any, [\n          theHead,\n          <Items key=\"TableBody\" />,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport type TableHandle = RefHandle<typeof Table>\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ForwardRefExoticComponent, ReactElement, Ref } from 'react'\nimport { Grid, GridHandle } from './Grid'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n} from './interfaces'\nimport { List, ListHandle } from './List'\nimport { Table, TableHandle } from './Table'\nimport { ScrollIntoViewLocation } from './scrollIntoViewSystem'\ntype CompProps<T> = T extends ForwardRefExoticComponent<infer R> ? R : never\ntype ListProps = CompProps<typeof List>\ntype GridProps = CompProps<typeof Grid>\n\nexport interface VirtuosoProps<D, C> extends Omit<ListProps, 'groupCounts' | 'groupContent' | 'itemsRendered'> {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface GroupedVirtuosoProps<D, C>\n  extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'>,\n    Pick<ListProps, 'groupCounts' | 'groupContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface VirtuosoGridProps<C extends unknown = unknown> extends GridProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle extends ListHandle {\n  /**\n   * Scrolls the component to the specified item index. See {{IndexLocationWithAlign}} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle extends ListHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle extends GridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <Context extends unknown = any>(\n  props: VirtuosoGridProps<Context> & { ref?: Ref<VirtuosoGridHandle> }\n) => ReactElement\n"],"sourceRoot":""}