{"version":3,"sources":["routes/safe/components/Balances/SendModal/utils.tsx","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/Table/TableHead.tsx","components/ButtonHelper/index.tsx","components/Table/sorting.ts","components/Table/index.tsx","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","routes/safe/components/Balances/SendModal/TransferAmount/index.tsx","components/layout/Table/index.tsx","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Settings/SpendingLimit/RemoveLimitModal.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/dataFetcher.ts","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/SpentVsAmount.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Beneficiary.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Token.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Create.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Review.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/index.tsx","routes/safe/components/Settings/SpendingLimit/assets/asset-amount.svg","routes/safe/components/Settings/SpendingLimit/assets/beneficiary.svg","routes/safe/components/Settings/SpendingLimit/assets/time.svg","routes/safe/components/Settings/SpendingLimit/NewLimitSteps.tsx","routes/safe/components/Settings/SpendingLimit/index.tsx"],"names":["getStepTitle","currentStep","totalSteps","styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","UnStyledButton","styled","theme","colors","separator","ButtonHelper","children","dataTestId","type","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","undefined","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","useTextFieldLabelStyle","overflow","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","fieldMutator","setIsValidAddress","setSelectedEntry","setValidationText","validationText","networkId","useSelector","currentChainId","updateAddressInfo","addressEntry","address","validateAddress","fullAddress","addressErrorMessage","mustBeEthereumAddress","parsePrefixedAddress","checkedAddr","checksumAddress","filteredEntries","filterAddressEntries","inputValue","length","onInputChange","_","reason","normalizedValue","trimSpaces","hasFeature","FEATURES","DOMAIN_LOOKUP","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","logError","Errors","_101","message","validatedAddress","chainId","labelStyles","inputStyles","Autocomplete","closeIcon","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","required","InputProps","getOptionLabel","renderOption","PrefixedEthHashInfo","hash","showAvatar","flexGrow","AddressBookInput","currentNetworkAddressBook","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddresses","filterContractAddressBookEntries","filteredADBK","onSetSelectedEntry","selectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","AmountWrapper","div","StyledBlock","TransferAmount","token","text","setImageToPlaceholder","logoUri","marginTop","useSelectedTokenStyles","container","tokenData","tokenImage","marginRight","useSelectStyles","selectMenu","paddingRight","SelectedToken","tokenAddress","tokens","MenuItem","ListItemIcon","ListItemText","primary","secondary","formatAmount","balance","tokenBalance","toString","symbol","TokenSelectField","initialValue","isValid","tokenClasses","Field","SelectField","displayEmpty","validate","RemoveLimitModal","spendingLimit","tokenInfo","useTokenInfo","spent","safeAddress","useSafeAddress","txData","setTxData","dispatch","useDispatch","spendingLimitAddress","getSpendingLimitModuleAddress","beneficiary","getDeleteAllowanceTxData","resetTimeLabel","getResetTimeOptions","resetTime","resetTimeMin","TxModalWrapper","txTo","onSubmit","txParameters","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","safeTxGas","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","REMOVE_SPENDING_LIMIT_TX","trackEvent","SETTINGS_EVENTS","SPENDING_LIMIT","LIMIT_REMOVED","submitText","ModalHeader","Body","fromTokenUnit","amount","decimals","SPENDING_LIMIT_TABLE_BENEFICIARY_ID","SPENDING_LIMIT_TABLE_SPENT_ID","SPENDING_LIMIT_TABLE_RESET_TIME_ID","getWindowDimensions","window","innerWidth","innerHeight","StyledImage","img","StyledImageName","SpentVsAmount","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","showIcon","useMemo","spentInfo","formattedSpent","useFormattedAmounts","LimitsTable","granted","grantedSelector","beneficiaryColumn","custom","spentColumn","resetColumn","actionsColumn","generateColumns","autoColumns","selectedRow","setSelectedRow","TableContainer","minHeight","row","cn","hide","noBorderBottom","tabIndex","columnId","rowElement","relativeTime","actions","Track","REMOVE_LIMIT","tooltip","BeneficiaryInput","BeneficiaryScan","Beneficiary","initialValues","useFormState","mutators","useForm","addressErrorMsg","setAddressErrorMsg","pristine","setPristine","setBeneficiary","addressBook","onKeyDown","sameString","key","showCopyBtn","textSize","explorerUrl","getExplorerInfo","scannedAddress","startsWith","replace","scannedName","sameAddress","TokenInput","Token","extendedSafeTokensSelector","FormContainer","formMutators","args","utils","changeValue","canReview","invalid","submitting","dirtyFieldsSinceLastSubmit","values","Create","onCancel","onReview","subTitle","GnoForm","Amount","ResetTime","Footer","Buttons","cancelButtonProps","confirmButtonProps","disabled","previousResetTime","existentSpendingLimit","calculateSpendingLimitsTxData","safeVersion","connectedWalletAddress","spendingLimits","txToken","modules","moduleAddress","isSpendingLimitEnabled","isModuleEnabled","transactions","enableSpendingLimitModuleMultiSendTx","enableSpendingLimitTx","push","some","delegate","addSpendingLimitBeneficiaryMultiSendTx","getResetSpendingLimitTx","startTime","currentMinutes","spendingLimitArgs","spendingLimitInWei","toTokenUnit","withResetTime","resetBaseMin","spendingLimitTxData","setSpendingLimitTx","encodedTxForMultisend","setSpendingLimitMultiSendTx","spendingLimitMultiSendTx","ReviewSpendingLimits","onBack","currentSafe","currentVersion","userAccountSelector","currentDelegate","useExistentSpendingLimit","estimateGasArgs","setEstimateGasArgs","safeModules","pair","calculateSpendingLimit","_getChainId","handleSubmit","ethGasPrice","ethGasLimit","ethGasPriceInGWei","advancedOptionsTxParameters","RESET_PERIOD","operation","makeToken","step","CREATE","isSubmitDisabled","center","wordBreak","strong","REVIEW","newLimitModalReducer","action","newState","NewLimitModal","initialStep","useReducer","create","useCallback","review","useNewLimitModal","handleReview","StepWrapper","Step","StepsLine","NewLimitSteps","AssetAmount","Time","InfoText","Text","SpendingLimit","allowances","currentSafeSpendingLimits","spendingLimitData","lastResetMin","showNewSpendingLimitModal","setShowNewSpendingLimitModal","withoutMargin","end","NEW_LIMIT","actionButton"],"mappings":"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","file":"static/js/35.e9d44759.chunk.js","sourcesContent":["export const getStepTitle = (currentStep: number, totalSteps: number): string => `Step ${currentStep} of ${totalSteps}`\n","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { FieldMetaState } from 'react-final-form'\nimport { FormControlProps } from '@material-ui/core/FormControl/FormControl'\n\nconst style = {\n  minWidth: '100%',\n}\n\ntype Props = {\n  classes: SelectProps['classes']\n  label: SelectProps['label']\n  renderValue: SelectProps['renderValue']\n  disableError: boolean\n  formControlProps: FormControlProps\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: FieldMetaState<any>\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}: Props): React.ReactElement => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        variant=\"outlined\"\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort =\n    (property: string, orderAttr: string): (() => void) =>\n    () => {\n      const { onSort } = this.props\n\n      onSort(property, orderAttr)\n    }\n\n  render(): React.ReactElement {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nconst UnStyledButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 50%;\n  transition: background-color 0.2s ease-in-out;\n  outline-color: transparent;\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.separator};\n  }\n`\ntype Props = {\n  onClick?: () => void\n  children: ReactElement\n  dataTestId?: string\n}\n\nconst ButtonHelper = ({ onClick = () => undefined, children, dataTestId }: Props): React.ReactElement => {\n  return (\n    <UnStyledButton onClick={onClick} type={'button'} data-testid={dataTestId}>\n      {children}\n    </UnStyledButton>\n  )\n}\n\nexport default ButtonHelper\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    input: {\n      padding: '16px !important',\n    },\n  }),\n)\n","import MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { trimSpaces } from 'src/utils/strings'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { FEATURES } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\nimport { hasFeature } from 'src/logic/safe/utils/safeVersion'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  label?: string\n  pristine?: boolean\n  recipientAddress?: string\n  errorMsg?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  label = 'Recipient',\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const networkId = useSelector(currentChainId)\n\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (fullAddress: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(fullAddress)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    // Automatically checksum valid addresses\n    const { address } = parsePrefixedAddress(fullAddress)\n    const checkedAddr = checksumAddress(address) || address\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: checkedAddr })\n    return filteredEntries.length === 1 ? filteredEntries[0] : checkedAddr\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name, chainId } = value as AddressBookEntry\n        updateAddressInfo({ address, name, chainId })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (\n          hasFeature(FEATURES.DOMAIN_LOOKUP) &&\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\n        ) {\n          let address = ''\n          try {\n            address = await getAddressFromDomain(normalizedValue)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry =\n            typeof validatedAddress === 'string'\n              ? {\n                  address,\n                  name: normalizedValue,\n                  chainId: networkId,\n                }\n              : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string'\n            ? {\n                address: validatedAddress,\n                name: '',\n                chainId: networkId,\n              }\n            : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      id=\"address-book-input\"\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus\n          error={!!validationText}\n          fullWidth\n          variant=\"outlined\"\n          label={validationText ? validationText : label}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n          inputProps={{ ...params.inputProps, 'data-testid': 'address-book-input' }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <PrefixedEthHashInfo hash={address} name={name} showAvatar />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    if (props.errorMsg) {\n      setValidationText(props.errorMsg)\n    }\n  }, [props.errorMsg])\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Block from 'src/components/layout/Block'\n\nconst AmountWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n`\n\nconst StyledBlock = styled(Block)`\n  width: 40px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & img {\n    width: 26px;\n    height: auto;\n  }\n`\n\nexport type TransferAmountProps = {\n  token: Token\n  text: string\n}\n\nexport const TransferAmount = ({ token, text }: TransferAmountProps): ReactElement => {\n  return (\n    <AmountWrapper>\n      <StyledBlock>\n        <img alt={token.name} onError={setImageToPlaceholder} src={token.logoUri || ''} />\n      </StyledBlock>\n      <Paragraph size=\"xl\" color=\"black600\" noMargin style={{ marginTop: '8px' }}>\n        {text}\n      </Paragraph>\n    </AmountWrapper>\n  )\n}\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { ReactElement } from 'react'\n\nexport { TableBody, TableCell, TableHead, TableRow }\n\nconst buildWidthFrom = (size) => ({\n  minWidth: `${size}px`,\n})\n\nconst overflowStyle: any = {\n  overflowX: 'auto',\n}\n\n// see: https://css-tricks.com/responsive-data-tables/\nconst GnoTable = ({ children, size }): ReactElement => {\n  const style = size ? buildWidthFrom(size) : undefined\n\n  return (\n    <div style={overflowStyle}>\n      <Table style={style}>{children}</Table>\n    </div>\n  )\n}\n\nexport default GnoTable\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { sm } from 'src/theme/variables'\n\nexport const useSelectedTokenStyles = makeStyles(\n  createStyles({\n    container: {\n      background: 'none !important',\n      padding: '0',\n      width: '100%',\n    },\n    tokenData: {\n      padding: 0,\n      margin: 0,\n      lineHeight: '14px',\n    },\n    tokenImage: {\n      display: 'block',\n      marginRight: sm,\n      height: 28,\n      width: 'auto',\n    },\n  }),\n)\n\nexport const useSelectStyles = makeStyles(\n  createStyles({\n    selectMenu: {\n      paddingRight: 0,\n    },\n  }),\n)\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { List } from 'immutable'\nimport { ReactElement } from 'react'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { Token } from 'src/logic/tokens/store/model/token'\n\nimport { useSelectStyles, useSelectedTokenStyles } from './style'\n\ninterface SelectTokenProps {\n  tokenAddress: string\n  tokens: List<Token>\n}\n\nconst SelectedToken = ({ tokenAddress, tokens }: SelectTokenProps): ReactElement => {\n  const classes = useSelectedTokenStyles()\n  const token = tokens.find(({ address }) => address === tokenAddress)\n\n  return (\n    <MenuItem className={classes.container} disableRipple>\n      {token ? (\n        <>\n          <ListItemIcon>\n            <Img\n              className={classes.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n          />\n        </>\n      ) : (\n        <Text color=\"placeHolder\" size=\"xl\">\n          Select an asset*\n        </Text>\n      )}\n    </MenuItem>\n  )\n}\n\ninterface TokenSelectFieldProps {\n  initialValue?: string\n  isValid?: boolean\n  tokens: List<Token>\n}\n\nconst TokenSelectField = ({ initialValue, isValid = true, tokens }: TokenSelectFieldProps): ReactElement => {\n  const classes = useSelectStyles()\n  const tokenClasses = useSelectedTokenStyles()\n\n  return (\n    <Field\n      classes={{ selectMenu: classes.selectMenu }}\n      className={isValid ? 'isValid' : 'isInvalid'}\n      component={(props) => (\n        <SelectField\n          {...props}\n          inputProps={{\n            'data-testid': 'token-input',\n          }}\n        />\n      )}\n      displayEmpty\n      initialValue={initialValue}\n      name=\"token\"\n      renderValue={(tokenAddress) => <SelectedToken tokenAddress={tokenAddress} tokens={tokens} />}\n      validate={required}\n    >\n      {tokens.map((token) => (\n        <MenuItem key={token.address} value={token.address}>\n          <ListItemIcon>\n            <Img\n              className={tokenClasses.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n            data-testid={`select-token-${token.name}`}\n          />\n        </MenuItem>\n      ))}\n    </Field>\n  )\n}\n\nexport default TokenSelectField\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport { Modal } from 'src/components/Modal'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getDeleteAllowanceTxData } from 'src/logic/safe/utils/spendingLimits'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { getResetTimeOptions } from './FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo } from './InfoDisplay'\nimport { SpendingLimitTable } from './LimitsTable/dataFetcher'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { TransferAmount } from 'src/routes/safe/components/Balances/SendModal/TransferAmount'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport { getSpendingLimitModuleAddress } from 'src/logic/contracts/spendingLimitContracts'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\ninterface RemoveSpendingLimitModalProps {\n  onClose: () => void\n  spendingLimit: SpendingLimitTable\n  open: boolean\n}\n\nexport const RemoveLimitModal = ({ onClose, spendingLimit, open }: RemoveSpendingLimitModalProps): ReactElement => {\n  const tokenInfo = useTokenInfo(spendingLimit.spent.tokenAddress)\n  const { safeAddress } = useSafeAddress()\n  const [txData, setTxData] = useState('')\n  const dispatch = useDispatch()\n  const chainId = useSelector(currentChainId)\n\n  const spendingLimitAddress = getSpendingLimitModuleAddress(chainId)\n\n  useEffect(() => {\n    const {\n      beneficiary,\n      spent: { tokenAddress },\n    } = spendingLimit\n    const txData = getDeleteAllowanceTxData({ beneficiary, tokenAddress })\n    setTxData(txData)\n  }, [spendingLimit])\n\n  const removeSelectedSpendingLimit = (txParameters: TxParameters, delayExecution: boolean) => {\n    if (!spendingLimitAddress) return\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: spendingLimitAddress,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.REMOVE_SPENDING_LIMIT_TX,\n          delayExecution,\n        }),\n      )\n\n      trackEvent(SETTINGS_EVENTS.SPENDING_LIMIT.LIMIT_REMOVED)\n    } catch (e) {\n      console.error(\n        `failed to remove spending limit ${spendingLimit.beneficiary} -> ${spendingLimit.spent.tokenAddress}`,\n        e.message,\n      )\n    }\n  }\n\n  const resetTimeLabel =\n    getResetTimeOptions().find(({ value }) => +value === +spendingLimit.resetTime.resetTimeMin)?.label ?? ''\n\n  return (\n    <Modal\n      handleClose={onClose}\n      open={open}\n      title=\"Remove spending limit\"\n      description=\"Remove the selected spending limit\"\n    >\n      <TxModalWrapper\n        txData={txData}\n        txTo={spendingLimitAddress}\n        onSubmit={removeSelectedSpendingLimit}\n        onClose={onClose}\n        submitText=\"Remove\"\n      >\n        <ModalHeader onClose={onClose} title=\"Remove spending limit\" />\n        <Hairline />\n\n        <Modal.Body>\n          <Col align=\"center\" margin=\"md\">\n            {tokenInfo && (\n              <TransferAmount\n                token={tokenInfo}\n                text={`${fromTokenUnit(spendingLimit.spent.amount, tokenInfo.decimals)} ${tokenInfo.symbol}`}\n              />\n            )}\n          </Col>\n          <Col margin=\"md\">\n            <AddressInfo title=\"Beneficiary\" address={spendingLimit.beneficiary} color=\"placeHolder\" />\n          </Col>\n          <Col>\n            <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} color=\"placeHolder\" />\n          </Col>\n        </Modal.Body>\n      </TxModalWrapper>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { SpendingLimitRow } from 'src/logic/safe/utils/spendingLimits'\nimport { relativeTime } from 'src/utils/date'\n\nexport const SPENDING_LIMIT_TABLE_BENEFICIARY_ID = 'beneficiary'\nexport const SPENDING_LIMIT_TABLE_SPENT_ID = 'spent'\nexport const SPENDING_LIMIT_TABLE_RESET_TIME_ID = 'resetTime'\nexport const SPENDING_LIMIT_TABLE_ACTION_ID = 'action'\n\nexport type SpendingLimitTable = {\n  [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: string\n  [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n    spent: string\n    amount: string\n    tokenAddress: string\n  }\n  [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n    relativeTime: string\n    lastResetMin: string\n    resetTimeMin: string\n  }\n}\n\nexport const getSpendingLimitData = (spendingLimits?: SpendingLimitRow[] | null): SpendingLimitTable[] | undefined =>\n  spendingLimits?.map((spendingLimit) => ({\n    [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: spendingLimit.delegate,\n    [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n      spent: spendingLimit.spent,\n      amount: spendingLimit.amount,\n      tokenAddress: spendingLimit.token,\n    },\n    [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n      relativeTime: relativeTime(spendingLimit.lastResetMin, spendingLimit.resetTimeMin),\n      lastResetMin: spendingLimit.lastResetMin,\n      resetTimeMin: spendingLimit.resetTimeMin,\n    },\n  }))\n\nexport const generateColumns = (): List<TableColumn> => {\n  const beneficiaryColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n    label: 'Beneficiary',\n    order: false,\n  }\n\n  const spentColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_SPENT_ID,\n    label: 'Spent',\n    order: false,\n    static: true,\n  }\n\n  const resetColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n    label: 'Reset Time',\n    order: false,\n    static: true,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_ACTION_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([beneficiaryColumn, spentColumn, resetColumn, actionsColumn])\n}\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport const useWindowDimensions = (): { width: number; height: number } => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\n\nconst StyledImage = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  margin: 0 8px 0 0;\n`\n\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ntype FormattedAmountsProps = { amount: string; spent: string; tokenInfo?: Token }\n\ntype FormattedAmounts = { amount: string; spent: string }\n\nconst useFormattedAmounts = ({ amount, spent, tokenInfo }: FormattedAmountsProps): FormattedAmounts | undefined => {\n  return useMemo(() => {\n    if (tokenInfo) {\n      const formattedSpent = formatAmount(fromTokenUnit(spent, tokenInfo.decimals)).toString()\n      const formattedAmount = formatAmount(fromTokenUnit(amount, tokenInfo.decimals)).toString()\n      return { amount: formattedAmount, spent: formattedSpent }\n    }\n  }, [amount, spent, tokenInfo])\n}\n\ninterface SpentVsAmountProps {\n  amount: string\n  spent: string\n  tokenAddress: string\n}\n\nexport const SpentVsAmount = ({ amount, spent, tokenAddress }: SpentVsAmountProps): ReactElement | null => {\n  const { width } = useWindowDimensions()\n  const showIcon = useMemo(() => width > 1024, [width])\n\n  const tokenInfo = useTokenInfo(tokenAddress)\n  const spentInfo = useFormattedAmounts({ amount, spent, tokenInfo })\n\n  return spentInfo && tokenInfo ? (\n    <StyledImageName>\n      {showIcon && <StyledImage alt={tokenInfo.name} onError={setImageToPlaceholder} src={tokenInfo.logoUri || ''} />}\n      <Text size=\"lg\">{`${spentInfo.spent} of ${spentInfo.amount} ${tokenInfo.symbol}`}</Text>\n    </StyledImageName>\n  ) : null\n}\n","import { Text, Icon } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Row from 'src/components/layout/Row'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Table from 'src/components/Table'\nimport Track from 'src/components/Track'\nimport { AddressInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { RemoveLimitModal } from 'src/routes/safe/components/Settings/SpendingLimit/RemoveLimitModal'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\n\nimport {\n  generateColumns,\n  SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n  SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n  SPENDING_LIMIT_TABLE_SPENT_ID,\n  SpendingLimitTable,\n} from './dataFetcher'\nimport { SpentVsAmount } from './SpentVsAmount'\n\ninterface SpendingLimitTableProps {\n  data?: SpendingLimitTable[]\n}\n\nexport const LimitsTable = ({ data }: SpendingLimitTableProps): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const [selectedRow, setSelectedRow] = useState<SpendingLimitTable>()\n\n  return (\n    <>\n      <TableContainer style={{ minHeight: '440px' }}>\n        <Table\n          columns={columns}\n          data={data}\n          defaultFixed\n          defaultOrderBy={SPENDING_LIMIT_TABLE_BENEFICIARY_ID}\n          defaultRowsPerPage={5}\n          label=\"Spending limits\"\n          noBorder\n          size={data?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid=\"spending-limit-table-row\"\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n\n                  return (\n                    <TableCell align={column.align} component=\"td\" key={`${columnId}-${index}`}>\n                      {columnId === SPENDING_LIMIT_TABLE_BENEFICIARY_ID && <AddressInfo address={rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_SPENT_ID && <SpentVsAmount {...rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_RESET_TIME_ID && (\n                        <Text size=\"lg\">{rowElement.relativeTime}</Text>\n                      )}\n                    </TableCell>\n                  )\n                })}\n                <TableCell component=\"td\">\n                  <Row align=\"end\" className={classes.actions}>\n                    {granted && (\n                      <Track {...SETTINGS_EVENTS.SPENDING_LIMIT.REMOVE_LIMIT}>\n                        <ButtonHelper onClick={() => setSelectedRow(row)} data-testid=\"remove-limit-btn\">\n                          <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove limit\" />\n                        </ButtonHelper>\n                      </Track>\n                    )}\n                  </Row>\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {selectedRow && <RemoveLimitModal onClose={() => setSelectedRow(undefined)} spendingLimit={selectedRow} open />}\n    </>\n  )\n}\n","import { KeyboardEvent, ReactElement, useEffect, useState } from 'react'\nimport { useForm, useFormState } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport { sameString } from 'src/utils/strings'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { mustBeEthereumAddress } from 'src/components/forms/validator'\n\nconst BeneficiaryInput = styled.div`\n  grid-area: beneficiaryInput;\n  max-width: 100%;\n  word-break: break-all;\n`\n\nconst BeneficiaryScan = styled.div`\n  grid-area: beneficiaryScan;\n`\n\nconst Beneficiary = (): ReactElement => {\n  const { initialValues } = useFormState()\n  const { mutators } = useForm()\n  const [addressErrorMsg, setAddressErrorMsg] = useState('')\n\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string } | null>({\n    address: initialValues?.beneficiary || '',\n    name: '',\n  })\n\n  const [pristine, setPristine] = useState<boolean>(!initialValues?.beneficiary)\n\n  useEffect(() => {\n    if (selectedEntry === null) {\n      mutators?.setBeneficiary?.('')\n\n      if (pristine) {\n        setPristine(false)\n      }\n    }\n  }, [mutators, pristine, selectedEntry])\n\n  const addressBook = useSelector(currentNetworkAddressBook)\n\n  const handleScan = (value: string, closeQrModal: () => void) => {\n    const scannedAddress = value.startsWith('ethereum:') ? value.replace('ethereum:', '') : value\n    const scannedName = addressBook.find(({ address }) => {\n      return sameAddress(scannedAddress, address)\n    })?.name\n\n    const addressErrorMessage = mustBeEthereumAddress(scannedAddress)\n    if (!addressErrorMessage) {\n      mutators?.setBeneficiary?.(scannedAddress)\n\n      setSelectedEntry({\n        name: scannedName,\n        address: scannedAddress,\n      })\n      setAddressErrorMsg('')\n    } else setAddressErrorMsg(addressErrorMessage)\n\n    closeQrModal()\n  }\n\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLElement>): void => {\n    if (sameString(e.key, 'Tab')) {\n      return\n    }\n    setSelectedEntry(null)\n  }\n\n  const handleOnClick = () => {\n    setSelectedEntry(null)\n  }\n\n  return selectedEntry?.address ? (\n    <BeneficiaryInput\n      role=\"button\"\n      aria-pressed=\"false\"\n      tabIndex={0}\n      onKeyDown={handleOnKeyDown}\n      onClick={handleOnClick}\n    >\n      <PrefixedEthHashInfo\n        hash={selectedEntry.address}\n        name={selectedEntry.name}\n        showCopyBtn\n        showAvatar\n        textSize=\"lg\"\n        explorerUrl={getExplorerInfo(selectedEntry.address)}\n      />\n    </BeneficiaryInput>\n  ) : (\n    <>\n      <BeneficiaryInput>\n        <AddressBookInput\n          fieldMutator={mutators?.setBeneficiary}\n          pristine={pristine}\n          errorMsg={addressErrorMsg}\n          setSelectedEntry={setSelectedEntry}\n          setIsValidAddress={() => {}}\n          label=\"Beneficiary\"\n        />\n      </BeneficiaryInput>\n      <BeneficiaryScan>\n        <ScanQRWrapper handleScan={handleScan} />\n      </BeneficiaryScan>\n    </>\n  )\n}\n\nexport default Beneficiary\n","import { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nconst TokenInput = styled.div`\n  grid-area: tokenInput;\n`\n\nconst Token = (): ReactElement => {\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  return (\n    <TokenInput>\n      <TokenSelectField tokens={tokens} />\n    </TokenInput>\n  )\n}\n\nexport default Token\n","import { FormState, Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport GnoForm from 'src/components/forms/GnoForm'\nimport { Modal } from 'src/components/Modal'\nimport { Amount, Beneficiary, ResetTime, Token } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport Hairline from 'src/components/layout/Hairline'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\n\nconst FormContainer = styled.div`\n  padding: 24px;\n  align-items: center;\n  display: grid;\n  grid-template-columns: 4fr auto;\n  grid-template-rows: 6fr;\n  gap: 16px 8px;\n  grid-template-areas:\n    'beneficiaryInput beneficiaryScan'\n    'tokenInput .'\n    'amountInput .'\n    'resetTimeLabel resetTimeLabel'\n    'resetTimeToggle resetTimeToggle'\n    'resetTimeOption resetTimeOption';\n`\n\nconst formMutators: Record<string, Mutator<{ beneficiary: { name: string } }>> = {\n  setBeneficiary: (args, state, utils) => {\n    utils.changeValue(state, 'beneficiary', () => args[0])\n  },\n}\n\ninterface NewSpendingLimitProps {\n  initialValues?: Record<string, string>\n  onCancel: () => void\n  onReview: (values) => void\n}\n\nconst canReview = ({\n  invalid,\n  submitting,\n  dirtyFieldsSinceLastSubmit,\n  values: { beneficiary, token, amount },\n}: FormState<{ beneficiary: string; token: string; amount: string }>): boolean =>\n  !(submitting || invalid || !beneficiary || !token || !amount || !dirtyFieldsSinceLastSubmit)\n\nconst Create = ({ initialValues, onCancel, onReview }: NewSpendingLimitProps): ReactElement => {\n  return (\n    <>\n      <ModalHeader onClose={onCancel} title=\"New spending limit\" subTitle={getStepTitle(1, 2)} />\n      <Hairline />\n      <GnoForm formMutators={formMutators} onSubmit={onReview} initialValues={initialValues}>\n        {(...args) => {\n          return (\n            <>\n              <FormContainer>\n                <Beneficiary />\n                <Token />\n                <Amount />\n                <ResetTime />\n              </FormContainer>\n\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onCancel }}\n                  confirmButtonProps={{ disabled: !canReview(args[2]), text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default Create\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { _getChainId } from 'src/config'\nimport { createTransaction, CreateTransactionArgs } from 'src/logic/safe/store/actions/createTransaction'\nimport { SafeRecordProps, SpendingLimit } from 'src/logic/safe/store/models/safe'\nimport {\n  addSpendingLimitBeneficiaryMultiSendTx,\n  currentMinutes,\n  enableSpendingLimitModuleMultiSendTx,\n  getResetSpendingLimitTx,\n  setSpendingLimitMultiSendTx,\n  setSpendingLimitTx,\n  spendingLimitMultiSendTx,\n  SpendingLimitRow,\n} from 'src/logic/safe/utils/spendingLimits'\nimport { MultiSendTx } from 'src/logic/safe/transactions/multisend'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { getResetTimeOptions } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport Hairline from 'src/components/layout/Hairline'\nimport { isModuleEnabled } from 'src/logic/safe/utils/modules'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { ActionCallback, CREATE } from 'src/routes/safe/components/Settings/SpendingLimit/NewLimitModal'\nimport { TransferAmount } from 'src/routes/safe/components/Balances/SendModal/TransferAmount'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { getSpendingLimitModuleAddress } from 'src/logic/contracts/spendingLimitContracts'\n\nconst useExistentSpendingLimit = ({\n  spendingLimits,\n  txToken,\n  values,\n}: {\n  spendingLimits?: SafeRecordProps['spendingLimits']\n  txToken: Token\n  values: ReviewSpendingLimitProps['values']\n}) => {\n  // undefined: before setting a value\n  // null: if no previous value\n  // SpendingLimit: if previous value exists\n  return useMemo<SpendingLimit | null>(() => {\n    // if `delegate` already exist, check what tokens were delegated to the _beneficiary_ `getTokens(safe, delegate)`\n    const currentDelegate = spendingLimits?.find(\n      ({ delegate, token }) => sameAddress(delegate, values.beneficiary) && sameAddress(token, values.token),\n    )\n\n    // let the user know that is about to replace an existent allowance\n    if (currentDelegate !== undefined) {\n      return {\n        ...currentDelegate,\n        amount: fromTokenUnit(currentDelegate.amount, txToken.decimals),\n      }\n    } else {\n      return null\n    }\n  }, [spendingLimits, txToken.decimals, values.beneficiary, values.token])\n}\n\nconst previousResetTime = (existentSpendingLimit: SpendingLimit) =>\n  getResetTimeOptions().find(({ value }) => value === existentSpendingLimit.resetTimeMin)?.label ??\n  'One-time spending limit'\n\ntype SpendingLimitsTxData = {\n  spendingLimitTxData: CreateTransactionArgs\n  transactions: MultiSendTx[]\n  spendingLimitArgs: {\n    beneficiary: string\n    token: string\n    spendingLimitInWei: string\n    resetTimeMin: number\n    resetBaseMin: number\n  }\n}\nconst calculateSpendingLimitsTxData = async (\n  safeAddress: string,\n  safeVersion: string,\n  connectedWalletAddress: string,\n  spendingLimits: SpendingLimit[] | null | undefined,\n  existentSpendingLimit: SpendingLimit | null,\n  txToken: Token,\n  values: Record<string, string>,\n  modules: string[],\n  moduleAddress: string,\n  txParameters?: TxParameters,\n): Promise<SpendingLimitsTxData> => {\n  const isSpendingLimitEnabled = isModuleEnabled(modules, moduleAddress)\n  const transactions: MultiSendTx[] = []\n\n  // is spendingLimit module enabled? -> if not, create the tx to enable it, and encode it\n  if (!isSpendingLimitEnabled && safeAddress) {\n    const enableSpendingLimitTx = await enableSpendingLimitModuleMultiSendTx(\n      safeAddress,\n      safeVersion,\n      connectedWalletAddress,\n      moduleAddress,\n    )\n    transactions.push(enableSpendingLimitTx)\n  }\n\n  // does `delegate` already exist? (`getDelegates`, previously queried to build the table with allowances (??))\n  //                                  ^ - shall we rely on this or query the list of delegates once again?\n  const isDelegateAlreadyAdded =\n    spendingLimits?.some(({ delegate }) => sameAddress(delegate, values?.beneficiary)) ?? false\n\n  // if `delegate` does not exist, add it by calling `addDelegate(beneficiary)`\n  if (!isDelegateAlreadyAdded && values?.beneficiary) {\n    transactions.push(addSpendingLimitBeneficiaryMultiSendTx(values.beneficiary, moduleAddress))\n  }\n\n  if (existentSpendingLimit && existentSpendingLimit.spent !== '0') {\n    transactions.push(getResetSpendingLimitTx(existentSpendingLimit.delegate, txToken.address, moduleAddress))\n  }\n\n  // prepare the setAllowance tx\n  const startTime = currentMinutes() - 30\n  const spendingLimitArgs = {\n    beneficiary: values.beneficiary,\n    token: values.token,\n    spendingLimitInWei: toTokenUnit(values.amount, txToken.decimals),\n    resetTimeMin: values.withResetTime ? +values.resetTime : 0,\n    resetBaseMin: values.withResetTime ? startTime : 0,\n  }\n\n  let spendingLimitTxData\n  if (safeAddress) {\n    // if there's no tx for enable module or adding a delegate, then we avoid using multiSend Tx\n    if (transactions.length === 0) {\n      spendingLimitTxData = setSpendingLimitTx({ spendingLimitArgs, safeAddress, moduleAddress })\n    } else {\n      const encodedTxForMultisend = setSpendingLimitMultiSendTx({ spendingLimitArgs, safeAddress, moduleAddress })\n      transactions.push(encodedTxForMultisend)\n      spendingLimitTxData = spendingLimitMultiSendTx({ transactions, safeAddress })\n    }\n\n    if (txParameters) {\n      spendingLimitTxData.txNonce = txParameters.safeNonce\n      spendingLimitTxData.safeTxGas = txParameters.safeTxGas ? txParameters.safeTxGas : undefined\n      spendingLimitTxData.ethParameters = txParameters\n    }\n  }\n  return {\n    spendingLimitTxData,\n    transactions,\n    spendingLimitArgs,\n  }\n}\n\ninterface ReviewSpendingLimitProps {\n  onBack: ActionCallback\n  onClose: () => void\n  txToken: Token\n  values: Record<string, string>\n  existentSpendingLimit?: SpendingLimitRow\n}\n\nexport const ReviewSpendingLimits = ({ onBack, onClose, txToken, values }: ReviewSpendingLimitProps): ReactElement => {\n  const dispatch = useDispatch()\n\n  const {\n    address: safeAddress = '',\n    spendingLimits,\n    currentVersion: safeVersion = '',\n    modules,\n  } = useSelector(currentSafe)\n  const connectedWalletAddress = useSelector(userAccountSelector)\n  const existentSpendingLimit = useExistentSpendingLimit({ spendingLimits, txToken, values })\n  const [estimateGasArgs, setEstimateGasArgs] = useState<Partial<CreateTransactionArgs>>({\n    to: '',\n    txData: '',\n  })\n\n  const safeModules = useMemo(() => modules?.map((pair) => pair[1]) || [], [modules])\n\n  useEffect(() => {\n    const calculateSpendingLimit = async () => {\n      const moduleAddress = getSpendingLimitModuleAddress(_getChainId())\n      if (!moduleAddress) return\n\n      const { spendingLimitTxData } = await calculateSpendingLimitsTxData(\n        safeAddress,\n        safeVersion,\n        connectedWalletAddress,\n        spendingLimits,\n        existentSpendingLimit,\n        txToken,\n        values,\n        safeModules,\n        moduleAddress,\n      )\n      setEstimateGasArgs(spendingLimitTxData)\n    }\n    calculateSpendingLimit()\n  }, [\n    safeAddress,\n    safeVersion,\n    connectedWalletAddress,\n    spendingLimits,\n    existentSpendingLimit,\n    txToken,\n    values,\n    safeModules,\n  ])\n\n  const handleSubmit = async (txParameters: TxParameters, delayExecution: boolean): Promise<void> => {\n    const moduleAddress = getSpendingLimitModuleAddress(_getChainId())\n    if (!moduleAddress) return\n\n    const { ethGasPrice, ethGasLimit, ethGasPriceInGWei } = txParameters\n    const advancedOptionsTxParameters = {\n      ...txParameters,\n      ethGasPrice,\n      ethGasPriceInGWei,\n      ethGasLimit,\n    }\n\n    if (safeAddress) {\n      const { spendingLimitTxData } = await calculateSpendingLimitsTxData(\n        safeAddress,\n        safeVersion,\n        connectedWalletAddress,\n        spendingLimits,\n        existentSpendingLimit,\n        txToken,\n        values,\n        safeModules,\n        moduleAddress,\n        advancedOptionsTxParameters,\n      )\n\n      dispatch(createTransaction({ ...spendingLimitTxData, delayExecution }))\n\n      trackEvent({\n        ...SETTINGS_EVENTS.SPENDING_LIMIT.RESET_PERIOD,\n        label: values.withResetTime ? `${values.resetTime} minutes` : 'never',\n      })\n    }\n  }\n\n  const resetTimeLabel = useMemo(\n    () => (values.withResetTime ? getResetTimeOptions().find(({ value }) => value === values.resetTime)?.label : ''),\n    [values.resetTime, values.withResetTime],\n  )\n\n  return (\n    <TxModalWrapper\n      txData={estimateGasArgs.txData || ''}\n      txTo={estimateGasArgs.to}\n      operation={estimateGasArgs.operation}\n      onSubmit={handleSubmit}\n      onBack={() => onBack({ values: {}, txToken: makeToken(), step: CREATE })}\n      submitText=\"Submit\"\n      isSubmitDisabled={existentSpendingLimit === undefined}\n    >\n      <ModalHeader onClose={onClose} title=\"New spending limit\" subTitle={getStepTitle(2, 2)} />\n      <Hairline />\n\n      <Modal.Body>\n        <Col align=\"center\" margin=\"md\">\n          <TransferAmount\n            token={txToken}\n            text={`${fromTokenUnit(toTokenUnit(values.amount, txToken.decimals), txToken.decimals)} ${txToken.symbol}`}\n          />\n          {existentSpendingLimit && (\n            <Text size=\"lg\" color=\"error\" center>\n              Previous Amount: {existentSpendingLimit.amount}\n            </Text>\n          )}\n        </Col>\n        <Col margin=\"md\" style={{ wordBreak: 'break-all' }}>\n          <AddressInfo address={values.beneficiary} title=\"Beneficiary\" color=\"placeHolder\" />\n        </Col>\n        <Col margin=\"md\">\n          <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} color=\"placeHolder\" />\n          {existentSpendingLimit && (\n            <Row align=\"center\" margin=\"md\">\n              <Text size=\"lg\" color=\"error\">\n                Previous Reset Time: {previousResetTime(existentSpendingLimit)}\n              </Text>\n            </Row>\n          )}\n        </Col>\n\n        {existentSpendingLimit && (\n          <Col>\n            <Text size=\"xl\" color=\"error\" center strong>\n              You are about to replace an existent spending limit\n            </Text>\n          </Col>\n        )}\n      </Modal.Body>\n    </TxModalWrapper>\n  )\n}\n","import { List } from 'immutable'\nimport { ReactElement, Reducer, useCallback, useReducer } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Modal } from 'src/components/Modal'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nimport Create from './Create'\nimport { ReviewSpendingLimits } from './Review'\n\nexport const CREATE = 'CREATE' as const\nexport const REVIEW = 'REVIEW' as const\n\ntype Step = typeof CREATE | typeof REVIEW\n\ntype State = {\n  step: Step\n  values: Record<string, string>\n  txToken: Token\n}\n\ntype Action = {\n  type: Step\n  newState: State\n  tokens: List<Token>\n}\n\nconst newLimitModalReducer = (state: State, action: Action): State => {\n  const { type, newState, tokens } = action\n\n  switch (type) {\n    case CREATE: {\n      return {\n        ...state,\n        step: CREATE,\n      }\n    }\n\n    case REVIEW: {\n      return {\n        ...state,\n        ...newState,\n        // we lookup into the list of tokens for the selected token info\n        txToken: tokens.find((token) => sameAddress(token.address, newState.values.token)) ?? state.txToken,\n        step: REVIEW,\n      }\n    }\n  }\n}\n\nexport type ActionCallback = (state: State) => void\ntype NewLimitModalHook = [State, { create: ActionCallback; review: ActionCallback }]\n\nconst useNewLimitModal = (initialStep: Step): NewLimitModalHook => {\n  // globally stored tokens\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  // setup the reducer with initial values\n  const [state, dispatch] = useReducer<Reducer<State, Action>, State>(\n    newLimitModalReducer,\n    {\n      step: initialStep,\n      txToken: makeToken(),\n      values: {},\n    },\n    (state) => state,\n  )\n\n  // define actions\n  const create = useCallback<ActionCallback>((newState) => dispatch({ type: CREATE, newState, tokens }), [tokens])\n  const review = useCallback<ActionCallback>((newState) => dispatch({ type: REVIEW, newState, tokens }), [tokens])\n\n  // returns state and dispatch\n  return [state, { create, review }]\n}\n\ninterface SpendingLimitModalProps {\n  close: () => void\n  open: boolean\n}\n\nexport const NewLimitModal = ({ close, open }: SpendingLimitModalProps): ReactElement => {\n  // state and dispatch\n  const [{ step, txToken, values }, { create, review }] = useNewLimitModal(CREATE)\n\n  const handleReview = async (values) => {\n    // if form is valid, we update the state to REVIEW and sets values\n    review({ step, txToken, values })\n  }\n\n  return (\n    <Modal\n      handleClose={close}\n      open={open}\n      title=\"New spending limit\"\n      description=\"set rules for specific beneficiaries to access funds from this Safe without having to collect all signatures\"\n    >\n      {step === CREATE && <Create initialValues={values} onCancel={close} onReview={handleReview} />}\n      {step === REVIEW && <ReviewSpendingLimits onBack={create} onClose={close} txToken={txToken} values={values} />}\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/asset-amount.ac4f3737.svg\";","export default __webpack_public_path__ + \"static/media/beneficiary.4c7afb97.svg\";","export default __webpack_public_path__ + \"static/media/time.efbdb87c.svg\";","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport Img from 'src/components/layout/Img'\nimport AssetAmount from './assets/asset-amount.svg'\nimport Beneficiary from './assets/beneficiary.svg'\nimport Time from './assets/time.svg'\n\nconst StepWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  max-width: 720px;\n  text-align: center;\n`\n\nconst Step = styled.div`\n  width: 24%;\n  min-width: 120px;\n  max-width: 164px;\n`\n\nconst StepsLine = styled.div`\n  height: 2px;\n  flex: 1;\n  background: #d4d5d3;\n  margin: 46px 0;\n`\n\nexport const NewLimitSteps = (): ReactElement => (\n  <StepWrapper>\n    <Step>\n      <Img alt=\"Select Beneficiary\" title=\"Beneficiary\" height={96} src={Beneficiary} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select Beneficiary\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        Define beneficiary that will be able to use the allowance.\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        The beneficiary does not have to be an owner of this Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select asset and amount\" title=\"Asset and Amount\" height={96} src={AssetAmount} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select asset and amount\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can set a spending limit for any asset stored in your Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select time\" title=\"Time\" height={96} src={Time} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select time\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can choose to set a one-time spending limit or to have it automatically refill after a defined time-period\n      </Text>\n    </Step>\n  </StepWrapper>\n)\n","import { Button, Text, Title } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { currentSafeSpendingLimits } from 'src/logic/safe/store/selectors'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\n\nimport { LimitsTable } from './LimitsTable'\nimport { getSpendingLimitData } from './LimitsTable/dataFetcher'\nimport { NewLimitModal } from './NewLimitModal'\nimport { NewLimitSteps } from './NewLimitSteps'\nimport { useStyles } from './style'\nimport { SETTINGS_EVENTS } from 'src/utils/events/settings'\nimport Track from 'src/components/Track'\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst SpendingLimit = (): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n  const allowances = useSelector(currentSafeSpendingLimits)\n  const spendingLimitData = getSpendingLimitData(allowances)\n\n  const [showNewSpendingLimitModal, setShowNewSpendingLimitModal] = useState(false)\n  const openNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(true)\n  }\n  const closeNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(false)\n  }\n\n  return (\n    <>\n      <Block className={classes.container} grow=\"grow\">\n        <Title size=\"xs\" withoutMargin>\n          Spending limit\n        </Title>\n        <InfoText size=\"lg\">\n          You can set rules for specific beneficiaries to access funds from this Safe without having to collect all\n          signatures.\n        </InfoText>\n        {spendingLimitData?.length ? <LimitsTable data={spendingLimitData} /> : <NewLimitSteps />}\n      </Block>\n\n      {granted && (\n        <>\n          <Row align=\"end\" className={classes.buttonRow} grow>\n            <Col end=\"xs\">\n              <Track {...SETTINGS_EVENTS.SPENDING_LIMIT.NEW_LIMIT}>\n                <Button\n                  className={classes.actionButton}\n                  color=\"primary\"\n                  size=\"md\"\n                  data-testid=\"new-spending-limit-button\"\n                  onClick={openNewSpendingLimitModal}\n                  variant=\"contained\"\n                >\n                  New spending limit\n                </Button>\n              </Track>\n            </Col>\n          </Row>\n          {showNewSpendingLimitModal && <NewLimitModal close={closeNewSpendingLimitModal} open />}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default SpendingLimit\n"],"sourceRoot":""}