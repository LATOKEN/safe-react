{"version":3,"sources":["logic/collectibles/store/selectors/index.ts","routes/safe/components/Apps/components/SafeAppCard/SafeAppSkeleton.tsx","routes/safe/components/Apps/components/SafeAppCard/SafeAppCard.tsx","utils/clipboard.ts","routes/safe/components/Balances/Collectibles/components/Item.tsx","components/VirtualizedList/index.tsx","components/InfoAlert/index.tsx","routes/safe/components/Balances/Collectibles/index.tsx"],"names":["nftAssets","state","NFT_ASSETS_REDUCER_ID","nftTokens","NFT_TOKENS_REDUCER_ID","nftAssetsSelector","createSelector","assets","nftTokensSelector","tokens","items","nftLoadedSelector","loaded","nftAssetsToListSelector","Object","values","nftAssetsAddressFromNftTokensSelector","userNftTokens","addresses","map","nftToken","assetAddress","uniqueAddresses","Set","Array","from","orderedNFTAssets","sort","a","b","name","localeCompare","nftAssetsFromNftTokensSelector","nftAssetsFromNftTokens","filter","address","includes","gradientSK","keyframes","SafeAppLogoSK","styled","div","props","size","SafeAppTitleSK","SafeAppDescriptionSK","setSafeAppLogoFallback","SafeAppCard","safeApp","togglePin","isPinned","isCustomSafeApp","onRemove","chainId","useSelector","currentChainId","dispatch","useDispatch","safeAddress","useSafeAddress","appsPath","generateSafeRoute","SAFE_ROUTES","APPS","shortName","getShortName","openSafeAppLink","encodeURI","url","fetchStatus","FETCH_STATUS","LOADING","SafeAppContainer","StyledAppCard","LogoContainer","DescriptionContainer","StyledLink","to","SafeAppLogo","src","iconUrl","alt","onError","SafeAppTitle","SafeAppDescription","color","description","ActionsContainer","onClick","e","preventDefault","IconBtn","text","range","document","createRange","listener","clipboardData","setData","selectNodeContents","body","getSelection","addRange","addEventListener","execCommand","removeEventListener","removeAllRanges","copyToClipboard","getShareSafeAppUrl","showNotification","NOTIFICATIONS","SHARE_SAFE_APP_URL_COPIED","type","tooltip","PinnedIcon","error","currentTarget","onerror","fallbackSafeAppLogoSvg","SAFE_APP_CARD_HEIGHT","SAFE_APP_CARD_PADDING","motion","attrs","layout","initial","opacity","animate","exit","Link","Card","primary200","primary300","img","Title","Text","IconButton","Icon","useStyles","makeStyles","item","backgroundColor","borderRadius","boxShadow","boxSizing","cursor","granted","display","flexDirection","flexGrow","minHeight","minWidth","position","mainContent","zIndex","extraContent","alignItems","bottom","justifyContent","left","right","top","transition","image","maxWidth","maxHeight","width","height","objectFit","margin","alignSelf","textContainer","fontColor","flexShrink","fontSize","lineHeight","padding","title","fontWeight","overflow","textOverflow","whiteSpace","buttonIcon","marginRight","sm","sendButton","xs","Item","data","onSend","grantedSelector","classes","className","loading","cn","Button","variant","ignoreResizeObserverErrors","message","stopImmediatePropagation","VirtualizedList","children","style","useEffect","window","InfoAlert","useCachedState","id","isClosed","setClosed","severity","onClose","Paragraph","noMargin","createStyles","cardInner","cardOuter","gridRow","columnGap","gridTemplateColumns","marginBottom","rowGap","screenXs","screenSm","titleImg","backgroundPosition","backgroundRepeat","backgroundSize","titleText","titleFiller","marginLeft","noData","lg","textAlign","Collectibles","useState","selectedToken","setSelectedToken","sendNFTsModalOpen","setSendNFTsModalOpen","nftLoaded","nftAmount","useMemo","length","trackEvent","ASSETS_EVENTS","NFT_AMOUNT","label","itemContent","index","nftAsset","backgroundImage","i","handleItemSend","slug","tokenId","SendModal","activeScreenType","isOpen","CollectiblesPage","useAppList","allApps","pinnedSafeApps","nftApps","app","tags","infoBar","Grid","some"],"mappings":"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","file":"static/js/65.04c9e1f9.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\nimport { NFTAsset, NFTAssets, NFTTokens, NFTTokensStore } from 'src/logic/collectibles/sources/collectibles.d'\n\nimport { AppReduxState } from 'src/store'\nimport { NFT_ASSETS_REDUCER_ID, NFT_TOKENS_REDUCER_ID } from 'src/logic/collectibles/store/reducer/collectibles'\nexport const nftAssets = (state: AppReduxState): NFTAssets => state[NFT_ASSETS_REDUCER_ID]\nexport const nftTokens = (state: AppReduxState): NFTTokensStore => state[NFT_TOKENS_REDUCER_ID]\n\nexport const nftAssetsSelector = createSelector(nftAssets, (assets) => assets)\n\nexport const nftTokensSelector = createSelector(nftTokens, (tokens) => tokens.items)\n\nexport const nftLoadedSelector = createSelector(nftTokens, (tokens) => tokens.loaded)\n\nconst nftAssetsToListSelector = createSelector(nftAssets, (assets): NFTAsset[] => {\n  return assets ? Object.values(assets) : []\n})\n\nconst nftAssetsAddressFromNftTokensSelector = createSelector(nftTokensSelector, (userNftTokens): string[] => {\n  const addresses = userNftTokens.map((nftToken) => nftToken.assetAddress)\n  const uniqueAddresses = new Set(addresses)\n  return Array.from(uniqueAddresses)\n})\n\nexport const orderedNFTAssets = createSelector(\n  nftTokensSelector,\n  (userNftTokens): NFTTokens => userNftTokens.sort((a, b) => a.name.localeCompare(b.name)),\n)\n\nexport const nftAssetsFromNftTokensSelector = createSelector(\n  nftAssetsToListSelector,\n  nftAssetsAddressFromNftTokensSelector,\n  (nftAssets, nftAssetsFromNftTokens): NFTAsset[] => {\n    return nftAssets\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .filter(({ address }) => nftAssetsFromNftTokens.includes(address))\n  },\n)\n","import styled, { keyframes } from 'styled-components'\n\nexport const gradientSK = keyframes`\n0% {\n  background-position: 0% 54%;\n}\n50% {\n  background-position: 100% 47%;\n}\n100% {\n  background-position: 0% 54%;\n}\n`\n\nexport const SafeAppLogoSK = styled.div`\n  height: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size }) => (props.size === 'lg' ? '112px' : '50px')};\n  border-radius: 50%;\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppTitleSK = styled.div`\n  height: 18px;\n  width: 160px;\n  margin: 8px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n\nexport const SafeAppDescriptionSK = styled.div`\n  height: 12px;\n  width: 240px;\n  margin: 2px 0;\n\n  background-color: lightgrey;\n  background: linear-gradient(84deg, lightgrey, transparent);\n  background-size: 400% 400%;\n  animation: ${gradientSK} 1.5s ease infinite;\n`\n","import { SyntheticEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { motion } from 'framer-motion'\nimport IconButton from '@material-ui/core/IconButton'\nimport { Card, Title, Text, Icon } from '@gnosis.pm/safe-react-components'\n\nimport { generateSafeRoute, getShareSafeAppUrl, SAFE_ROUTES } from 'src/routes/routes'\nimport { SafeApp } from 'src/routes/safe/components/Apps/types'\nimport fallbackSafeAppLogoSvg from 'src/assets/icons/apps.svg'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { FETCH_STATUS } from 'src/utils/requests'\nimport { copyToClipboard } from 'src/utils/clipboard'\nimport { getShortName } from 'src/config'\nimport { SafeAppDescriptionSK, SafeAppLogoSK, SafeAppTitleSK } from './SafeAppSkeleton'\nimport { primary200, primary300 } from 'src/theme/variables'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\ntype SafeAppCardSize = 'md' | 'lg'\n\ntype SafeAppCardProps = {\n  safeApp: SafeApp\n  size: SafeAppCardSize\n  togglePin: (app: SafeApp) => void\n  isPinned?: boolean\n  isCustomSafeApp?: boolean\n  onRemove?: (app: SafeApp) => void\n}\n\nconst SafeAppCard = ({\n  safeApp,\n  size,\n  togglePin,\n  isPinned,\n  isCustomSafeApp,\n  onRemove,\n}: SafeAppCardProps): React.ReactElement => {\n  const chainId = useSelector(currentChainId)\n  const dispatch = useDispatch()\n\n  const { safeAddress } = useSafeAddress()\n  const appsPath = generateSafeRoute(SAFE_ROUTES.APPS, {\n    shortName: getShortName(),\n    safeAddress,\n  })\n  const openSafeAppLink = `${appsPath}?appUrl=${encodeURI(safeApp.url)}`\n\n  const shareSafeApp = () => {\n    const shareSafeAppUrl = getShareSafeAppUrl(safeApp.url, chainId)\n    copyToClipboard(shareSafeAppUrl)\n    dispatch(showNotification(NOTIFICATIONS.SHARE_SAFE_APP_URL_COPIED))\n  }\n\n  const isSafeAppLoading = safeApp.fetchStatus === FETCH_STATUS.LOADING\n\n  if (isSafeAppLoading) {\n    return (\n      <SafeAppContainer size={size}>\n        <StyledAppCard size={size}>\n          <LogoContainer size={size}>\n            <SafeAppLogoSK size={size} />\n          </LogoContainer>\n          <DescriptionContainer size={size}>\n            <SafeAppTitleSK />\n            <SafeAppDescriptionSK />\n            <SafeAppDescriptionSK />\n          </DescriptionContainer>\n        </StyledAppCard>\n      </SafeAppContainer>\n    )\n  }\n\n  return (\n    <SafeAppContainer size={size}>\n      <StyledLink to={openSafeAppLink} aria-label={`open ${safeApp.name} Safe App`}>\n        <StyledAppCard size={size}>\n          {/* Safe App Logo */}\n          <LogoContainer size={size}>\n            <SafeAppLogo\n              size={size}\n              src={safeApp.iconUrl}\n              alt={`${safeApp.name || 'Safe App'} Logo`}\n              onError={setSafeAppLogoFallback}\n            />\n          </LogoContainer>\n\n          {/* Safe App Description */}\n          <DescriptionContainer size={size}>\n            <SafeAppTitle size=\"xs\">{safeApp.name}</SafeAppTitle>\n            <SafeAppDescription size=\"lg\" color=\"inputFilled\">\n              {safeApp.description}\n            </SafeAppDescription>\n          </DescriptionContainer>\n\n          {/* Safe App Actions */}\n          <ActionsContainer onClick={(e) => e.preventDefault()}>\n            {/* Share Safe App button */}\n            <IconBtn onClick={shareSafeApp} aria-label={`copy ${safeApp.name} Safe App share link to clipboard`}>\n              <Icon size=\"md\" type=\"share\" tooltip=\"Copy share link\" />\n            </IconBtn>\n\n            {/* Pin & Unpin Safe App button */}\n            {!isCustomSafeApp && (\n              <IconBtn\n                onClick={() => togglePin(safeApp)}\n                aria-label={`${isPinned ? 'Unpin' : 'Pin'} ${safeApp.name} Safe App`}\n              >\n                {isPinned ? (\n                  <PinnedIcon size=\"md\" type=\"bookmarkFilled\" color=\"primary\" tooltip=\"Unpin from the Safe Apps\" />\n                ) : (\n                  <PinnedIcon size=\"md\" type=\"bookmark\" tooltip=\"Pin from the Safe Apps\" />\n                )}\n              </IconBtn>\n            )}\n\n            {/* Remove custom Safe App button */}\n            {isCustomSafeApp && (\n              <IconBtn onClick={() => onRemove?.(safeApp)} aria-label={`Remove ${safeApp.name} custom Safe App`}>\n                <Icon size=\"md\" type=\"delete\" color=\"error\" tooltip=\"Remove Custom Safe App\" />\n              </IconBtn>\n            )}\n          </ActionsContainer>\n        </StyledAppCard>\n      </StyledLink>\n    </SafeAppContainer>\n  )\n}\n\nexport default SafeAppCard\n\nconst setSafeAppLogoFallback = (error: SyntheticEvent<HTMLImageElement, Event>): void => {\n  error.currentTarget.onerror = null\n  error.currentTarget.src = fallbackSafeAppLogoSvg\n}\n\nexport const SAFE_APP_CARD_HEIGHT = 190\nexport const SAFE_APP_CARD_PADDING = 16\n\nconst SafeAppContainer = styled(motion.div).attrs({\n  layout: true,\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n  exit: { opacity: 0 },\n})`\n  position: relative;\n  display: flex;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n\n  grid-column: span ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '2' : '1')};\n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  flex: 1 0;\n  height: ${SAFE_APP_CARD_HEIGHT}px;\n  text-decoration: none;\n`\n\nconst StyledAppCard = styled(Card)`\n  flex: 1 1 100%;\n  padding: ${SAFE_APP_CARD_PADDING}px;\n  display: flex;\n  flex-direction: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'row' : 'column')};\n  box-shadow: none;\n  border: 2px solid transparent;\n\n  transition: all 0.3s ease-in-out 0s;\n  transition-property: border-color, background-color;\n\n  :hover {\n    background-color: ${primary200};\n    border: 2px solid ${primary300};\n  }\n`\n\nconst LogoContainer = styled.div`\n  flex: 0 0;\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  justify-content: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? 'center' : 'start')};\n  align-items: center;\n`\n\nconst SafeAppLogo = styled.img`\n  height: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  width: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '112px' : '50px')};\n  object-fit: contain;\n`\n\nconst DescriptionContainer = styled.div`\n  flex: 0 0;\n\n  flex-basis: ${(props: { size: SafeAppCardSize }) => (props.size === 'lg' ? '50%' : 'auto')};\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SafeAppTitle = styled(Title)`\n  margin: 8px 0px;\n  font-size: 16px;\n  line-height: 22px;\n  font-weight: bold;\n  color: initial;\n`\n\nconst SafeAppDescription = styled(Text)`\n  margin: 0;\n  line-height: 22px;\n\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nconst ActionsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  margin: 16px 12px;\n`\n\nconst IconBtn = styled(IconButton)`\n  padding: 8px;\n\n  && svg {\n    width: 16px;\n    height: 16px;\n  }\n`\nconst PinnedIcon = styled(Icon)`\n  padding-left: 2px;\n`\n","export const copyToClipboard = (text: string): void => {\n  const range = document.createRange()\n  range.selectNodeContents(document.body)\n  document?.getSelection()?.addRange(range)\n\n  function listener(e: ClipboardEvent) {\n    e.clipboardData?.setData('text/plain', text)\n    e.preventDefault()\n  }\n  document.addEventListener('copy', listener)\n  document.execCommand('copy')\n  document.removeEventListener('copy', listener)\n\n  document?.getSelection()?.removeAllRanges()\n}\n","import { makeStyles } from '@material-ui/core/styles'\n// import CallMade from '@material-ui/icons/CallMade'\nimport cn from 'classnames'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Button from 'src/components/layout/Button'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { fontColor, sm, xs } from 'src/theme/variables'\n\nconst useStyles = makeStyles({\n  item: {\n    backgroundColor: '#fff',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px 0 rgba(33, 48, 77, 0.10)',\n    boxSizing: 'border-box',\n    cursor: (props) => (props.granted ? 'pointer' : 'default'),\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    minHeight: '250px',\n    minWidth: '0',\n    position: 'relative',\n\n    '&:hover .showOnHover': {\n      opacity: '1',\n    },\n    '&:active .showOnHover': {\n      opacity: '1',\n    },\n  },\n  mainContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: '1',\n    position: 'relative',\n    zIndex: '1',\n  },\n  extraContent: {\n    alignItems: 'center',\n    backgroundColor: 'rgba(255, 243, 226, 0.6)',\n    bottom: '0',\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center',\n    left: '0',\n    opacity: '0',\n    position: 'absolute',\n    right: '0',\n    top: '0',\n    transition: 'opacity 0.15s ease-out',\n    zIndex: '5',\n  },\n  image: {\n    borderRadius: '8px',\n    maxWidth: '200px',\n    maxHeight: '200px',\n    width: '100%',\n    height: '100%',\n    objectFit: 'contain',\n    margin: '12px 12px 0',\n    alignSelf: 'center',\n  },\n  textContainer: {\n    boxSizing: 'border-box',\n    color: fontColor,\n    flexShrink: '0',\n    fontSize: '12px',\n    lineHeight: '1.4',\n    padding: '15px 22px 20px',\n  },\n  title: {\n    fontWeight: 'bold',\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  text: {\n    margin: '0',\n    maxWidth: '100%',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  buttonIcon: {\n    fontSize: 16,\n    marginRight: sm,\n  },\n  sendButton: {\n    borderRadius: xs,\n    minWidth: '85px',\n\n    '& > span': {\n      fontSize: '14px',\n    },\n  },\n} as any)\n\nconst Item = ({ data, onSend }: { data: NFTToken; onSend: (nftToken: NFTToken) => void }): ReactElement => {\n  const granted = useSelector(grantedSelector)\n  const classes = useStyles({ granted })\n\n  return (\n    <div className={classes.item}>\n      <div className={classes.mainContent}>\n        <img src={data.image} className={classes.image} loading=\"lazy\" />\n        <div className={classes.textContainer}>\n          {data.name && (\n            <h3 className={classes.title} title={data.name}>\n              {data.name}\n            </h3>\n          )}\n          {data.description && (\n            <p className={classes.text} title={data.description}>\n              {data.description}\n            </p>\n          )}\n        </div>\n      </div>\n      {granted && (\n        <div className={cn(classes.extraContent, 'showOnHover')}>\n          <Button className={classes.sendButton} color=\"primary\" onClick={onSend} size=\"small\" variant=\"contained\">\n            {/* <CallMade alt=\"Send\" className={classes.buttonIcon} />  */}\n            Send\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Item\n","import { useEffect, ReactElement } from 'react'\nimport { Virtuoso } from 'react-virtuoso'\n\n// The ResizeObserver cannot deliver all observations in one animation frame.\n// The author of the `ResizeObserver` spec assures that it can be safely ignored:\n// https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded#comment86691361_49384120\n\nconst ignoreResizeObserverErrors = (e: ErrorEvent) => {\n  const RESIZE_OBSERVER_ERRORS = [\n    'ResizeObserver loop completed with undelivered notifications.',\n    'ResizeObserver loop limit exceeded',\n  ]\n  if (RESIZE_OBSERVER_ERRORS.includes(e.message)) {\n    e.stopImmediatePropagation()\n  }\n}\n\nconst VirtualizedList: typeof Virtuoso = ({ children, style, ...props }): ReactElement => {\n  useEffect(() => {\n    window.addEventListener('error', ignoreResizeObserverErrors)\n    return () => window.removeEventListener('error', ignoreResizeObserverErrors)\n  }, [])\n\n  return (\n    <Virtuoso\n      style={{\n        height: 'calc(100% - 54px)', // Remove breadcrumb height\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n    </Virtuoso>\n  )\n}\n\nexport default VirtualizedList\n","import MuiAlert from '@material-ui/lab/Alert'\nimport useCachedState from 'src/utils/storage/useCachedState'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { ReactElement } from 'react'\n\ntype InfoAlertProps = {\n  title: string\n  text: string\n  id: string\n}\n\nconst InfoAlert = (props: InfoAlertProps): ReactElement | null => {\n  const [isClosed, setClosed] = useCachedState<boolean>(`${props.id}Closed`)\n\n  return isClosed ? null : (\n    <MuiAlert severity=\"info\" onClose={() => setClosed(true)} style={{ margin: '0 20px 26px 0' }}>\n      <Paragraph style={{ fontWeight: 'bold', margin: '0 0 0.5em' }}>{props.title}</Paragraph>\n\n      <Paragraph noMargin>{props.text}</Paragraph>\n    </MuiAlert>\n  )\n}\n\nexport default InfoAlert\n","import { Fragment, ReactNode, useEffect, useMemo, useState } from 'react'\nimport Card from '@material-ui/core/Card'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { useSelector } from 'react-redux'\nimport { Grid } from '@material-ui/core'\n\nimport Item from './components/Item'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport {\n  nftAssetsFromNftTokensSelector,\n  nftLoadedSelector,\n  orderedNFTAssets,\n} from 'src/logic/collectibles/store/selectors'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport { fontColor, lg, screenSm, screenXs } from 'src/theme/variables'\nimport { NFTToken } from 'src/logic/collectibles/sources/collectibles.d'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { ASSETS_EVENTS } from 'src/utils/events/assets'\nimport VirtualizedList from 'src/components/VirtualizedList'\nimport InfoAlert from 'src/components/InfoAlert'\nimport SafeAppCard from '../../Apps/components/SafeAppCard/SafeAppCard'\nimport { useAppList } from '../../Apps/hooks/appList/useAppList'\n\nconst useStyles = makeStyles(\n  createStyles({\n    cardInner: {\n      boxSizing: 'border-box',\n      maxWidth: '100%',\n      padding: '52px 54px',\n    },\n    cardOuter: {\n      boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    },\n    gridRow: {\n      boxSizing: 'border-box',\n      columnGap: '30px',\n      display: 'grid',\n      gridTemplateColumns: '1fr',\n      marginBottom: '45px',\n      maxWidth: '100%',\n      rowGap: '45px',\n\n      '&:last-child': {\n        marginBottom: '0',\n      },\n\n      [`@media (min-width: ${screenXs}px)`]: {\n        gridTemplateColumns: '1fr 1fr',\n      },\n\n      [`@media (min-width: ${screenSm}px)`]: {\n        gridTemplateColumns: '1fr 1fr 1fr 1fr',\n      },\n    },\n    title: {\n      alignItems: 'center',\n      display: 'flex',\n      margin: '18px',\n    },\n    titleImg: {\n      backgroundPosition: '50% 50%',\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'contain',\n      borderRadius: '50%',\n      height: '45px',\n      margin: '0 10px 0 0',\n      width: '45px',\n    },\n    titleText: {\n      color: fontColor,\n      fontSize: '18px',\n      fontWeight: 'normal',\n      lineHeight: '1.2',\n      margin: '0',\n    },\n    titleFiller: {\n      backgroundColor: '#e8e7e6',\n      flexGrow: 1,\n      height: '2px',\n      marginLeft: '40px',\n    },\n    noData: {\n      fontSize: lg,\n      textAlign: 'center',\n    },\n  }),\n)\n\nconst Collectibles = ({ children }: { children: ReactNode }): React.ReactElement => {\n  const classes = useStyles()\n  const [selectedToken, setSelectedToken] = useState<NFTToken | undefined>()\n  const [sendNFTsModalOpen, setSendNFTsModalOpen] = useState(false)\n\n  const nftLoaded = useSelector(nftLoadedSelector)\n  const nftTokens = useSelector(orderedNFTAssets)\n  const nftAssetsFromNftTokens = useSelector(nftAssetsFromNftTokensSelector)\n\n  const nftAmount = useMemo(() => nftTokens.length, [nftTokens])\n  useEffect(() => {\n    trackEvent({ ...ASSETS_EVENTS.NFT_AMOUNT, label: nftAmount })\n  }, [nftAmount])\n\n  const handleItemSend = (nftToken: NFTToken) => {\n    setSelectedToken(nftToken)\n    setSendNFTsModalOpen(true)\n  }\n\n  if (nftAssetsFromNftTokens.length === 0) {\n    return (\n      <Fragment>\n        {children}\n        <Card className={classes.cardOuter}>\n          <div className={classes.cardInner}>\n            <Paragraph className={classes.noData}>{nftLoaded ? 'No NFTs available' : 'Loading NFTs...'}</Paragraph>\n          </div>\n        </Card>\n      </Fragment>\n    )\n  }\n\n  return (\n    <>\n      <VirtualizedList\n        data={nftAssetsFromNftTokens}\n        itemContent={(index, nftAsset) => {\n          // Larger collectible lists can cause this to be initially undefined\n          if (!nftAsset) {\n            return null\n          }\n\n          return (\n            <Fragment key={nftAsset.slug}>\n              {index === 0 && children}\n\n              <div className={classes.title}>\n                <div className={classes.titleImg} style={{ backgroundImage: `url(${nftAsset.image || ''})` }} />\n                <h2 className={classes.titleText}>{nftAsset.name}</h2>\n                <div className={classes.titleFiller} />\n              </div>\n              <div className={classes.gridRow}>\n                {nftTokens\n                  .filter(({ assetAddress }) => nftAsset.address === assetAddress)\n                  .map((nftToken, i) => (\n                    <Item\n                      data={nftToken}\n                      key={`${nftAsset.slug}_${nftToken.tokenId}_${i}`}\n                      onSend={() => handleItemSend(nftToken)}\n                    />\n                  ))}\n              </div>\n            </Fragment>\n          )\n        }}\n      />\n      <SendModal\n        activeScreenType=\"sendCollectible\"\n        isOpen={sendNFTsModalOpen}\n        onClose={() => setSendNFTsModalOpen(false)}\n        selectedToken={selectedToken}\n      />\n    </>\n  )\n}\n\nconst CollectiblesPage = (): React.ReactElement => {\n  const NFT_APPS_TAG = 'nft'\n  const { allApps, pinnedSafeApps, togglePin } = useAppList()\n  const nftApps = useMemo(() => allApps.filter((app) => app.tags?.includes(NFT_APPS_TAG)), [allApps])\n\n  const infoBar = (\n    <InfoAlert\n      id=\"collectiblesInfo\"\n      title=\"Use Safe Apps to view your NFT portfolio\"\n      text=\"Get the most optimal experience with Safe Apps. View your collections, buy or sell NFTs, and more.\"\n    />\n  )\n\n  return (\n    <Collectibles>\n      {nftApps.length > 0 && (\n        <>\n          {infoBar}\n\n          <h3>NFT apps</h3>\n\n          <Grid style={{ marginBottom: '30px' }}>\n            {nftApps.map((app) => (\n              <Grid item key={app.id} xs={4}>\n                <SafeAppCard\n                  safeApp={app}\n                  size=\"md\"\n                  togglePin={togglePin}\n                  isPinned={pinnedSafeApps.some(({ id }) => id === app.id)}\n                />\n              </Grid>\n            ))}\n          </Grid>\n        </>\n      )}\n\n      <h3>NFTs</h3>\n    </Collectibles>\n  )\n}\n\nexport default CollectiblesPage\n"],"sourceRoot":""}