{"version":3,"sources":["routes/safe/components/Settings/RemoveSafeModal/style.ts","routes/safe/components/Settings/RemoveSafeModal/index.tsx"],"names":["useStyles","makeStyles","createStyles","heading","boxSizing","justifyContent","minHeight","padding","sm","lg","container","manage","fontSize","close","height","width","owner","md","alignItems","description","getDestinationRoute","nextAvailableSafe","chainId","WELCOME_ROUTE","routesSlug","shortName","getChainById","safeAddress","address","generateSafeRoute","SAFE_ROUTES","DASHBOARD","RemoveSafeModal","isOpen","onClose","classes","useSelector","currentSafeWithNames","safeName","name","curChainId","currentChainId","localSafes","useLocalSafes","useMemo","currentSafeAddress","sameNetworkSafes","Object","values","flat","filter","safe","length","getNextAvailableSafe","dispatch","useDispatch","onRemoveSafeHandler","a","destination","removeSafe","history","push","Modal","handleClose","open","paperClassName","title","Row","align","className","grow","Paragraph","noMargin","weight","IconButton","disableRipple","onClick","Hairline","Block","Col","xs","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","size","Footer","Buttons","cancelButtonProps","confirmButtonProps","color","text"],"mappings":"kNAIaA,EAAYC,YACvBC,YAAa,CACXC,QAAS,CACPC,UAAW,aACXC,eAAgB,gBAChBC,UAAW,OACXC,QAAQ,GAAD,OAAKC,KAAL,YAAWC,OAEpBC,UAAW,CACTJ,UAAW,QACXC,QAAQ,GAAD,OAAKC,OAEdG,OAAQ,CACNC,SAAUH,MAEZI,MAAO,CACLC,OAAQ,OACRC,MAAO,QAETC,MAAO,CACLT,QAASU,KACTC,WAAY,UAEdC,YAAa,CACXZ,QAASU,S,2HCSf,SAASG,EAAoBC,GAC3B,IAAKA,IAAsBA,EAAkBC,QAAS,OAAOC,IAE7D,IACMC,EAA8B,CAClCC,UAFoBC,YAAaL,EAAkBC,SAA7CG,UAGNE,YAAaN,EAAkBO,SAEjC,OAAOC,YAAkBC,IAAYC,UAAWP,GAuEnCQ,UApES,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,OAAQC,EAAwD,EAAxDA,QAC3BC,EAAUnC,IAChB,EAAiDoC,YAAYC,KAA5CV,EAAjB,EAAQC,QAA4BU,EAApC,EAA8BC,KACxBC,EAAaJ,YAAYK,KACzBC,EAAaC,cACbtB,EAAoBuB,mBACxB,kBA5BJ,SAA8BH,EAAwBI,EAA4BH,GAChF,IAGMI,EAHiBC,OAAOC,OAAON,GAClCO,OACAC,QAAO,SAACC,GAAD,OAAUA,EAAKvB,UAAYiB,KACGK,QAAO,SAACC,GAAD,OAAUA,EAAK7B,UAAYmB,KAE1E,GAAIK,EAAiBM,OAAS,EAC5B,OAAON,EAAiB,GAqBlBO,CAAqBb,EAAYb,EAAae,KACpD,CAACF,EAAYb,EAAae,IAEtBY,EAAWC,cAEXC,EAAmB,uCAAG,4BAAAC,EAAA,sDACpBC,EAActC,EAAoBC,GACxCiC,EAASK,YAAWhC,IACpBO,IACA0B,IAAQC,KAAKH,GAJa,2CAAH,qDAOzB,OACE,eAACI,EAAA,EAAD,CACE3C,YAAY,2BACZ4C,YAAa7B,EACb8B,KAAM/B,EACNgC,eAAe,QACfC,MAAM,cALR,UAOE,eAACC,EAAA,EAAD,CAAKC,MAAM,SAASC,UAAWlC,EAAQhC,QAASmE,MAAI,EAApD,UACE,cAACC,EAAA,EAAD,CAAWF,UAAWlC,EAAQxB,OAAQ6D,UAAQ,EAACC,OAAO,SAAtD,yBAGA,cAACC,EAAA,EAAD,CAAYC,eAAa,EAACC,QAAS1C,EAAnC,SACE,cAAC,IAAD,CAAOmC,UAAWlC,EAAQtB,aAG9B,cAACgE,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,CAAOT,UAAWlC,EAAQzB,UAA1B,UACE,cAACyD,EAAA,EAAD,CAAKE,UAAWlC,EAAQnB,MAAxB,SACE,cAAC+D,EAAA,EAAD,CAAKX,MAAM,SAASY,GAAI,GAAxB,SACE,cAACC,EAAA,EAAD,CACEC,KAAMvD,EACNY,KAAMD,EACN6C,YAAU,EACVC,aAAW,EACXC,YAAaC,YAAgB3D,SAInC,cAACwC,EAAA,EAAD,CAAKE,UAAWlC,EAAQhB,YAAxB,SACE,eAACoD,EAAA,EAAD,CAAWC,UAAQ,EAACe,KAAK,KAAzB,kEACuD,4DADvD,iEAMJ,cAAC,IAAaC,OAAd,UACE,cAAC,IAAaA,OAAOC,QAArB,CACEC,kBAAmB,CAAEd,QAAS1C,GAC9ByD,mBAAoB,CAClBf,QAASpB,EACToC,MAAO,QACPC,KAAM","file":"static/js/105.2dba891e.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      boxSizing: 'border-box',\n      justifyContent: 'space-between',\n      minHeight: '74px',\n      padding: `${sm} ${lg}`,\n    },\n    container: {\n      minHeight: '369px',\n      padding: `${sm}`,\n    },\n    manage: {\n      fontSize: lg,\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n    owner: {\n      padding: md,\n      alignItems: 'center',\n    },\n    description: {\n      padding: md,\n    },\n  }),\n)\n","import IconButton from '@material-ui/core/IconButton'\nimport Close from '@material-ui/icons/Close'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport removeSafe from 'src/logic/safe/store/actions/removeSafe'\nimport { getChainById, getExplorerInfo } from 'src/config'\nimport Col from 'src/components/layout/Col'\nimport { WELCOME_ROUTE, history, SafeRouteParams, generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\nimport useLocalSafes, { LocalSafes } from 'src/logic/safe/hooks/useLocalSafes'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport { useMemo } from 'react'\nimport { SafeRecordProps } from 'src/logic/safe/store/models/safe'\n\ntype RemoveSafeModalProps = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nfunction getNextAvailableSafe(currentChainId: string, currentSafeAddress: string, localSafes: LocalSafes) {\n  const availableSafes = Object.values(localSafes)\n    .flat()\n    .filter((safe) => safe.address !== currentSafeAddress)\n  const sameNetworkSafes = availableSafes.filter((safe) => safe.chainId === currentChainId)\n\n  if (sameNetworkSafes.length > 0) {\n    return sameNetworkSafes[0]\n  }\n}\n\nfunction getDestinationRoute(nextAvailableSafe: SafeRecordProps | undefined) {\n  if (!nextAvailableSafe || !nextAvailableSafe.chainId) return WELCOME_ROUTE\n\n  const { shortName } = getChainById(nextAvailableSafe.chainId)\n  const routesSlug: SafeRouteParams = {\n    shortName,\n    safeAddress: nextAvailableSafe.address,\n  }\n  return generateSafeRoute(SAFE_ROUTES.DASHBOARD, routesSlug)\n}\n\nconst RemoveSafeModal = ({ isOpen, onClose }: RemoveSafeModalProps): React.ReactElement => {\n  const classes = useStyles()\n  const { address: safeAddress, name: safeName } = useSelector(currentSafeWithNames)\n  const curChainId = useSelector(currentChainId)\n  const localSafes = useLocalSafes()\n  const nextAvailableSafe = useMemo(\n    () => getNextAvailableSafe(curChainId, safeAddress, localSafes),\n    [curChainId, safeAddress, localSafes],\n  )\n  const dispatch = useDispatch()\n\n  const onRemoveSafeHandler = async () => {\n    const destination = getDestinationRoute(nextAvailableSafe)\n    dispatch(removeSafe(safeAddress))\n    onClose()\n    history.push(destination)\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"modal\"\n      title=\"Remove Safe\"\n    >\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph className={classes.manage} noMargin weight=\"bolder\">\n          Remove Safe\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Block className={classes.container}>\n        <Row className={classes.owner}>\n          <Col align=\"center\" xs={12}>\n            <PrefixedEthHashInfo\n              hash={safeAddress}\n              name={safeName}\n              showAvatar\n              showCopyBtn\n              explorerUrl={getExplorerInfo(safeAddress)}\n            />\n          </Col>\n        </Row>\n        <Row className={classes.description}>\n          <Paragraph noMargin size=\"lg\">\n            Removing a Safe only removes it from your interface. <b>It does not delete the Safe</b>. You can always add\n            it back using the Safe&apos;s address.\n          </Paragraph>\n        </Row>\n      </Block>\n      <GenericModal.Footer>\n        <GenericModal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{\n            onClick: onRemoveSafeHandler,\n            color: 'error',\n            text: 'Remove',\n          }}\n        />\n      </GenericModal.Footer>\n    </Modal>\n  )\n}\n\nexport default RemoveSafeModal\n"],"sourceRoot":""}