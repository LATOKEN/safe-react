{"version":3,"sources":["routes/safe/components/Balances/SendModal/screens/ContractInteraction/ReviewCustomTx/style.ts","routes/safe/components/Balances/SendModal/screens/ContractInteraction/ReviewCustomTx/index.tsx","routes/safe/components/Balances/SendModal/utils.tsx","components/Divider/index.tsx","routes/safe/components/Balances/SendModal/SafeInfo/index.tsx","routes/safe/components/Balances/SendModal/TransferAmount/index.tsx"],"names":["styles","createStyles","container","padding","md","lg","value","marginLeft","sm","outerData","borderRadius","minHeight","data","wordBreak","overflow","fontSize","fontFamily","maxHeight","letterSpacing","fontStretch","lineHeight","buttonRow","height","justifyContent","gap","useStyles","makeStyles","ReviewCustomTx","onClose","onPrev","tx","classes","dispatch","useDispatch","safeAddress","useSafeAddress","nativeCurrency","getNativeCurrency","txRecipient","contractAddress","txData","trim","txValue","toTokenUnit","decimals","TxModalWrapper","txTo","onSubmit","txParameters","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","safeTxGas","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","STANDARD_TX","console","error","onBack","ModalHeader","subTitle","getStepTitle","title","Hairline","Block","className","Row","align","margin","TransferAmount","token","getEthAsToken","text","symbol","SafeInfo","Divider","withArrow","Paragraph","color","noMargin","size","Col","xs","PrefixedEthHashInfo","hash","name","contractName","strongName","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","currentStep","totalSteps","Wrapper","styled","div","StyledDivider","DividerSRC","StyledIcon","Icon","type","StyledBlock","border","useSelector","currentSafeWithNames","address","ethBalance","safeName","AmountWrapper","alt","onError","setImageToPlaceholder","src","logoUri","style","marginTop"],"mappings":"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","file":"static/js/54.93caadc6.chunk.js","sourcesContent":["import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  container: {\n    padding: `${md} ${lg}`,\n  },\n  value: {\n    marginLeft: sm,\n  },\n  outerData: {\n    borderRadius: '5px',\n    minHeight: '21px',\n  },\n  data: {\n    wordBreak: 'break-all',\n    overflow: 'auto',\n    fontSize: '16px',\n    fontFamily: 'Averta',\n    maxHeight: '100px',\n    letterSpacing: 'normal',\n    fontStretch: 'normal',\n    lineHeight: '1.43',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n})\n","import { ReactElement } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport Divider from 'src/components/Divider'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getEthAsToken } from 'src/logic/tokens/utils/tokenHelpers'\nimport SafeInfo from 'src/routes/safe/components/Balances/SendModal/SafeInfo'\nimport { styles } from './style'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { TransferAmount } from 'src/routes/safe/components/Balances/SendModal/TransferAmount'\nimport { getStepTitle } from 'src/routes/safe/components/Balances/SendModal/utils'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\nexport type ReviewCustomTxProps = {\n  contractAddress: string\n  contractName?: string\n  data: string\n  value: string\n}\n\ntype Props = {\n  onClose: () => void\n  onPrev: () => void\n  tx: ReviewCustomTxProps\n}\n\nconst useStyles = makeStyles(styles)\n\nconst ReviewCustomTx = ({ onClose, onPrev, tx }: Props): ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const { safeAddress } = useSafeAddress()\n  const nativeCurrency = getNativeCurrency()\n\n  const txRecipient = tx.contractAddress\n  const txData = tx.data ? tx.data.trim() : ''\n  const txValue = tx.value ? toTokenUnit(tx.value, nativeCurrency.decimals) : '0'\n\n  const submitTx = (txParameters: TxParameters, delayExecution: boolean) => {\n    if (safeAddress) {\n      dispatch(\n        createTransaction({\n          safeAddress: safeAddress,\n          to: txRecipient as string,\n          valueInWei: txValue,\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.STANDARD_TX,\n          delayExecution,\n        }),\n      )\n    } else {\n      console.error('There was an error trying to submit the transaction, the safeAddress was not found')\n    }\n    onClose()\n  }\n\n  return (\n    <TxModalWrapper txData={txData} txValue={txValue} txTo={txRecipient} onSubmit={submitTx} onBack={onPrev}>\n      <ModalHeader onClose={onClose} subTitle={getStepTitle(2, 2)} title=\"Contract interaction\" />\n      <Hairline />\n      <Block className={classes.container}>\n        <Row align=\"center\" margin=\"md\">\n          <TransferAmount token={getEthAsToken('0')} text={`${tx.value || 0} ${nativeCurrency.symbol}`} />\n        </Row>\n        <SafeInfo text=\"Sending from\" />\n        <Divider withArrow />\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"lg\">\n            Recipient\n          </Paragraph>\n        </Row>\n\n        <Row align=\"center\" margin=\"md\">\n          <Col xs={12}>\n            <PrefixedEthHashInfo\n              hash={tx.contractAddress as string}\n              name={tx.contractName ?? ''}\n              strongName\n              showAvatar\n              showCopyBtn\n              explorerUrl={getExplorerInfo(tx.contractAddress as string)}\n            />\n          </Col>\n        </Row>\n        <Row margin=\"xs\">\n          <Paragraph color=\"disabled\" noMargin size=\"lg\">\n            Data (hex encoded)\n          </Paragraph>\n        </Row>\n        <Row align=\"center\">\n          <Col className={classes.outerData}>\n            <Row className={classes.data} size=\"md\">\n              {tx.data}\n            </Row>\n          </Col>\n        </Row>\n      </Block>\n    </TxModalWrapper>\n  )\n}\n\nexport default ReviewCustomTx\n","export const getStepTitle = (currentStep: number, totalSteps: number): string => `Step ${currentStep} of ${totalSteps}`\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { Icon, Divider as DividerSRC } from '@gnosis.pm/safe-react-components'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  margin: 8px 0;\n\n  svg {\n    margin: 0 12px 0 4px;\n  }\n`\nconst StyledDivider = styled(DividerSRC)`\n  width: 100%;\n`\n\nconst StyledIcon = styled(Icon)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  padding: 0 20px;\n  background: white;\n\n  & svg {\n    margin: 0;\n  }\n`\n\ntype Props = {\n  withArrow?: boolean\n}\n\nconst Divider = ({ withArrow }: Props): ReactElement => (\n  <Wrapper>\n    {withArrow && <StyledIcon type=\"arrowDown\" size=\"md\" />}\n    <StyledDivider />\n  </Wrapper>\n)\n\nexport default Divider\n","import { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Bold from 'src/components/layout/Bold'\nimport { border, xs } from 'src/theme/variables'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\n\nconst StyledBlock = styled(Block)`\n  font-size: 12px;\n  line-height: 1.08;\n  letter-spacing: -0.5px;\n  background-color: ${border};\n  width: fit-content;\n  padding: 5px 10px;\n  margin-top: ${xs};\n  margin-left: 40px;\n  border-radius: 3px;\n`\n\ntype SafeInfoProps = {\n  text?: string\n}\n\nconst SafeInfo = ({ text }: SafeInfoProps): React.ReactElement => {\n  const { address: safeAddress, ethBalance, name: safeName } = useSelector(currentSafeWithNames)\n  const nativeCurrency = getNativeCurrency()\n\n  return (\n    <>\n      {text && (\n        <Row margin=\"sm\">\n          <Paragraph color=\"black400\" noMargin size=\"lg\">\n            {text}\n          </Paragraph>\n        </Row>\n      )}\n      <PrefixedEthHashInfo\n        hash={safeAddress}\n        name={safeName}\n        strongName\n        explorerUrl={getExplorerInfo(safeAddress)}\n        showAvatar\n        showCopyBtn\n      />\n      {ethBalance && (\n        <StyledBlock>\n          <Paragraph noMargin>\n            Balance: <Bold data-testid=\"current-eth-balance\">{`${ethBalance} ${nativeCurrency.symbol}`}</Bold>\n          </Paragraph>\n        </StyledBlock>\n      )}\n    </>\n  )\n}\n\nexport default SafeInfo\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Block from 'src/components/layout/Block'\n\nconst AmountWrapper = styled.div`\n  width: 100%;\n  text-align: center;\n`\n\nconst StyledBlock = styled(Block)`\n  width: 40px;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & img {\n    width: 26px;\n    height: auto;\n  }\n`\n\nexport type TransferAmountProps = {\n  token: Token\n  text: string\n}\n\nexport const TransferAmount = ({ token, text }: TransferAmountProps): ReactElement => {\n  return (\n    <AmountWrapper>\n      <StyledBlock>\n        <img alt={token.name} onError={setImageToPlaceholder} src={token.logoUri || ''} />\n      </StyledBlock>\n      <Paragraph size=\"xl\" color=\"black600\" noMargin style={{ marginTop: '8px' }}>\n        {text}\n      </Paragraph>\n    </AmountWrapper>\n  )\n}\n"],"sourceRoot":""}