{"version":3,"sources":["../node_modules/@material-ui/icons/Search.js","routes/safe/components/CurrencyDropdown/img/check.svg","routes/safe/components/CurrencyDropdown/style.ts","utils/events/assets.ts","routes/safe/components/Balances/index.tsx","routes/safe/components/CurrencyDropdown/index.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","buttonWidth","useDropdownStyles","makeStyles","listItem","maxWidth","props","boxSizing","listItemSearch","padding","localFlag","backgroundPosition","backgroundRepeat","backgroundSize","height","width","etherFlag","iconLeft","marginRight","iconRight","marginLeft","button","backgroundColor","border","borderRadius","color","cursor","fontSize","fontWeight","lineHeight","minWidth","outline","textAlign","opacity","buttonInner","display","position","borderLeft","borderRight","borderTop","content","right","top","openMenuButton","borderBottom","dropdownItemsScrollWrapper","maxHeight","overflow","search","searchIcon","alignItems","justifyContent","left","margin","pointerEvents","transform","fill","inputRoot","inputInput","ASSETS","CURRENCY_MENU","event","GTM_EVENT","CLICK","action","CHANGE_CURRENCY","META","DIFFERING_TOKENS","NFT_AMOUNT","SEND","RECEIVE","ASSETS_EVENTS","addEventCategory","SECTION_NAME","CurrencyDropdown","testId","dispatch","useDispatch","nativeCurrency","getNativeCurrency","useState","anchorEl","setAnchorEl","selectedCurrency","useSelector","currentCurrencySelector","address","currentSafe","searchParams","setSearchParams","currenciesList","availableCurrenciesSelector","tokenImage","logoUri","classes","currenciesListFiltered","filter","currency","toLowerCase","includes","handleClose","trackEvent","label","onCurrentCurrencyChangedHandler","newCurrencySelectedName","a","fetchSafeTokens","setSelectedCurrency","theme","DropdownListTheme","Button","className","onClick","currentTarget","type","variant","classNames","Menu","anchorOrigin","horizontal","vertical","elevation","getContentAnchorEl","id","keepMounted","onClose","open","Boolean","transformOrigin","TransitionProps","mountOnEnter","unmountOnExit","MenuItem","InputBase","root","input","inputProps","onChange","target","placeholder","map","currencyName","ListItemIcon","sameString","symbol","Img","alt","toLocaleLowerCase","onError","setImageToPlaceholder","src","ListItemText","primary","CheckIcon","Collectibles","lazy","Coins","MANAGE_TOKENS_BUTTON_TEST_ID","BALANCE_ROW_TEST_ID","Balances","useSafeAddress","shortName","safeAddress","currentSafeWithNames","featuresEnabled","safeName","name","erc721Enabled","FEATURES","ERC721","showReceive","setShowReceive","sentToken","setSentToken","matchSafeWithBalancesSection","useRouteMatch","SAFE_SUBSECTION_ROUTE","currentSafeRoutes","generatePrefixedAddressRoutes","balancesSection","url","ASSETS_BALANCES","coins","ASSETS_BALANCES_COLLECTIBLES","collectibles","openReceive","closeReceive","Col","start","sm","xs","iconType","text","end","path","SAFE_ROUTES","exact","render","wrapInSuspense","showReceiveFunds","showSendFunds","SendModal","activeScreenType","isOpen","selectedToken","Modal","description","paperClassName","title","ReceiveModal"],"mappings":"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","file":"static/js/59.34a22f09.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;","export default __webpack_public_path__ + \"static/media/check.7da64643.svg\";","import { makeStyles } from '@material-ui/core/styles'\n\nconst buttonWidth = '140px'\nexport const useDropdownStyles = makeStyles({\n  listItem: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    boxSizing: 'border-box',\n  },\n  listItemSearch: {\n    maxWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    padding: '0',\n    boxSizing: 'border-box',\n  },\n  localFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    height: '20px !important',\n    width: '26px !important',\n  },\n  etherFlag: {\n    backgroundPosition: '50% 50%',\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'contain',\n    width: '26px',\n    height: '26px',\n  },\n  iconLeft: {\n    marginRight: '10px',\n  },\n  iconRight: {\n    marginLeft: '18px',\n  },\n  button: {\n    backgroundColor: '#e8e7e6',\n    border: 'none',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    color: '#5d6d74',\n    cursor: 'pointer',\n    fontSize: '12px',\n    fontWeight: 'normal',\n    height: '24px',\n    lineHeight: '1.33',\n    marginRight: '20px',\n    minWidth: (props: any) => (props.buttonWidth ? props.buttonWidth : buttonWidth),\n    outline: 'none',\n    padding: '0',\n    textAlign: 'left',\n    '&:active': {\n      opacity: '0.8',\n    },\n  },\n  buttonInner: {\n    boxSizing: 'border-box',\n    display: 'block',\n    height: '100%',\n    fontSize: '12px',\n    lineHeight: '24px',\n    padding: '0 22px 0 8px',\n    position: 'relative',\n    width: '100%',\n    '&::after': {\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: '5px solid #5d6d74',\n      content: '\"\"',\n      height: '0',\n      position: 'absolute',\n      right: '8px',\n      top: '9px',\n      width: '0',\n    },\n  },\n  openMenuButton: {\n    '&::after': {\n      borderBottom: '5px solid #5d6d74',\n      borderLeft: '5px solid transparent',\n      borderRight: '5px solid transparent',\n      borderTop: 'none',\n    },\n  },\n  dropdownItemsScrollWrapper: {\n    maxHeight: '280px',\n    overflow: 'auto',\n  },\n  search: {\n    position: 'relative',\n    borderRadius: '0',\n    backgroundColor: '#fff',\n    '&:hover': {\n      backgroundColor: '#fff',\n    },\n    marginRight: 0,\n    width: '100%',\n  },\n  searchIcon: {\n    alignItems: 'center',\n    display: 'flex',\n    height: '100%',\n    justifyContent: 'center',\n    left: '12px',\n    margin: '0',\n    pointerEvents: 'none',\n    position: 'absolute',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    width: '18px',\n    '& path': {\n      fill: '#b2b5b2',\n    },\n  },\n  inputRoot: {\n    color: '#5d6d74',\n    fontSize: '14px',\n    fontWeight: 'normal',\n    lineHeight: '1.43',\n    width: '100%',\n  },\n  inputInput: {\n    boxSizing: 'border-box',\n    height: '44px',\n    padding: '12px 12px 12px 40px',\n    width: '100%',\n  },\n})\n","import { GTM_EVENT } from 'src/utils/googleTagManager'\nimport { addEventCategory } from 'src/utils/events/utils'\n\nconst ASSETS = {\n  CURRENCY_MENU: {\n    event: GTM_EVENT.CLICK,\n    action: 'Currency menu',\n  },\n  CHANGE_CURRENCY: {\n    event: GTM_EVENT.META,\n    action: 'Change currency',\n  },\n  DIFFERING_TOKENS: {\n    event: GTM_EVENT.META,\n    action: 'Tokens',\n  },\n  NFT_AMOUNT: {\n    event: GTM_EVENT.META,\n    action: 'NFTs',\n  },\n  SEND: {\n    event: GTM_EVENT.CLICK,\n    action: 'Send',\n  },\n  RECEIVE: {\n    event: GTM_EVENT.CLICK,\n    action: 'Receive',\n  },\n}\n\nexport const ASSETS_CATEGORY = 'assets'\nexport const ASSETS_EVENTS = addEventCategory(ASSETS, ASSETS_CATEGORY)\n","import { Breadcrumb, BreadcrumbElement, Menu } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useState, lazy } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\n\nimport Col from 'src/components/layout/Col'\nimport Modal from 'src/components/Modal'\nimport ReceiveModal from 'src/components/App/ReceiveModal'\nimport SendModal from 'src/routes/safe/components/Balances/SendModal'\nimport { CurrencyDropdown } from 'src/routes/safe/components/CurrencyDropdown'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\nimport { generatePrefixedAddressRoutes, SAFE_ROUTES, SAFE_SUBSECTION_ROUTE } from 'src/routes/routes'\nimport { FEATURES } from '@gnosis.pm/safe-react-gateway-sdk'\nimport useSafeAddress from 'src/logic/currentSession/hooks/useSafeAddress'\n\nconst Collectibles = lazy(() => import('src/routes/safe/components/Balances/Collectibles'))\nconst Coins = lazy(() => import('src/routes/safe/components/Balances/Coins'))\n\nexport const MANAGE_TOKENS_BUTTON_TEST_ID = 'manage-tokens-btn'\nexport const BALANCE_ROW_TEST_ID = 'balance-row'\n\nenum SECTION_NAME {\n  coins = 'Coins',\n  collectibles = 'NFTs',\n}\n\nconst Balances = (): ReactElement => {\n  const { shortName, safeAddress } = useSafeAddress()\n  const { featuresEnabled, name: safeName } = useSelector(currentSafeWithNames)\n  const erc721Enabled = featuresEnabled?.includes(FEATURES.ERC721)\n  const [showReceive, setShowReceive] = useState<boolean>(false)\n  const [sentToken, setSentToken] = useState<string>('')\n\n  // Question mark makes matching [SAFE_SUBSECTION_SLUG] optional\n  const matchSafeWithBalancesSection = useRouteMatch(`${SAFE_SUBSECTION_ROUTE}?`)\n\n  const currentSafeRoutes = generatePrefixedAddressRoutes({\n    shortName,\n    safeAddress,\n  })\n\n  let balancesSection: SECTION_NAME | '' = ''\n  switch (matchSafeWithBalancesSection?.url) {\n    case currentSafeRoutes.ASSETS_BALANCES:\n      balancesSection = SECTION_NAME.coins\n      break\n    case currentSafeRoutes.ASSETS_BALANCES_COLLECTIBLES:\n      balancesSection = SECTION_NAME.collectibles\n      break\n  }\n\n  const openReceive = () => setShowReceive(true)\n  const closeReceive = () => setShowReceive(false)\n  const closeSendFunds = () => setSentToken('')\n\n  return (\n    <>\n      {/* Breadcrumbs & Currency Selector */}\n      <Menu>\n        <Col start=\"sm\" sm={6} xs={12}>\n          <Breadcrumb>\n            <BreadcrumbElement iconType=\"assets\" text=\"ASSETS\" color=\"primary\" />\n            <BreadcrumbElement text={balancesSection} color=\"placeHolder\" />\n          </Breadcrumb>\n        </Col>\n\n        <Col end=\"sm\" sm={6} xs={12}>\n          {balancesSection === SECTION_NAME.coins && <CurrencyDropdown testId={'balances-currency-dropdown'} />}\n        </Col>\n      </Menu>\n\n      {/* Coins & Collectibles sub-router */}\n      <Switch>\n        <Route\n          path={SAFE_ROUTES.ASSETS_BALANCES_COLLECTIBLES}\n          exact\n          render={() => (erc721Enabled ? wrapInSuspense(<Collectibles />) : null)}\n        />\n        <Route\n          path={SAFE_ROUTES.ASSETS_BALANCES}\n          exact\n          render={() => wrapInSuspense(<Coins showReceiveFunds={openReceive} showSendFunds={setSentToken} />)}\n        />\n      </Switch>\n\n      {/* Send Funds modal */}\n      <SendModal activeScreenType=\"sendFunds\" isOpen={!!sentToken} onClose={closeSendFunds} selectedToken={sentToken} />\n\n      {/* Receive Tokens modal */}\n      <Modal\n        description=\"Receive Tokens Form\"\n        handleClose={closeReceive}\n        open={showReceive}\n        paperClassName=\"receive-modal\"\n        title=\"Receive Tokens\"\n      >\n        <ReceiveModal safeAddress={safeAddress} safeName={safeName} onClose={closeReceive} />\n      </Modal>\n    </>\n  )\n}\n\nexport default Balances\n","import InputBase from '@material-ui/core/InputBase'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport SearchIcon from '@material-ui/icons/Search'\nimport classNames from 'classnames'\nimport { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CheckIcon from './img/check.svg'\n\nimport { setSelectedCurrency } from 'src/logic/currencyValues/store/actions/setSelectedCurrency'\nimport { useDropdownStyles } from 'src/routes/safe/components/CurrencyDropdown/style'\nimport { availableCurrenciesSelector, currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\nimport { DropdownListTheme } from 'src/theme/mui'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport Img from 'src/components/layout/Img/index'\nimport { getNativeCurrency } from 'src/config'\nimport { sameString } from 'src/utils/strings'\nimport { fetchSafeTokens } from 'src/logic/tokens/store/actions/fetchSafeTokens'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { Button } from '@material-ui/core'\nimport { ASSETS_EVENTS } from 'src/utils/events/assets'\n\nexport const CurrencyDropdown = ({ testId }: { testId: string }): React.ReactElement | null => {\n  const dispatch = useDispatch()\n  const nativeCurrency = getNativeCurrency()\n  const [anchorEl, setAnchorEl] = useState<HTMLElement | null>(null)\n  const selectedCurrency = useSelector(currentCurrencySelector)\n  const { address } = useSelector(currentSafe)\n  const [searchParams, setSearchParams] = useState('')\n  const currenciesList = useSelector(availableCurrenciesSelector)\n  const tokenImage = nativeCurrency.logoUri\n  const classes = useDropdownStyles({})\n  const currenciesListFiltered = currenciesList.filter((currency) =>\n    currency.toLowerCase().includes(searchParams.toLowerCase()),\n  )\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    trackEvent({\n      ...ASSETS_EVENTS.CURRENCY_MENU,\n      label: 'Open',\n    })\n\n    setAnchorEl(event.currentTarget)\n    import('currency-flags/dist/currency-flags.min.css' as string)\n  }\n\n  const handleClose = () => {\n    trackEvent({\n      ...ASSETS_EVENTS.CURRENCY_MENU,\n      label: 'Close',\n    })\n\n    setAnchorEl(null)\n  }\n\n  const onCurrentCurrencyChangedHandler = async (newCurrencySelectedName: string): Promise<void> => {\n    trackEvent({\n      ...ASSETS_EVENTS.CHANGE_CURRENCY,\n      label: newCurrencySelectedName,\n    })\n\n    handleClose()\n    dispatch(fetchSafeTokens(address, newCurrencySelectedName))\n    dispatch(setSelectedCurrency({ selectedCurrency: newCurrencySelectedName }))\n  }\n\n  if (!selectedCurrency) {\n    return null\n  }\n\n  return (\n    <MuiThemeProvider theme={DropdownListTheme}>\n      <>\n        <Button\n          className={classes.button}\n          onClick={handleClick}\n          type=\"button\"\n          variant=\"outlined\"\n          data-testid={`${testId}-btn`}\n        >\n          <span className={classNames(classes.buttonInner, anchorEl && classes.openMenuButton)}>\n            {selectedCurrency}\n          </span>\n        </Button>\n        <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            horizontal: 'center',\n            vertical: 'bottom',\n          }}\n          elevation={0}\n          getContentAnchorEl={null}\n          id=\"customizedMenu\"\n          keepMounted\n          onClose={handleClose}\n          open={Boolean(anchorEl)}\n          transformOrigin={{\n            horizontal: 'center',\n            vertical: 'top',\n          }}\n          TransitionProps={{ mountOnEnter: true, unmountOnExit: true }}\n        >\n          <MenuItem className={classes.listItemSearch} key=\"0\">\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={(event) => setSearchParams(event.target.value)}\n                placeholder=\"Search…\"\n                value={searchParams}\n              />\n            </div>\n          </MenuItem>\n          <div className={classes.dropdownItemsScrollWrapper}>\n            {currenciesListFiltered.map((currencyName) => (\n              <MenuItem\n                className={classes.listItem}\n                key={currencyName}\n                onClick={() => onCurrentCurrencyChangedHandler(currencyName)}\n                value={currencyName}\n              >\n                <ListItemIcon className={classes.iconLeft}>\n                  {sameString(currencyName, nativeCurrency.symbol) ? (\n                    <Img\n                      alt={nativeCurrency.symbol.toLocaleLowerCase()}\n                      onError={setImageToPlaceholder}\n                      src={tokenImage}\n                      className={classNames(classes.etherFlag)}\n                    />\n                  ) : (\n                    <div\n                      className={classNames(\n                        classes.localFlag,\n                        'currency-flag',\n                        'currency-flag-lg',\n                        `currency-flag-${currencyName.toLowerCase()}`,\n                      )}\n                    />\n                  )}\n                </ListItemIcon>\n                <ListItemText primary={currencyName} />\n                {currencyName === selectedCurrency ? (\n                  <ListItemIcon className={classes.iconRight}>\n                    <img alt=\"checked\" src={CheckIcon} />\n                  </ListItemIcon>\n                ) : null}\n              </MenuItem>\n            ))}\n          </div>\n        </Menu>\n      </>\n    </MuiThemeProvider>\n  )\n}\n"],"sourceRoot":""}