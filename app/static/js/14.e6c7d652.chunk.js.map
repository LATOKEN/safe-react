{"version":3,"sources":["assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/layout/Heading/index.tsx","components/NetworkLabel/NetworkLabel.tsx","components/layout/Heading/index.module.scss","utils/events/createLoadSafe.ts","components/forms/AddressInput/index.tsx","components/layout/Page/index.tsx","components/layout/Page/index.module.scss","components/Stepper/stepperContext.tsx","logic/tokens/api/fetchSafeCollectibles.ts","logic/collectibles/sources/Gnosis.ts","logic/collectibles/sources/index.ts","logic/collectibles/store/actions/fetchCollectibles.ts","logic/currentSession/store/actions/addViewedSafe.ts","logic/safe/store/actions/fetchSafe.ts","logic/tokens/store/actions/fetchSafeTokens.ts","logic/safe/api/fetchTokenCurrenciesBalances.ts","components/Stepper/Stepper.tsx","components/StepperForm/StepperForm.tsx","logic/hooks/useMnemonicName.ts","logic/hooks/useMnemonicName.dict.ts"],"names":["styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","cx","classNames","bind","Heading","props","children","tag","truncate","rest","capitalize","undefined","NetworkLabel","networkInfo","flexGrow","selectedNetwork","getChainInfo","StyledLabel","theme","chainName","styled","span","extraSmallFontSize","xs","border","textColor","fontColor","module","exports","CREATE_SAFE","CREATE_BUTTON","event","GTM_EVENT","CLICK","action","NAME_SAFE","META","OWNERS","THRESHOLD","SUBMIT_CREATE_SAFE","REJECT_CREATE_SAFE","RETRY_CREATE_SAFE","CANCEL_CREATE_SAFE","CREATED_SAFE","GET_STARTED","GO_TO_SAFE","CREATE_SAFE_CATEGORY","CREATE_SAFE_EVENTS","addEventCategory","LOAD_SAFE","LOAD_BUTTON","LOAD_SAFE_CATEGORY","LOAD_SAFE_EVENTS","AddressInput","text","placeholder","fieldMutator","inputAdornment","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","sanitizedValidators","useCallback","val","parsed","parsePrefixedAddress","composeValidators","address","allValidators","useMemo","required","mustBeEthereumAddress","onValueChange","rawVal","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","then","resolverAddr","formattedAddress","checksumAddress","catch","logError","Errors","_101","message","checkedAddress","adornment","endAdornment","position","component","TextField","label","spellCheck","validate","inputProps","Page","overflow","page","StepperContext","createContext","useStepper","context","useContext","Object","keys","length","Error","StepperProvider","onFinish","store","disableNextButton","stepsComponents","trackingCategory","currentStep","setCurrentStep","steps","Children","toArray","CurrentStepComponent","nextButtonType","nextButtonLabel","isSubmitButton","isFirstStep","isLastStep","customNextButtonLabel","state","onClickPreviousStep","history","goBack","step","onClickNextStep","Provider","fetchSafeCollectibles","safeAddress","a","getCollectibles","_getChainId","Gnosis","_getAssetsFromTokens","tokens","map","decimals","logoUri","tokenName","symbol","tokenSymbol","type","TokenType","ERC721","_fetch","collectibles","erc721Assets","erc721Tokens","_604","this","nftTokens","extractTokens","nftAssets","extractAssets","assets","extractedAssets","forEach","asset","extractNFTAsset","token","assetAddress","image","imageUri","NFTIcon","tokenId","id","mainAssetAddress","numberOfTokens","filter","sameAddress","slug","SOURCES","gnosis","fetchCollectibles","dispatch","setNftTokensLoaded","source","COLLECTIBLES_SOURCE","toLowerCase","addNftAssets","addNftTokens","log","addViewedSafe","updateViewedSafes","buildSafe","safeInfo","loadedViaUrl","local","getLocalSafe","getSafeInfo","remote","extractRemoteSafeInfo","remoteSafeInfo","localSafeInfo","owners","buildSafeOwners","fetchSafe","isInitialLoad","dispatchPromises","getState","chainId","currentChainId","currentSafeWithNames","collectiblesTag","txQueuedTag","txHistoryTag","shouldUpdateCollectibles","shouldUpdateTxHistory","shouldUpdateTxQueued","push","fetchSafeTokens","fetchTransactions","Promise","all","updateSafe","loaded","extractDataFromResult","acc","balance","fiatBalance","tokenInfo","balances","tokenAddress","tokenBalance","humanReadableValue","Number","ZERO_ADDRESS","ethBalance","makeToken","currency","currentSafe","selectedCurrency","currentCurrencySelector","fetchTokenCurrenciesBalances","tokenCurrenciesBalances","_601","items","reduce","totalFiatBalance","BigNumber","fiatTotal","toFixed","addTokens","excludeSpamTokens","trustedTokens","getBalances","exclude_spam","trusted","StepperComponent","Stepper","activeStep","orientation","index","isStepLabelClickable","currentComponent","backButtonLabel","backButton","nextButton","StepLabel","stepLabel","StepContent","Paper","root","elevation","controlStyle","center","Track","category","maxWidth","boxShadow","borderRadius","marginRight","fontWeight","boldFont","palette","secondary","main","StepElement","StepperForm","onSubmit","initialValues","setValidate","onSubmitForm","setOnSubmitForm","Boolean","list","ComponentStep","values","handleSubmit","submitting","StepFormElement","animals","trim","split","adjectives","getRandomItem","arr","Math","floor","random","useMnemonicName","noun","setName","adj","getRandomName","useMnemonicSafeName","networkName","getChainName"],"mappings":"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","file":"static/js/14.e6c7d652.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ChainInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getChainInfo } from 'src/config'\nimport { border, extraSmallFontSize, sm, xs, fontColor } from 'src/theme/variables'\n\ntype Props = {\n  networkInfo?: ChainInfo\n  onClick?: () => void\n  flexGrow?: boolean\n  ['data-testid']?: string\n}\n\nfunction NetworkLabel(props: Props): ReactElement {\n  const { networkInfo, onClick, flexGrow } = props\n  const selectedNetwork = networkInfo || getChainInfo()\n\n  return (\n    <StyledLabel onClick={onClick} flexGrow={flexGrow} {...selectedNetwork.theme} data-testid={props['data-testid']}>\n      {selectedNetwork.chainName}\n    </StyledLabel>\n  )\n}\n\nexport default NetworkLabel\n\ntype StyledLabelTypes = {\n  backgroundColor: string\n  textColor: string\n  onClick?: () => void\n  flexGrow?: boolean\n}\n\nconst StyledLabel = styled.span<StyledLabelTypes>`\n  position: relative;\n  bottom: 2px;\n  line-height: normal;\n  display: inline-block;\n  min-width: 70px;\n  font-size: ${extraSmallFontSize};\n  padding: ${xs} ${sm};\n  background-color: ${({ backgroundColor }) => backgroundColor ?? border};\n  color: ${({ textColor }) => textColor ?? fontColor};\n  cursor: ${({ onClick }) => (onClick ? 'pointer' : 'inherit')};\n  text-align: center;\n  border-radius: 4px;\n  text-transform: capitalize;\n  flex-grow: ${({ flexGrow }) => (flexGrow ? 1 : 'initial')};\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { GTM_EVENT } from 'src/utils/googleTagManager'\nimport { addEventCategory } from 'src/utils/events/utils'\n\n// Back/forward is automatically tracked in create/load stepper\n\nconst CREATE_SAFE = {\n  CREATE_BUTTON: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open stepper',\n  },\n  NAME_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Name Safe',\n  },\n  OWNERS: {\n    event: GTM_EVENT.META,\n    action: 'Owners',\n  },\n  THRESHOLD: {\n    event: GTM_EVENT.META,\n    action: 'Threshold',\n  },\n  SUBMIT_CREATE_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Submit Safe creation',\n  },\n  REJECT_CREATE_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Reject Safe creation',\n  },\n  RETRY_CREATE_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Retry Safe creation',\n  },\n  CANCEL_CREATE_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Cancel Safe creation',\n  },\n  CREATED_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Created Safe',\n  },\n  GET_STARTED: {\n    event: GTM_EVENT.CLICK,\n    action: 'Load Safe',\n  },\n  GO_TO_SAFE: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open Safe',\n  },\n}\n\nexport const CREATE_SAFE_CATEGORY = 'create-safe'\nexport const CREATE_SAFE_EVENTS = addEventCategory(CREATE_SAFE, CREATE_SAFE_CATEGORY)\n\nconst LOAD_SAFE = {\n  LOAD_BUTTON: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open stepper',\n  },\n  NAME_SAFE: {\n    event: GTM_EVENT.META,\n    action: 'Name Safe',\n  },\n  OWNERS: {\n    event: GTM_EVENT.META,\n    action: 'Owners',\n  },\n  THRESHOLD: {\n    event: GTM_EVENT.META,\n    action: 'Threshold',\n  },\n  GO_TO_SAFE: {\n    event: GTM_EVENT.CLICK,\n    action: 'Open Safe',\n  },\n}\n\nexport const LOAD_SAFE_CATEGORY = 'load-safe'\nexport const LOAD_SAFE_EVENTS = addEventCategory(LOAD_SAFE, LOAD_SAFE_CATEGORY)\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { parsePrefixedAddress } from 'src/utils/prefixedAddress'\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => {\n  const [currentInput, setCurrentInput] = useState<string>('')\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\n  const resolvedAddress = resolutions[currentInput]\n  const isResolving = resolvedAddress === ''\n\n  // External validators must receive an unprefixed address\n  const sanitizedValidators = useCallback(\n    (val: string) => {\n      const parsed = parsePrefixedAddress(val)\n      return composeValidators(...validators)(parsed.address)\n    },\n    [validators],\n  )\n\n  // Internal validators + externally passed validators\n  const allValidators = useMemo(\n    () => composeValidators(required, mustBeEthereumAddress, sanitizedValidators),\n    [sanitizedValidators],\n  )\n\n  const onValueChange = useCallback(\n    (rawVal: string) => {\n      const address = trimSpaces(rawVal)\n\n      setCurrentInput(rawVal)\n\n      // A crypto domain name\n      if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n        setResolutions((prev) => ({ ...prev, [rawVal]: '' }))\n        getAddressFromDomain(address)\n          .then((resolverAddr) => {\n            const formattedAddress = checksumAddress(resolverAddr)\n            setResolutions((prev) => ({ ...prev, [rawVal]: formattedAddress }))\n          })\n          .catch((err) => {\n            setResolutions((prev) => ({ ...prev, [rawVal]: undefined }))\n            logError(Errors._101, err.message)\n          })\n      } else {\n        // A regular address hash\n        if (!mustBeEthereumAddress(address)) {\n          const parsed = parsePrefixedAddress(address)\n          const checkedAddress = checksumAddress(parsed.address) || parsed.address\n\n          // Field mutator (parent component) always gets an unprefixed address\n          fieldMutator(checkedAddress)\n        }\n      }\n    },\n    [setCurrentInput, setResolutions, fieldMutator],\n  )\n\n  useEffect(() => {\n    if (resolvedAddress) {\n      onValueChange(resolvedAddress)\n    }\n  }, [resolvedAddress, onValueChange])\n\n  const adornment = isResolving\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CircularProgress size=\"16px\" />\n          </InputAdornment>\n        ),\n      }\n    : inputAdornment\n\n  return (\n    <>\n      <Field\n        className={className}\n        component={TextField as any}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        inputAdornment={adornment}\n        name={name}\n        placeholder={placeholder}\n        label={text}\n        spellCheck={false}\n        validate={allValidators}\n        inputProps={{\n          'data-testid': testId,\n        }}\n      />\n\n      <OnChange name={name}>{onValueChange}</OnChange>\n    </>\n  )\n}\n\nexport default AddressInput\n","import classNames from 'classnames/bind'\n\nimport styles from './index.module.scss'\n\nconst cx = classNames.bind(styles)\n\nconst Page = ({ align, children, overflow }: any) => (\n  <main className={cx(styles.page, align, { overflow })}>{children}</main>\n)\n\nexport default Page\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Page_page__G6hb0\",\"center\":\"Page_center__1dwJ9\",\"overflow\":\"Page_overflow__30EmX\"};","import { useContext, ReactElement, useState, Children, createContext } from 'react'\nimport { history } from 'src/routes/routes'\n\nconst StepperContext = createContext<StepperProviderTypes>({} as StepperProviderTypes)\n\nfunction useStepper(): any {\n  const context = useContext(StepperContext)\n\n  const hasContextDefined = Object.keys(context).length > 0\n\n  if (!hasContextDefined) {\n    throw new Error('useStepper must be used within a StepperProvider!')\n  }\n\n  return context\n}\n\ntype StepperProviderTypes = {\n  onFinish?: () => void\n  store?: any\n  disableNextButton?: boolean\n  stepsComponents: ReactElement[]\n  children: ReactElement\n  testId?: string\n  trackingCategory?: string\n}\n\nfunction StepperProvider({\n  onFinish,\n  store,\n  disableNextButton,\n  stepsComponents,\n  children,\n  testId,\n  trackingCategory,\n}: StepperProviderTypes): ReactElement {\n  const [currentStep, setCurrentStep] = useState(0)\n\n  const steps = Children.toArray(stepsComponents)\n  const CurrentStepComponent: any = steps[currentStep]\n\n  const nextButtonType = CurrentStepComponent.props.nextButtonType\n  const nextButtonLabel = CurrentStepComponent.props.nextButtonLabel\n\n  const isSubmitButton = nextButtonType === 'submit'\n  const isFirstStep = currentStep === 0\n  const isLastStep = currentStep > steps.length - 2\n  const customNextButtonLabel = nextButtonLabel\n\n  const onClickPreviousStep = () => {\n    if (isFirstStep) {\n      history.goBack()\n    } else {\n      setCurrentStep((step) => step - 1)\n    }\n  }\n\n  const onClickNextStep = () => {\n    if (isSubmitButton) {\n      return\n    }\n\n    if (isLastStep) {\n      onFinish?.()\n      return\n    }\n\n    setCurrentStep((step) => step + 1)\n  }\n\n  const state: StepperProviderTypes = {\n    currentStep,\n    setCurrentStep,\n    steps,\n\n    CurrentStepComponent,\n\n    isFirstStep,\n    isLastStep,\n\n    onClickPreviousStep,\n    onClickNextStep,\n\n    disableNextButton,\n    nextButtonType,\n    customNextButtonLabel,\n\n    testId,\n    trackingCategory,\n\n    ...store,\n  }\n\n  return <StepperContext.Provider value={state}>{children}</StepperContext.Provider>\n}\n\nexport { useStepper, StepperProvider }\n","import { getCollectibles, SafeCollectibleResponse } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { _getChainId } from 'src/config'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\nexport const fetchSafeCollectibles = async (safeAddress: string): Promise<SafeCollectibleResponse[]> => {\n  return getCollectibles(_getChainId(), checksumAddress(safeAddress))\n}\n","import { SafeCollectibleResponse, TokenType } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { Collectibles, NFTAsset, NFTAssets, NFTTokens } from 'src/logic/collectibles/sources/collectibles.d'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport NFTIcon from 'src/routes/safe/components/Balances/assets/nft_icon.png'\nimport { fetchSafeCollectibles } from 'src/logic/tokens/api/fetchSafeCollectibles'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\n\ntype TokenResult = {\n  address: string\n  decimals?: number\n  logoUri: string\n  name: string\n  symbol: string\n  type: TokenType\n}\n\ntype FetchResult = {\n  erc721Assets: TokenResult[]\n  erc721Tokens: SafeCollectibleResponse[]\n}\nclass Gnosis {\n  _getAssetsFromTokens = (tokens: SafeCollectibleResponse[]): TokenResult[] => {\n    const assets: TokenResult[] = tokens.map(({ address, logoUri, tokenName, tokenSymbol }) => ({\n      address,\n      decimals: undefined,\n      logoUri,\n      name: tokenName,\n      symbol: tokenSymbol,\n      type: TokenType.ERC721,\n    }))\n\n    return assets\n  }\n\n  _fetch = async (safeAddress: string): Promise<FetchResult> => {\n    const collectibles: FetchResult = {\n      erc721Assets: [],\n      erc721Tokens: [],\n    }\n\n    try {\n      const tokens = await fetchSafeCollectibles(safeAddress)\n      collectibles.erc721Assets = this._getAssetsFromTokens(tokens)\n      collectibles.erc721Tokens = tokens || []\n    } catch (error) {\n      logError(Errors._604, error.message)\n    }\n\n    return collectibles\n  }\n\n  static extractNFTAsset = (asset: TokenResult, nftTokens: NFTTokens): NFTAsset => {\n    const mainAssetAddress = asset.address\n    const numberOfTokens = nftTokens.filter(({ assetAddress }) => sameAddress(assetAddress, mainAssetAddress)).length\n\n    return {\n      address: mainAssetAddress,\n      description: asset.name,\n      image: asset.logoUri || NFTIcon,\n      name: asset.name,\n      numberOfTokens,\n      slug: `${mainAssetAddress}_${asset.name}`,\n      symbol: asset.symbol,\n    }\n  }\n\n  static extractAssets(assets: TokenResult[], nftTokens: NFTTokens): NFTAssets {\n    const extractedAssets = {}\n\n    assets.forEach((asset) => {\n      const address = asset.address\n\n      if (extractedAssets[address] === undefined) {\n        extractedAssets[address] = Gnosis.extractNFTAsset(asset, nftTokens)\n      }\n    })\n\n    return extractedAssets\n  }\n\n  static extractTokens(tokens: SafeCollectibleResponse[]): NFTTokens {\n    const items = tokens.map((token) => ({\n      assetAddress: token.address,\n      color: 'red',\n      description: token.description || '',\n      image: token.imageUri || NFTIcon,\n      name: token.name || '',\n      tokenId: token.id,\n    }))\n    return items\n  }\n\n  /**\n   * Fetches from OpenSea the list of collectibles, grouped by category,\n   * for the provided Safe Address in the specified Network\n   * @param {string} safeAddress\n   * @returns {Promise<Collectibles>}\n   */\n  async fetchCollectibles(safeAddress: string): Promise<Collectibles> {\n    const { erc721Assets, erc721Tokens } = await this._fetch(safeAddress)\n\n    const nftTokens = Gnosis.extractTokens(erc721Tokens)\n    const nftAssets = Gnosis.extractAssets(erc721Assets, nftTokens)\n\n    return { nftTokens, nftAssets }\n  }\n}\n\nexport default Gnosis\n","import Gnosis from 'src/logic/collectibles/sources/Gnosis'\nimport { COLLECTIBLES_SOURCE } from 'src/utils/constants'\n\nconst SOURCES = {\n  gnosis: new Gnosis(),\n}\n\ntype Sources = typeof SOURCES\n\nexport const getConfiguredSource = (): Sources['gnosis'] => SOURCES[COLLECTIBLES_SOURCE.toLowerCase()]\n","import { Dispatch } from 'redux'\n\nimport { getConfiguredSource } from 'src/logic/collectibles/sources'\nimport { addNftAssets, addNftTokens, setNftTokensLoaded } from 'src/logic/collectibles/store/actions/addCollectibles'\n\nexport const fetchCollectibles =\n  (safeAddress: string) =>\n  async (dispatch: Dispatch): Promise<void> => {\n    dispatch(setNftTokensLoaded(false))\n    try {\n      const source = getConfiguredSource()\n      const collectibles = await source.fetchCollectibles(safeAddress)\n\n      dispatch(addNftAssets(collectibles.nftAssets))\n      dispatch(addNftTokens(collectibles.nftTokens))\n      dispatch(setNftTokensLoaded(true))\n    } catch (error) {\n      dispatch(setNftTokensLoaded(false))\n      console.log('Error fetching collectibles:', error)\n    }\n  }\n","import { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nimport updateViewedSafes from 'src/logic/currentSession/store/actions/updateViewedSafes'\n\nconst addViewedSafe =\n  (safeAddress: string) =>\n  (dispatch: Dispatch): void => {\n    dispatch(updateViewedSafes(safeAddress))\n  }\n\nexport default addViewedSafe\n","import { Dispatch } from 'redux'\nimport { Action } from 'redux-actions'\n\nimport { updateSafe } from 'src/logic/safe/store/actions/updateSafe'\nimport { SafeRecordProps } from 'src/logic/safe/store/models/safe'\nimport { getLocalSafe } from 'src/logic/safe/utils'\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\nimport { SafeInfo } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { buildSafeOwners, extractRemoteSafeInfo } from './utils'\nimport { AppReduxState, store } from 'src/store'\nimport { currentSafeWithNames } from '../selectors'\nimport fetchTransactions from './transactions/fetchTransactions'\nimport { fetchCollectibles } from 'src/logic/collectibles/store/actions/fetchCollectibles'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport addViewedSafe from 'src/logic/currentSession/store/actions/addViewedSafe'\nimport { fetchSafeTokens } from 'src/logic/tokens/store/actions/fetchSafeTokens'\n\n/**\n * Builds a Safe Record that will be added to the app's store\n * It recovers, and merges information from client-gateway and localStore\n *\n * @note It's being used by \"Load Existing Safe\" and \"Create New Safe\" flows\n *\n * @param {string} safeAddress\n * @returns Promise<SafeRecordProps>\n */\nexport const buildSafe = async (safeAddress: string): Promise<SafeRecordProps> => {\n  const address = checksumAddress(safeAddress)\n  // setting `loadedViaUrl` to false, as `buildSafe` is called on safe Load or Open flows\n  const safeInfo: Partial<SafeRecordProps> = { address, loadedViaUrl: false }\n\n  const local = getLocalSafe(safeAddress)\n  const remote = await getSafeInfo(safeAddress).catch((err) => {\n    err.log()\n    return null\n  })\n\n  // remote (client-gateway)\n  const remoteSafeInfo = remote ? await extractRemoteSafeInfo(remote) : {}\n  // local\n  const localSafeInfo = local || ({} as Partial<SafeRecordProps>)\n\n  // update owner's information\n  const owners = buildSafeOwners(remote?.owners, localSafeInfo.owners)\n\n  return { ...localSafeInfo, ...safeInfo, ...remoteSafeInfo, owners } as SafeRecordProps\n}\n\n/**\n * Updates the app's store with Safe Record built from data provided by client-gateway\n *\n * @note It's being used by the app when it loads for the first time and for the Safe's data polling\n *\n * @param {string} safeAddress\n * @param {boolean} isInitialLoad\n */\nexport const fetchSafe =\n  (safeAddress: string, isInitialLoad = false) =>\n  async (dispatch: Dispatch<any>): Promise<Action<Partial<SafeRecordProps>> | void> => {\n    const dispatchPromises: ((dispatch: Dispatch, getState: () => AppReduxState) => Promise<void> | void)[] = []\n\n    const address = checksumAddress(safeAddress)\n\n    let safeInfo: Partial<SafeRecordProps> = {}\n    let remoteSafeInfo: SafeInfo | null = null\n\n    try {\n      remoteSafeInfo = await getSafeInfo(address)\n    } catch (err) {\n      err.log()\n    }\n\n    const state = store.getState()\n    const chainId = currentChainId(state)\n\n    // remote (client-gateway)\n    if (remoteSafeInfo) {\n      // If the network has changed while the safe was being loaded,\n      // ignore the result\n      if (remoteSafeInfo.chainId !== chainId) {\n        return\n      }\n\n      safeInfo = await extractRemoteSafeInfo(remoteSafeInfo)\n\n      // If these polling timestamps have changed, fetch again\n      const { collectiblesTag, txQueuedTag, txHistoryTag } = currentSafeWithNames(state)\n\n      const shouldUpdateCollectibles = collectiblesTag !== safeInfo.collectiblesTag\n      const shouldUpdateTxHistory = txHistoryTag !== safeInfo.txHistoryTag\n      const shouldUpdateTxQueued = txQueuedTag !== safeInfo.txQueuedTag\n\n      dispatchPromises.push(dispatch(fetchSafeTokens(address)))\n\n      if (shouldUpdateCollectibles || isInitialLoad) {\n        dispatch(fetchCollectibles(address))\n      }\n\n      if (shouldUpdateTxHistory || shouldUpdateTxQueued || isInitialLoad) {\n        dispatchPromises.push(dispatch(fetchTransactions(chainId, address)))\n      }\n\n      if (isInitialLoad) {\n        dispatchPromises.push(dispatch(addViewedSafe(address)))\n      }\n    }\n\n    const owners = buildSafeOwners(remoteSafeInfo?.owners || [])\n\n    await Promise.all(dispatchPromises)\n\n    return dispatch(updateSafe({ address, ...safeInfo, owners, loaded: true }))\n  }\n","import BigNumber from 'bignumber.js'\nimport { Dispatch } from 'redux'\n\nimport { fetchTokenCurrenciesBalances, TokenBalance } from 'src/logic/safe/api/fetchTokenCurrenciesBalances'\nimport { addTokens } from 'src/logic/tokens/store/actions/addTokens'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { updateSafe } from 'src/logic/safe/store/actions/updateSafe'\nimport { AppReduxState } from 'src/store'\nimport { humanReadableValue } from 'src/logic/tokens/utils/humanReadableValue'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { currentCurrencySelector } from 'src/logic/currencyValues/store/selectors'\nimport { ZERO_ADDRESS, sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { SafeBalanceResponse } from '@gnosis.pm/safe-react-gateway-sdk'\n\nexport type BalanceRecord = {\n  tokenAddress?: string\n  tokenBalance: string\n  fiatBalance?: string\n}\n\ninterface ExtractedData {\n  balances: Array<BalanceRecord>\n  ethBalance: string\n  tokens: Array<Token>\n}\n\nconst extractDataFromResult = (\n  acc: ExtractedData,\n  { balance, fiatBalance, tokenInfo }: TokenBalance,\n): ExtractedData => {\n  const { address, decimals } = tokenInfo\n\n  acc.balances.push({\n    tokenAddress: address,\n    fiatBalance,\n    tokenBalance: humanReadableValue(balance, Number(decimals)),\n  })\n\n  // Extract network token balance from backend balances\n  if (sameAddress(address, ZERO_ADDRESS)) {\n    acc.ethBalance = humanReadableValue(balance, Number(decimals))\n  } else {\n    acc.tokens.push(makeToken({ ...tokenInfo }))\n  }\n\n  return acc\n}\n\nexport const fetchSafeTokens =\n  (safeAddress: string, currency?: string) =>\n  async (dispatch: Dispatch, getState: () => AppReduxState): Promise<void> => {\n    const state = getState()\n    const safe = currentSafe(state)\n\n    if (!safe) {\n      return\n    }\n    const selectedCurrency = currency ?? currentCurrencySelector(state)\n\n    let tokenCurrenciesBalances: SafeBalanceResponse\n    try {\n      tokenCurrenciesBalances = await fetchTokenCurrenciesBalances({\n        safeAddress,\n        selectedCurrency,\n      })\n    } catch (e) {\n      logError(Errors._601, e.message)\n      return\n    }\n\n    const { balances, ethBalance, tokens } = tokenCurrenciesBalances.items.reduce<ExtractedData>(\n      extractDataFromResult,\n      {\n        balances: [],\n        ethBalance: '0',\n        tokens: [],\n      },\n    )\n\n    dispatch(\n      updateSafe({\n        address: safeAddress,\n        balances,\n        ethBalance,\n        totalFiatBalance: new BigNumber(tokenCurrenciesBalances.fiatTotal).toFixed(2),\n      }),\n    )\n    dispatch(addTokens(tokens))\n  }\n","import { getBalances, SafeBalanceResponse, TokenInfo } from '@gnosis.pm/safe-react-gateway-sdk'\nimport { _getChainId } from 'src/config'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\nexport type TokenBalance = {\n  tokenInfo: TokenInfo\n  balance: string\n  fiatBalance: string\n  fiatConversion: string\n}\n\ntype FetchTokenCurrenciesBalancesProps = {\n  safeAddress: string\n  selectedCurrency: string\n  excludeSpamTokens?: boolean\n  trustedTokens?: boolean\n}\n\nexport const fetchTokenCurrenciesBalances = async ({\n  safeAddress,\n  selectedCurrency,\n  excludeSpamTokens = true,\n  trustedTokens = false,\n}: FetchTokenCurrenciesBalancesProps): Promise<SafeBalanceResponse> => {\n  const address = checksumAddress(safeAddress)\n  return getBalances(_getChainId(), address, selectedCurrency, {\n    exclude_spam: excludeSpamTokens,\n    trusted: trustedTokens,\n  })\n}\n","import { ReactElement } from 'react'\nimport StepperMUI from '@material-ui/core/Stepper'\nimport StepMUI from '@material-ui/core/Step'\nimport StepContent from '@material-ui/core/StepContent'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/'\n\nimport Hairline from 'src/components/layout/Hairline'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { boldFont, lg, sm } from 'src/theme/variables'\nimport { StepperProvider, useStepper } from './stepperContext'\nimport Track from 'src/components/Track'\n\ntype StepperProps = {\n  children: ReactElement[]\n  onFinish?: () => void\n  disableNextButton?: boolean\n  nextButtonType?: string\n  testId?: string\n  trackingCategory?: string\n}\n\nfunction StepperComponent(): ReactElement {\n  const {\n    currentStep,\n    setCurrentStep,\n    steps,\n\n    onClickPreviousStep,\n    onClickNextStep,\n\n    disableNextButton,\n    nextButtonType,\n\n    testId,\n    trackingCategory,\n  } = useStepper()\n\n  return (\n    <StepperMUI data-testid={testId} activeStep={currentStep} orientation=\"vertical\">\n      {steps.map(function Step(step, index) {\n        const isFirstStep = index === 0\n        const isStepLabelClickable = currentStep > index\n        const classes = useStyles({ isStepLabelClickable })\n\n        function onClickLabel() {\n          if (isStepLabelClickable) {\n            setCurrentStep(index)\n          }\n        }\n\n        const currentComponent = steps[index]\n\n        const backButtonLabel = isFirstStep ? 'Cancel' : 'Back'\n        const customNextButtonLabel = currentComponent.props.nextButtonLabel\n\n        const nextButtonLabel = customNextButtonLabel || 'Next'\n\n        const backButton = (\n          <Button onClick={onClickPreviousStep} size=\"small\" className={classes.backButton} type=\"button\">\n            {backButtonLabel}\n          </Button>\n        )\n\n        const nextButton = (\n          <Button\n            onClick={onClickNextStep}\n            color=\"primary\"\n            type={nextButtonType || 'button'}\n            disabled={disableNextButton || step.props.disableNextButton}\n            size=\"small\"\n            className={classes.nextButton}\n            variant=\"contained\"\n          >\n            {nextButtonLabel}\n          </Button>\n        )\n\n        return (\n          <StepMUI key={step.props.label}>\n            <StepLabel onClick={onClickLabel} className={classes.stepLabel}>\n              {step.props.label}\n            </StepLabel>\n            <StepContent>\n              <Paper className={classes.root} elevation={1}>\n                {currentComponent}\n                <Hairline />\n                <Row align=\"center\" grow className={classes.controlStyle}>\n                  <Col center=\"xs\" xs={12}>\n                    {trackingCategory ? (\n                      <>\n                        <Track category={trackingCategory} action={backButtonLabel} label={currentStep}>\n                          {backButton}\n                        </Track>\n                        <Track category={trackingCategory} action={nextButtonLabel} label={currentStep}>\n                          {nextButton}\n                        </Track>\n                      </>\n                    ) : (\n                      <>\n                        {backButton}\n                        {nextButton}\n                      </>\n                    )}\n                  </Col>\n                </Row>\n              </Paper>\n            </StepContent>\n          </StepMUI>\n        )\n      })}\n    </StepperMUI>\n  )\n}\n\nexport default function Stepper(props: StepperProps): ReactElement {\n  return (\n    <StepperProvider stepsComponents={props.children} {...props}>\n      <StepperComponent />\n    </StepperProvider>\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: '10px 0 10px 10px',\n    maxWidth: '800px',\n    boxShadow: '0 0 10px 0 rgba(33,48,77,0.10)',\n  },\n  controlStyle: {\n    backgroundColor: 'white',\n    padding: lg,\n    borderRadius: sm,\n  },\n  backButton: {\n    marginRight: sm,\n    fontWeight: boldFont,\n    color: theme.palette.secondary.main,\n  },\n  nextButton: {\n    fontWeight: boldFont,\n  },\n  stepLabel: {\n    cursor: ({ isStepLabelClickable }: any) => (isStepLabelClickable ? 'pointer' : 'inherit'),\n  },\n}))\n\nexport type StepElementProps = {\n  label: string\n  children: JSX.Element\n  nextButtonLabel?: string\n  nextButtonType?: string\n  disableNextButton?: boolean\n}\n\nexport type StepElementType = (props: StepElementProps) => ReactElement\n\nexport function StepElement({ children }: StepElementProps): ReactElement {\n  return children\n}\n","import React, { JSXElementConstructor, ReactElement, useMemo, useState } from 'react'\nimport { useEffect } from 'react'\nimport { Form } from 'react-final-form'\nimport { Validator } from '../forms/validator'\nimport Stepper, { StepElement, StepElementType } from '../Stepper/Stepper'\nimport { useStepper } from '../Stepper/stepperContext'\n\ntype StepperFormProps = {\n  testId: string\n  onSubmit: (values) => void\n  initialValues?: any\n  children: (JSX.Element | false | null)[]\n  trackingCategory?: string\n}\n\nfunction StepperForm({ children, onSubmit, testId, initialValues, trackingCategory }: StepperFormProps): ReactElement {\n  const [validate, setValidate] = useState<(values) => Validator>()\n  const [onSubmitForm, setOnSubmitForm] = useState<(values) => void>()\n  const steps = useMemo(\n    () =>\n      React.Children.toArray(children)\n        .filter(Boolean)\n        .map((step: ReactElement, index, list) => {\n          function ComponentStep() {\n            const { setCurrentStep } = useStepper()\n            useEffect(() => {\n              const isLastStep = index === list.length - 1\n              setValidate(() => step.props.validate)\n              if (isLastStep) {\n                setOnSubmitForm(() => (values) => onSubmit(values))\n              } else {\n                setOnSubmitForm(() => () => {\n                  setCurrentStep((step) => step + 1)\n                })\n              }\n            }, [setCurrentStep])\n            return step.props.children\n          }\n\n          return (\n            <StepElement key={step.props.label} nextButtonType={'submit'} {...step.props}>\n              <ComponentStep />\n            </StepElement>\n          )\n        }),\n    [children, onSubmit],\n  )\n  return (\n    <Form\n      onSubmit={(values) => onSubmitForm?.(values)}\n      initialValues={initialValues}\n      validate={(values) => validate?.(values)}\n    >\n      {({ handleSubmit, submitting }) => (\n        <form data-testid={testId} onSubmit={handleSubmit}>\n          <Stepper disableNextButton={submitting} nextButtonType={'submit'} trackingCategory={trackingCategory}>\n            {steps}\n          </Stepper>\n        </form>\n      )}\n    </Form>\n  )\n}\n\nexport default StepperForm\n\nexport type StepFormElementProps = {\n  label: string\n  validate?: (values) => Record<string, unknown> | Promise<Record<string, string>>\n  nextButtonLabel?: string\n  children: ReactElement<any, string | JSXElementConstructor<any>>\n  disableNextButton?: boolean\n}\nexport type StepFormElementType = (props: StepFormElementProps) => StepElementType[]\n\nexport function StepFormElement({ children }: StepFormElementProps): ReactElement {\n  return children\n}\n","import { useEffect, useState } from 'react'\n\nimport { getChainName } from 'src/config'\nimport { animalsDict, adjectivesDict } from './useMnemonicName.dict'\n\nconst animals: string[] = animalsDict.trim().split(/\\s+/)\nconst adjectives: string[] = adjectivesDict.trim().split(/\\s+/)\n\nconst getRandomItem = <T>(arr: T[]): T => {\n  return arr[Math.floor(arr.length * Math.random())]\n}\n\nexport const getRandomName = (noun = getRandomItem<string>(animals)): string => {\n  const adj = getRandomItem<string>(adjectives)\n  return `${adj}-${noun}`\n}\n\nexport const useMnemonicName = (noun?: string): string => {\n  const [name, setName] = useState<string>('')\n\n  useEffect(() => {\n    setName(getRandomName(noun))\n  }, [noun])\n\n  return name\n}\n\nexport const useMnemonicSafeName = (): string => {\n  const networkName = getChainName().toLowerCase()\n  return useMnemonicName(`${networkName}-safe`)\n}\n","/**\n * The word lists are from https://github.com/mmkal/ts/tree/main/packages/memorable-moniker/src/dict\n */\nexport const animalsDict = `\naardvark\nalbatross\nalligator\nalpaca\nant\nanteater\nantelope\nape\narmadillo\nbaboon\nbadger\nbarracuda\nbat\nbear\nbeaver\nbee\nbinturong\nbird\nbison\nbluebird\nboar\nbobcat\nbuffalo\nbutterfly\ncamel\ncapybara\ncaracal\ncaribou\ncassowary\ncat\ncaterpillar\ncattle\nchameleon\nchamois\ncheetah\nchicken\nchimpanzee\nchinchilla\nchough\ncoati\ncobra\ncockroach\ncod\ncormorant\ncougar\ncoyote\ncrab\ncrane\ncricket\ncrocodile\ncrow\ncuckoo\ncurlew\ndeer\ndegu\ndhole\ndingo\ndinosaur\ndog\ndogfish\ndolphin\ndonkey\ndotterel\ndove\ndragonfly\nduck\ndugong\ndunlin\neagle\nechidna\neel\neland\nelephant\nelk\nemu\nfalcon\nferret\nfinch\nfish\nflamingo\nfly\nfox\nfrog\ngaur\ngazelle\ngecko\ngerbil\ngiraffe\ngnat\ngnu\ngoat\ngoldfinch\ngoosander\ngoose\ngorilla\ngoshawk\ngrasshopper\ngrouse\nguanaco\nguinea-pig\ngull\nhamster\nhare\nhawk\nhedgehog\nheron\nherring\nhippopotamus\nhoatzin\nhoopoe\nhornet\nhorse\nhuman\nhummingbird\nhyena\nibex\nibis\niguana\nimpala\njackal\njaguar\njay\njellyfish\njerboa\nkangaroo\nkingfisher\nkinkajou\nkoala\nkomodo-dragon\nkookaburra\nkouprey\nkudu\nlapwing\nlark\nlemur\nleopard\nlion\nlizard\nllama\nlobster\nlocust\nloris\nlouse\nlynx\nlyrebird\nmacaque\nmacaw\nmagpie\nmallard\nmammoth\nmanatee\nmandrill\nmarmoset\nmarmot\nmeerkat\nmink\nmole\nmongoose\nmonkey\nmoose\nmosquito\nmouse\nmyna\nnarwhal\nnewt\nnightingale\noctopus\nokapi\nopossum\norangutan\noryx\nostrich\notter\nowl\noyster\npanther\nparrot\npanda\npartridge\npeafowl\npelican\npenguin\npheasant\npig\npigeon\npika\npolar-bear\npony\nporcupine\nporpoise\npug\nquail\nquelea\nquetzal\nrabbit\nraccoon\nram\nrat\nraven\nred-deer\nred-panda\nreindeer\nrhea\nrhinoceros\nrook\nsalamander\nsalmon\nsand-dollar\nsandpiper\nsardine\nsea-lion\nseahorse\nseal\nshark\nsheep\nshrew\nsiamang\nskunk\nsloth\nsnail\nsnake\nspider\nsquid\nsquirrel\nstarling\nstegosaurus\nswan\ntamarin\ntapir\ntarsier\ntermite\ntiger\ntoad\ntoucan\nturaco\nturkey\nturtle\numbrellabird\nvinegaroon\nviper\nvulture\nwallaby\nwalrus\nwasp\nwaxwing\nweasel\nwhale\nwobbegong\nwolf\nwolverine\nwombat\nwoodpecker\nworm\nwren\nyak\nzebra\n`\n\nexport const adjectivesDict = `\nadmirable\nenergetic\nlucky\naffable\nenjoyable\nmagnificent\naffectionate\nenthusiastic\nmarvelous\nagreeable\neuphoric\nmeritorious\namazing\nexcellent\nmerry\namiable\nexceptional\nmild-mannered\namused\nexcited\nnice\namusing\nextraordinary\nnoble\nanimated\nexultant\noutstanding\nappreciative\nfabulous\noverjoyed\nastonishing\nfaithful\npassionate\nauthentic\nfantastic\npeaceful\nbelievable\nfervent\nplacid\nbenevolent\nfortunate\npleasant\nblissful\nfriendly\npleasing\nbouncy\nfun\npleasurable\nbrilliant\ngenuine\npositive\nbubbly\nglad\npraiseworthy\nbuoyant\nglorious\nprominent\ncalm\ngood\nproud\ncharming\ngood-humored\nrelaxed\ncheerful\ngood-natured\nreliable\ncheery\ngracious\nrespectable\nclever\ngrateful\nsharp\ncomfortable\ngreat\nsincere\ncomical\nhappy\nspirited\ncommendable\nheartfelt\nsplendid\nconfident\nhonest\nsuperb\ncongenial\nhonorable\nsuperior\ncontent\nhopeful\nterrific\ncordial\nhumorous\nthankful\ncourteous\nincredible\ntremendous\ndedicated\ninspirational\ntriumphant\ndelighted\njolly\ntrustworthy\ndelightful\njovial\ntrusty\ndependable\njoyful\ntruthful\ndevoted\njoyous\nuplifting\ndocile\njubilant\nvictorious\ndynamic\nkeen\nvigorous\neager\nkind\nvirtuous\nearnest\nlaudable\nvivacious\neasygoing\nlaughing\nwhimsical\nebullient\nlikable\nwitty\necstatic\nlively\nwonderful\nelated\nlovely\nworthy\nemphatic\nloving\nzealous\nenchanting\nloyal\nzestful\n`\n"],"sourceRoot":""}