{"version":3,"sources":["components/Table/TableHead.tsx","components/ButtonHelper/index.tsx","components/Table/sorting.ts","components/Table/index.tsx","components/layout/Table/index.tsx","routes/safe/components/Settings/Advanced/dataFetcher.ts","routes/safe/components/Settings/Advanced/style.ts","routes/safe/components/Settings/Advanced/RemoveModuleModal.tsx","routes/safe/components/Settings/Advanced/ModulesTable.tsx","logic/safe/utils/guardManager.ts","routes/safe/components/Settings/Advanced/RemoveGuardModal.tsx","routes/safe/components/Settings/Advanced/TransactionGuard.tsx","routes/safe/components/Settings/Advanced/index.tsx"],"names":["cellWidth","width","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","align","padding","disablePadding","sortDirection","id","static","style","label","active","direction","onClick","React","UnStyledButton","styled","button","theme","colors","separator","ButtonHelper","children","dataTestId","type","desc","a","b","orderProp","format","styles","root","backgroundColor","borderTopRightRadius","sm","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","height","display","justifyContent","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","value","undefined","defaultOrderBy","find","classes","data","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","size","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","input","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","className","TableHead","TableBody","Row","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","MODULES_TABLE_ADDRESS_ID","generateColumns","addressColumn","custom","actionsColumn","useStyles","makeStyles","createStyles","container","lg","hide","background","visibility","actions","minWidth","noBorderBottom","borderBottom","modalOwner","md","modalDescription","RemoveModuleModal","onClose","selectedModuleAddress","useSelector","currentSafe","safeAddress","address","safeVersion","currentVersion","useState","txData","setTxData","dispatch","useDispatch","connectedWalletAddress","userAccountSelector","useEffect","isCurrent","calculateRemoveOwnerData","getDisableModuleTxData","moduleAddress","logError","Errors","_806","message","removeSelectedModule","txParameters","delayExecution","createTransaction","to","valueInWei","txNonce","safeNonce","safeTxGas","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","Modal","description","handleClose","paperClassName","title","open","TxModalWrapper","onSubmit","submitText","ModalHeader","Hairline","Block","Col","xs","PrefixedEthHashInfo","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","Paragraph","noMargin","ModulesTable","moduleData","autoColumns","granted","grantedSelector","viewRemoveModuleModal","setViewRemoveModuleModal","setSelectedModuleAddress","TableContainer","length","row","cn","tabIndex","columnId","rowElement","justify","triggerRemoveSelectedModule","color","tooltip","getRemoveGuardTxData","guardAddress","getGnosisSafeInstanceAt","methods","setGuard","encodeABI","getSetGuardTxData","ZERO_ADDRESS","RemoveGuardModal","useMemo","removeTransactionGuard","_807","TransactionGuard","viewRemoveGuardModal","setViewRemoveGuardModal","triggerRemoveSelectedGuard","InfoText","Text","Bold","strong","text","NoModuleLegend","NoTransactionGuardLegend","Advanced","modulesList","nonce","modules","guard","isVersionWithGuards","semverSatisfies","withoutMargin","href","rel"],"mappings":"yOAUaA,EAAY,SAACC,GACxB,GAAKA,EAIL,MAAO,CACLC,SAAS,GAAD,OAAKD,EAAL,QAINE,E,4MACJC,WACE,SAACC,EAAkBC,GAAnB,OACA,YAGEC,EAFmB,EAAKC,MAAhBD,QAEDF,EAAUC,K,4CAGrB,WAA8B,IAAD,OAC3B,EAAoCG,KAAKD,MAAjCE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,QAExB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGF,EAAQG,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CACEC,MAAOD,EAAOC,MAEdC,QAASF,EAAOG,eAAiB,OAAS,SAC1CC,cAAeN,IAAYE,EAAOK,IAAKR,EAJzC,SAMGG,EAAOM,OACN,qBAAKC,MAAOP,EAAOO,MAAnB,SAA2BP,EAAOQ,QAElC,cAAC,IAAD,CACEC,OAAQX,IAAYE,EAAOK,GAC3BK,UAAWb,EACXc,QAAS,EAAKrB,WAAWU,EAAOK,GAAIL,EAAOH,OAC3CU,MAAOP,EAAOO,MAJhB,SAMGP,EAAOQ,SAbPR,EAAOK,e,GAlBCO,iBA0CZvB,O,8DC3DTwB,EAAiBC,UAAOC,OAAV,sYAgBI,qBAAGC,MAAkBC,OAAOC,aAiBrCC,IARM,SAAC,GAAoF,IAAD,IAAjFR,eAAiF,MAAvE,aAAuE,EAAtDS,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,WAC3D,OACE,cAACR,EAAD,CAAgBF,QAASA,EAASW,KAAM,SAAU,cAAaD,EAA/D,SACGD,M,0ICzBDG,EAAO,SACXC,EACAC,EACA3B,EACA4B,EACAC,GAEA,IAAM9B,EAAQ6B,EATmB,UASa5B,EATb,SASwBA,EAEzD,OAAI6B,EAAOF,EAAE5B,IAAU8B,EAAOH,EAAE3B,KACtB,EAEN8B,EAAOF,EAAE5B,IAAU8B,EAAOH,EAAE3B,IACvB,EAGF,G,sBCVH+B,EAAS,CACbC,KAAM,CACJC,gBAAiB,QACjBC,qBAAsBC,KACtBC,oBAAqBD,KACrBE,UAAW,4CAEbC,WAAY,CACVC,WAAYC,MACZP,gBAAiB,SAEnBQ,MAAO,CACLR,gBAAiB,SAEnBS,eAAgB,CACdT,gBAAiB,QACjBI,UAAW,2CACXM,aAAc,OACdC,wBAAyBT,KACzBU,uBAAwBV,MAE1BW,OAAQ,CACNT,UAAW,6CAMTU,EAAY,CAChB,aAAc,iBAGVC,EAAY,CAChB,aAAc,aAGVC,E,kDAOJ,WAAYpD,GAAQ,IAAD,8BACjB,cAAMA,IA0BRD,OAAS,SAACsD,EAAYrB,GACpB,MAA2B,EAAKsB,MAAxBnD,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACPmD,EAAiB,EAAKvD,MAAtBuD,aACJC,EAAW,OAGXrD,GAASC,IAAYiD,GAAwB,SAAVlD,EACrCqD,EAAW,MACDrD,GAA0B,SAAjBoD,IAEnBC,EAAW,OAGb,EAAKC,UAAS,iBAAO,CACnBtD,MAAOqD,EACPpD,QAASiD,EACTrB,YACA0B,OAAO,OA5CQ,EAgDnBC,cAAgB,iBAAO,CACrBC,OAAO,gBAAD,OAlEiB,IAkEjB,OACNvB,qBAAsBC,KACtBC,oBAAqBD,KACrBF,gBAAiB,QACjB3C,MAAO,OACPoE,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAxDK,EA2DnBC,iBAAmB,SAACC,EAAGC,GACrB,EAAKT,SAAS,CAAES,UA5DC,EA+DnBC,wBAA0B,SAACF,GACzB,IAAMG,EAAcC,OAAOJ,EAAEK,OAAOC,OACpC,EAAKd,SAAS,CAAEW,iBA9DhB,EAAKd,MAAQ,CACXY,KAAM,EACN/D,WAAOqE,EACPpE,aAASoE,EACTd,WAAOc,EACPxC,WAAW,EACXoC,iBAAaI,GATE,E,qDAanB,WACE,MAAoCvE,KAAKD,MAAjCE,EAAR,EAAQA,QAASuE,EAAjB,EAAiBA,eAEbA,GAAkBvE,IACIA,EAAQwE,MAAK,qBAAG/D,KAAgB8D,KAEpCtE,OAClBF,KAAKwD,SAAS,CACZzB,WAAW,O,oBA+CnB,WACE,MAcS/B,KAAKD,MAbZ0B,EADF,EACEA,SACAiD,EAFF,EAEEA,QACAzE,EAHF,EAGEA,QACA0E,EAJF,EAIEA,KACAC,EALF,EAKEA,aACAtB,EANF,EAMEA,aACAkB,EAPF,EAOEA,eACAK,EARF,EAQEA,mBACAC,EATF,EASEA,2BACAC,EAVF,EAUEA,kBACAlE,EAXF,EAWEA,MACAmE,EAZF,EAYEA,SACAC,EAbF,EAaEA,KAEF,EAAgEjF,KAAKqD,MAA7DI,EAAR,EAAQA,MAAOvD,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,QAAS4B,EAA/B,EAA+BA,UAAWkC,EAA1C,EAA0CA,KAAME,EAAhD,EAAgDA,YAC1Ce,EAAe/E,GAAWqE,EAC1BW,EAAajF,GAASoD,EACtB8B,EAAcjB,GAAeU,EAC7BQ,EAA8B,qBAAV5B,EAAwBA,IAAUmB,EACtDU,EAAoB,CACxB9C,WAAYkC,EAAQlC,WACpBN,MAAO8C,GAAYN,EAAQ9B,eAC3B2C,MAAOb,EAAQ/B,OAEX6C,EAAavF,EAAQwE,MAAK,SAACpE,GAAD,OAAYA,EAAOK,KAAOwE,KACtDO,ED5HkB,SAACC,EAAWC,EAAKlC,GACzC,IAAMmC,EAAanC,EAAQiC,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKrC,SAASsC,YAAK,IAErEC,GADSvC,EAAQiC,EAAUG,QAAO,SAACC,GAAD,OAAWA,EAAI,SAAWJ,GACtCtF,KAAI,SAAC6F,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAY5CC,GAVNH,EAAiBA,EAAeI,MAAK,SAACvE,EAAGC,GACvC,IAAM5B,EAAQyF,EAAI9D,EAAE,GAAIC,EAAE,IAE1B,OAAc,IAAV5B,EACKA,EAGF2B,EAAE,GAAKC,EAAE,OAGiB1B,KAAI,SAAC6F,GAAD,OAAQA,EAAG,MAElD,OAAOL,EAAWS,OAAOF,GC2GNG,CACf3B,EDzGoB,SACxBzE,EACAC,EACA4B,GAHwB,IAIxBC,EAJwB,uDAI8B,SAACsC,GAAD,OAAWA,GAJzC,MAMd,SAAVpE,EACI,SAAC2B,EAAGC,GAAJ,OAAUF,EAAKC,EAAGC,EAAG3B,EAAS4B,EAAWC,IACzC,SAACH,EAAGC,GAAJ,OAAWF,EAAKC,EAAGC,EAAG3B,EAAS4B,EAAWC,ICkG1CuE,CAAWpB,EAAYD,EAAcnD,EAA3B,OAAsCyD,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAYgB,gBAC5DnB,GAGGN,IACHU,EAAaA,EAAWgB,MAAMxC,EAAOmB,EAAanB,EAAOmB,EAAcA,IAGzE,IAAMsB,EAAmB,IAATzB,IAAeH,EAE/B,OACE,sCACI4B,GACA,eAACC,EAAA,EAAD,CAAO,kBAAiB9F,EAAO+F,UAAW5B,EAAW,GAAKN,EAAQxC,KAAlE,UACE,cAAC2E,EAAA,EAAD,CAAW5G,QAASA,EAASH,OAAQE,KAAKF,OAAQI,MAAOA,EAAOC,QAAS+E,IACzE,cAAC4B,EAAA,EAAD,UAAYrF,EAASgE,QAGxBiB,GACC,cAACK,EAAA,EAAD,CAAKH,UAAWlC,EAAQ1B,OAAQpC,MAAOZ,KAAK0D,gBAA5C,SACE,cAAC,SAAD,CAAQuB,KAAK,UAGfF,GACA,cAACiC,EAAA,EAAD,CACEC,oBAAqBhE,EACrByB,QAASY,EACT4B,UAAU,MACVC,MAAOlC,EACPmC,oBAAqBlE,EACrBmE,aAAcrH,KAAK+D,iBACnBuD,oBAAqBtH,KAAKkE,wBAC1BD,KAAMA,EACNE,YAAaiB,EACbmC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,c,GA1IzBtG,aAAjBkC,EACGqE,aAAe,CACpBlE,aAAc,MACdyB,mBAAmB,EACnBF,mBAAoB,GA8IT4C,gBAAWxF,EAAXwF,CAA0BtE,I,kCClMzC,+G,mHCIauE,EAA2B,UAW3BC,EAAkB,WAC7B,IAAMC,EAA6B,CACjCtH,MAAO,OACPuH,QAAQ,EACRrH,gBAAgB,EAChBE,GAAIgH,EACJ7G,MAAO,UACPX,OAAO,GAGH4H,EAA6B,CACjCD,QAAQ,EACRrH,gBAAgB,EAChBE,GAvBoC,UAwBpCG,MAAO,GACPX,OAAO,GAGT,OAAO6F,YAAK,CAAC6B,EAAeE,K,yBC7BjBC,EAAYC,YACvBC,YAAa,CACXC,UAAW,CACT3H,QAAS4H,MAEXC,KAAM,CACJ,UAAW,CACTjG,gBAAgB,GAAD,OAAKkG,eAEtB,mBAAoB,CAClBC,WAAY,YAGhBC,QAAS,CACP1E,eAAgB,WAChByE,WAAY,SACZE,SAAU,SAEZC,eAAgB,CACd,SAAU,CACRC,aAAc,SAGlBC,WAAY,CACVpI,QAASqI,KACT9E,WAAY,UAEd+E,iBAAkB,CAChBtI,QAASqI,S,gNCJFE,EAAoB,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,sBACrCtE,EAAUqD,IAEhB,EAA8DkB,YAAYC,KAAzDC,EAAjB,EAAQC,QAAsCC,EAA9C,EAA8BC,eAC9B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACXC,EAAyBX,YAAYY,KAE3CC,qBAAU,WACR,IAAIC,GAAY,EAEVC,EAAwB,uCAAG,4BAAAnI,EAAA,+EAERoI,YAAuB,CAC1CC,cAAelB,EACfG,cACAE,cACAO,2BAN2B,OAEvBJ,EAFuB,OASzBO,GACFN,EAAUD,GAViB,gDAa7BW,YAASC,IAAOC,KAAR,UAAiBrB,EAAjB,cAA4C,KAAMsB,UAb7B,yDAAH,qDAkB9B,OAFAN,IAEO,WACLD,GAAY,KAEb,CAACH,EAAwBT,EAAaE,EAAaL,IAEtD,IAAMuB,EAAoB,uCAAG,WAAOC,EAA4BC,GAAnC,SAAA5I,EAAA,sDAC3B,IACE6H,EACEgB,YAAkB,CAChBvB,cACAwB,GAAIxB,EACJyB,WAAY,IACZpB,SACAqB,QAASL,EAAaM,UACtBC,UAAWP,EAAaO,UACxBC,cAAeR,EACfS,oBAAqBC,IAAsBC,mBAC3CV,oBAGJ,MAAOzG,GACPmG,YAASC,IAAOC,KAAR,UAAiBrB,EAAjB,cAA4ChF,EAAEsG,UAhB7B,2CAAH,wDAoB1B,OACE,cAACc,EAAA,EAAD,CACEC,YAAY,6BACZC,YAAavC,EACbwC,eAAe,QACfC,MAAM,gBACNC,MAAI,EALN,SAOE,eAACC,EAAA,EAAD,CAAgBlC,OAAQA,EAAQmC,SAAUpB,EAAsBqB,WAAW,SAAS7C,QAASA,EAA7F,UACE,cAAC8C,EAAA,EAAD,CAAa9C,QAASA,EAASyC,MAAM,kBACrC,cAACM,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAChF,EAAA,EAAD,CAAKH,UAAWlC,EAAQiE,WAAxB,SACE,cAACqD,EAAA,EAAD,CAAK1L,MAAM,SAAS2L,GAAI,EAAxB,SACE,cAACC,EAAA,EAAD,CACEC,KAAMnD,EACNoD,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgBvD,SAInC,cAACjC,EAAA,EAAD,CAAKH,UAAWlC,EAAQmE,iBAAxB,SACE,cAAC2D,EAAA,EAAD,CAAWC,UAAQ,EAACxH,KAAK,KAAzB,wO,uCChFCyH,EAAe,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,WACvBjI,EAAUqD,IAEV9H,EAAU0H,IACViF,EAAc3M,EAAQ4F,QAAO,qBAAGgC,UAEhCgF,EAAU5D,YAAY6D,KAE5B,EAA0DvD,oBAAS,GAAnE,mBAAOwD,EAAP,KAA8BC,EAA9B,KAGA,EAA0DzD,qBAA1D,mBAAOP,EAAP,KAA8BiE,EAA9B,KAMA,OACE,qCACE,cAACC,EAAA,EAAD,UACE,cAACvG,EAAA,EAAD,CACE1G,QAASA,EACT0E,KAAMgI,EACN/H,cAAY,EACZJ,eAAgBkD,EAChB3C,mBAAiB,EACjBlE,MAAM,UACNmE,UAAQ,EACRC,KAAI,OAAE0H,QAAF,IAAEA,OAAF,EAAEA,EAAYQ,OARpB,SAUG,SAAC1H,GAAD,OACCA,EAAWrF,KAAI,SAACgN,EAAKlH,GAAN,OACb,cAAC,IAAD,CACEU,UAAWyG,IAAG3I,EAAQ0D,KAAMlC,GAAS,GAAKA,IAAUT,EAAWR,KAAO,GAAKP,EAAQ+D,gBACnF,cAxCY,aA0CZ6E,UAAW,EAJb,SAMGV,EAAYxM,KAAI,SAACC,EAAQ6F,GACxB,IAAMqH,EAAWlN,EAAOK,GAClB8M,EAAaJ,EAAIG,GACdrD,EAAT,YAA0BsD,EAA1B,MAEA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAWlN,MAAOD,EAAOC,MAAO4G,UAAU,KAA1C,SACGqG,IAAa7F,EACZ,cAACqE,EAAA,EAAD,CAAO0B,QAAQ,OAAf,SACE,cAACvB,EAAA,EAAD,CACEC,KAAMjC,EACNkC,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgBrC,OAIjCsD,GAXgDD,GAcpD,cAAC,IAAD,CAAWrG,UAAU,KAArB,SACE,cAACH,EAAA,EAAD,CAAKzG,MAAM,MAAMsG,UAAWlC,EAAQ6D,QAApC,SACGsE,GACC,cAACrL,EAAA,EAAD,CACER,QAAS,kBAnDD,SAACkJ,GACnC+C,EAAyB/C,GACzB8C,GAAyB,GAiDgBU,CAA4BxD,IAC3CxI,WAAU,UAAKwI,EAAL,YAvEN,qBAqEN,SAIE,cAAC,OAAD,CAAMjF,KAAK,KAAKtD,KAAK,SAASgM,MAAM,QAAQC,QAAQ,0BAtB9D,UAAkBL,EAAlB,YAA8BrH,QAT7BA,WA4Cd6G,GAAyB/D,GACxB,cAAC,EAAD,CAAmBD,QAvEK,kBAAMiE,GAAyB,IAuEJhE,sBAAuBA,Q,iBChGrE6E,EAAuB,SAAC1E,EAAqBE,GACxD,OAP+B,SAACyE,EAAsB3E,EAAqBE,GAG3E,OAFqB0E,YAAwB5E,EAAaE,GAEtC2E,QAAQC,SAASH,GAAcI,YAI5CC,CAAkBC,IAAcjF,EAAaE,ICiBzCgF,EAAmB,SAAC,GAAoE,IAAlEtF,EAAiE,EAAjEA,QAAS+E,EAAwD,EAAxDA,aACpCpJ,EAAUqD,IAEhB,EAA8DkB,YAAYC,KAAzDC,EAAjB,EAAQC,QAAsCC,EAA9C,EAA8BC,eACxBI,EAAWC,cAEXH,EAAS8E,mBAAQ,kBAAMT,EAAqB1E,EAAaE,KAAc,CAACF,EAAaE,IAErFkF,EAAsB,uCAAG,WAAO/D,EAA4BC,GAAnC,SAAA5I,EAAA,sDAC7B,IACE6H,EACEgB,YAAkB,CAChBvB,cACAwB,GAAIxB,EACJyB,WAAY,IACZpB,SACAqB,QAASL,EAAaM,UACtBC,UAAWP,EAAaO,UACxBC,cAAeR,EACfS,oBAAqBC,IAAsBC,mBAC3CV,oBAGJ,MAAOzG,GACPmG,YAASC,IAAOoE,KAAR,UAAiBV,EAAjB,mBAAmC9J,EAAEsG,UAhBlB,2CAAH,wDAoB5B,OACE,cAACc,EAAA,EAAD,CACEC,YAAY,wCACZC,YAAavC,EACbwC,eAAe,QACfC,MAAM,2BACNC,MAAI,EALN,SAOE,eAACC,EAAA,EAAD,CAAgBlC,OAAQA,EAAQmC,SAAU4C,EAAwB3C,WAAW,SAAS7C,QAASA,EAA/F,UACE,cAAC8C,EAAA,EAAD,CAAa9C,QAASA,EAASyC,MAAM,iBACrC,cAACM,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAChF,EAAA,EAAD,CAAKH,UAAWlC,EAAQiE,WAAxB,SACE,cAACqD,EAAA,EAAD,CAAK1L,MAAM,SAAS2L,GAAI,EAAxB,SACE,cAACC,EAAA,EAAD,CACEC,KAAM2B,EACN1B,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgBuB,SAInC,cAAC/G,EAAA,EAAD,CAAKH,UAAWlC,EAAQmE,iBAAxB,SACE,cAAC2D,EAAA,EAAD,CAAWC,UAAQ,EAACxH,KAAK,KAAzB,wKCpDCwJ,GAAmB,SAAC,GAA4D,IAA1DrF,EAAyD,EAAzDA,QAC3B1E,EAAUqD,IAEV9H,EAAU0H,IACViF,EAAc3M,EAAQ4F,QAAO,qBAAGgC,UAEhCgF,EAAU5D,YAAY6D,KAE5B,EAAwDvD,oBAAS,GAAjE,mBAAOmF,EAAP,KAA6BC,EAA7B,KAGMC,EAA6B,WACjCD,GAAwB,IAG1B,OACE,qCACE,cAACzB,EAAA,EAAD,UACE,cAACvG,EAAA,EAAD,CAAO1G,QAASA,EAAS0E,KAAM,CAACyE,GAAUxE,cAAY,EAACG,mBAAiB,EAAClE,MAAM,UAAUmE,UAAQ,EAAjG,SACG,SAACS,GAAD,OACCA,EAAWrF,KAAI,SAACgN,EAAKlH,GAAN,OACb,cAAC,IAAD,CACEU,UAAWyG,IAAG3I,EAAQ0D,KAAMlC,GAAS,GAAKA,IAAUT,EAAWR,KAAO,GAAKP,EAAQ+D,gBACnF,cA7BkB,aA+BlB6E,UAAW,EAJb,SAMGV,EAAYxM,KAAI,SAACC,EAAQ6F,GACxB,IAAMqH,EAAWlN,EAAOK,GACxB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAWJ,MAAOD,EAAOC,MAAO4G,UAAU,KAA1C,SACE,cAAC6E,EAAA,EAAD,CAAO0B,QAAQ,OAAf,SACE,cAACvB,EAAA,EAAD,CAAqBC,KAAMiB,EAAKhB,aAAW,EAACC,YAAU,EAACC,YAAaC,YAAgBa,QAFpCG,GAKpD,cAAC,IAAD,CAAWrG,UAAU,KAArB,SACE,cAACH,EAAA,EAAD,CAAKzG,MAAM,MAAMsG,UAAWlC,EAAQ6D,QAApC,SACGsE,GACC,cAACrL,EAAA,EAAD,CACER,QAAS4N,EACTlN,WAAU,UAAK0L,EAAL,YAhDA,oBA8CZ,SAIE,cAAC,OAAD,CAAMnI,KAAK,KAAKtD,KAAK,SAASgM,MAAM,QAAQC,QAAQ,0BAb9D,UAAkBL,EAAlB,YAA8BrH,QAN7BA,WAgCdwI,GAAwBtF,GAAW,cAAC,EAAD,CAAkBL,QA/C7B,kBAAM4F,GAAwB,IA+C8Bb,aAAc1E,QCpEnGyF,GAAW1N,kBAAO2N,OAAP3N,CAAH,iDAIR4N,GAAO5N,UAAO6N,OAAV,0CACC3N,QAAMC,OAAO2N,MAGlBC,GAAiB,kBACrB,cAACL,GAAD,CAAUlB,MAAM,iBAAiB1I,KAAK,KAAtC,iCAKIkK,GAA2B,kBAC/B,cAACN,GAAD,CAAUlB,MAAM,iBAAiB1I,KAAK,KAAtC,uCA0EamK,UAnEE,WAAqB,IAAD,IP3BPC,EO4BtB3K,EAAUqD,IAChB,YAAkDkB,YAAYC,YAA9D,QAA8E,GAAtEoG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAAOlG,EAA/B,EAA+BA,eAEzBqD,EAAa4C,GAAO,UP9B1B,QAD4BF,EO+BeE,SP9B3C,IAAOF,OAAP,EAAOA,EAAajP,KAAI,SAACmP,GAAD,sBACrB7H,EAA2B6H,aO6BJ,QAAoC,KACxDE,EAAsBC,IAAgBpG,EAAgB,WAE5D,OACE,qCAEE,eAACyC,EAAA,EAAD,CAAOnF,UAAWlC,EAAQwD,UAA1B,UACE,cAAC,QAAD,CAAOjD,KAAK,KAAK0K,eAAa,EAA9B,wBAGA,cAACd,GAAD,CAAU5J,KAAK,KAAf,+NAIA,eAAC4J,GAAD,CAAUlB,MAAM,iBAAiB1I,KAAK,KAAtC,4BACiB,cAAC8J,GAAD,CAAM,cAAa,gBAAnB,SAAqCO,UAKxD,eAACvD,EAAA,EAAD,CAAOnF,UAAWlC,EAAQwD,UAA1B,UACE,cAAC,QAAD,CAAOjD,KAAK,KAAK0K,eAAa,EAA9B,0BAGA,eAACd,GAAD,CAAU5J,KAAK,KAAf,iMAE0E,IACxE,mBAAG2K,KAjCK,kDAiCYC,IAAI,sBAAsBxL,OAAO,SAArD,kBAHF,OASEsI,GAAeA,EAAWQ,OAA8B,cAAC,EAAD,CAAcR,WAAYA,IAA/C,cAAC,GAAD,OAItC8C,GACC,eAAC1D,EAAA,EAAD,CAAOnF,UAAWlC,EAAQwD,UAA1B,UACE,cAAC,QAAD,CAAOjD,KAAK,KAAK0K,eAAa,EAA9B,+BAGA,eAACd,GAAD,CAAU5J,KAAK,KAAf,0PAG2B,IACzB,mBACE2K,KAAK,8EACLC,IAAI,sBACJxL,OAAO,SAHT,kBAJF,OAcEmL,EAAuC,cAAC,GAAD,CAAkBpG,QAASoG,IAA1D,cAAC,GAAD","file":"static/js/52.29e05934.chunk.js","sourcesContent":["import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort =\n    (property: string, orderAttr: string): (() => void) =>\n    () => {\n      const { onSort } = this.props\n\n      onSort(property, orderAttr)\n    }\n\n  render(): React.ReactElement {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nconst UnStyledButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 50%;\n  transition: background-color 0.2s ease-in-out;\n  outline-color: transparent;\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.separator};\n  }\n`\ntype Props = {\n  onClick?: () => void\n  children: ReactElement\n  dataTestId?: string\n}\n\nconst ButtonHelper = ({ onClick = () => undefined, children, dataTestId }: Props): React.ReactElement => {\n  return (\n    <UnStyledButton onClick={onClick} type={'button'} data-testid={dataTestId}>\n      {children}\n    </UnStyledButton>\n  )\n}\n\nexport default ButtonHelper\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { ReactElement } from 'react'\n\nexport { TableBody, TableCell, TableHead, TableRow }\n\nconst buildWidthFrom = (size) => ({\n  minWidth: `${size}px`,\n})\n\nconst overflowStyle: any = {\n  overflowX: 'auto',\n}\n\n// see: https://css-tricks.com/responsive-data-tables/\nconst GnoTable = ({ children, size }): ReactElement => {\n  const style = size ? buildWidthFrom(size) : undefined\n\n  return (\n    <div style={overflowStyle}>\n      <Table style={style}>{children}</Table>\n    </div>\n  )\n}\n\nexport default GnoTable\n","import { List } from 'immutable'\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\n\nexport const MODULES_TABLE_ADDRESS_ID = 'address'\nexport const MODULES_TABLE_ACTIONS_ID = 'actions'\n\nexport type ModuleAddressColumn = { [MODULES_TABLE_ADDRESS_ID]: ModulePair }[]\n\nexport const getModuleData = (modulesList: ModulePair[] | null): ModuleAddressColumn | undefined => {\n  return modulesList?.map((modules) => ({\n    [MODULES_TABLE_ADDRESS_ID]: modules,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const addressColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: MODULES_TABLE_ADDRESS_ID,\n    label: 'Address',\n    order: false,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: MODULES_TABLE_ACTIONS_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    container: {\n      padding: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: `${background}`,\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    modalOwner: {\n      padding: md,\n      alignItems: 'center',\n    },\n    modalDescription: {\n      padding: md,\n    },\n  }),\n)\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal from 'src/components/Modal'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { getDisableModuleTxData } from 'src/logic/safe/utils/modules'\n\nimport { useStyles } from './style'\n\ninterface RemoveModuleModalProps {\n  onClose: () => void\n  selectedModuleAddress: string\n}\n\nexport const RemoveModuleModal = ({ onClose, selectedModuleAddress }: RemoveModuleModalProps): ReactElement => {\n  const classes = useStyles()\n\n  const { address: safeAddress, currentVersion: safeVersion } = useSelector(currentSafe)\n  const [txData, setTxData] = useState('')\n  const dispatch = useDispatch()\n  const connectedWalletAddress = useSelector(userAccountSelector)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateRemoveOwnerData = async () => {\n      try {\n        const txData = await getDisableModuleTxData({\n          moduleAddress: selectedModuleAddress,\n          safeAddress,\n          safeVersion,\n          connectedWalletAddress,\n        })\n\n        if (isCurrent) {\n          setTxData(txData)\n        }\n      } catch (error) {\n        logError(Errors._806, `${selectedModuleAddress} - ${error.message}`)\n      }\n    }\n    calculateRemoveOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [connectedWalletAddress, safeAddress, safeVersion, selectedModuleAddress])\n\n  const removeSelectedModule = async (txParameters: TxParameters, delayExecution: boolean): Promise<void> => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: safeAddress,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n          delayExecution,\n        }),\n      )\n    } catch (e) {\n      logError(Errors._806, `${selectedModuleAddress} - ${e.message}`)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Module\"\n      handleClose={onClose}\n      paperClassName=\"modal\"\n      title=\"Remove Module\"\n      open\n    >\n      <TxModalWrapper txData={txData} onSubmit={removeSelectedModule} submitText=\"Remove\" onClose={onClose}>\n        <ModalHeader onClose={onClose} title=\"Remove Module\" />\n        <Hairline />\n        <Block>\n          <Row className={classes.modalOwner}>\n            <Col align=\"center\" xs={1}>\n              <PrefixedEthHashInfo\n                hash={selectedModuleAddress}\n                showCopyBtn\n                showAvatar\n                explorerUrl={getExplorerInfo(selectedModuleAddress)}\n              />\n            </Col>\n          </Row>\n          <Row className={classes.modalDescription}>\n            <Paragraph noMargin size=\"lg\">\n              After removing this module, any feature or app that uses this module might no longer work. If this Safe\n              requires more then one signature, the module removal will have to be confirmed by other owners as well.\n            </Paragraph>\n          </Row>\n        </Block>\n      </TxModalWrapper>\n    </Modal>\n  )\n}\n","import { Icon } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { generateColumns, ModuleAddressColumn, MODULES_TABLE_ADDRESS_ID } from './dataFetcher'\nimport { RemoveModuleModal } from './RemoveModuleModal'\nimport { useStyles } from './style'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport Table from 'src/components/Table'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\n\nconst REMOVE_MODULE_BTN_TEST_ID = 'remove-module-btn'\nconst MODULES_ROW_TEST_ID = 'owners-row'\n\ninterface ModulesTableProps {\n  moduleData: ModuleAddressColumn | null\n}\n\nexport const ModulesTable = ({ moduleData }: ModulesTableProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const granted = useSelector(grantedSelector)\n\n  const [viewRemoveModuleModal, setViewRemoveModuleModal] = useState(false)\n  const hideRemoveModuleModal = () => setViewRemoveModuleModal(false)\n\n  const [selectedModuleAddress, setSelectedModuleAddress] = useState<string>()\n  const triggerRemoveSelectedModule = (moduleAddress: string): void => {\n    setSelectedModuleAddress(moduleAddress)\n    setViewRemoveModuleModal(true)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table\n          columns={columns}\n          data={moduleData}\n          defaultFixed\n          defaultOrderBy={MODULES_TABLE_ADDRESS_ID}\n          disablePagination\n          label=\"Modules\"\n          noBorder\n          size={moduleData?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid={MODULES_ROW_TEST_ID}\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n                  const [, moduleAddress] = rowElement\n\n                  return (\n                    <Fragment key={`${columnId}-${index}`}>\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\n                        {columnId === MODULES_TABLE_ADDRESS_ID ? (\n                          <Block justify=\"left\">\n                            <PrefixedEthHashInfo\n                              hash={moduleAddress}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(moduleAddress)}\n                            />\n                          </Block>\n                        ) : (\n                          rowElement\n                        )}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        <Row align=\"end\" className={classes.actions}>\n                          {granted && (\n                            <ButtonHelper\n                              onClick={() => triggerRemoveSelectedModule(moduleAddress)}\n                              dataTestId={`${moduleAddress}-${REMOVE_MODULE_BTN_TEST_ID}`}\n                            >\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove module\" />\n                            </ButtonHelper>\n                          )}\n                        </Row>\n                      </TableCell>\n                    </Fragment>\n                  )\n                })}\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {viewRemoveModuleModal && selectedModuleAddress && (\n        <RemoveModuleModal onClose={hideRemoveModuleModal} selectedModuleAddress={selectedModuleAddress} />\n      )}\n    </>\n  )\n}\n","import { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\n\nexport const getSetGuardTxData = (guardAddress: string, safeAddress: string, safeVersion: string): string => {\n  const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n\n  return safeInstance.methods.setGuard(guardAddress).encodeABI()\n}\n\nexport const getRemoveGuardTxData = (safeAddress: string, safeVersion: string): string => {\n  return getSetGuardTxData(ZERO_ADDRESS, safeAddress, safeVersion)\n}\n","import { ReactElement, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal from 'src/components/Modal'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { getRemoveGuardTxData } from 'src/logic/safe/utils/guardManager'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { TxModalWrapper } from 'src/routes/safe/components/Transactions/helpers/TxModalWrapper'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\n\nimport { useStyles } from './style'\n\ninterface RemoveGuardModalProps {\n  onClose: () => void\n  guardAddress: string\n}\n\nexport const RemoveGuardModal = ({ onClose, guardAddress }: RemoveGuardModalProps): ReactElement => {\n  const classes = useStyles()\n\n  const { address: safeAddress, currentVersion: safeVersion } = useSelector(currentSafe)\n  const dispatch = useDispatch()\n\n  const txData = useMemo(() => getRemoveGuardTxData(safeAddress, safeVersion), [safeAddress, safeVersion])\n\n  const removeTransactionGuard = async (txParameters: TxParameters, delayExecution: boolean): Promise<void> => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: safeAddress,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n          delayExecution,\n        }),\n      )\n    } catch (e) {\n      logError(Errors._807, `${guardAddress} – ${e.message}`)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Transaction Guard\"\n      handleClose={onClose}\n      paperClassName=\"modal\"\n      title=\"Remove Transaction Guard\"\n      open\n    >\n      <TxModalWrapper txData={txData} onSubmit={removeTransactionGuard} submitText=\"Remove\" onClose={onClose}>\n        <ModalHeader onClose={onClose} title=\"Remove Guard\" />\n        <Hairline />\n        <Block>\n          <Row className={classes.modalOwner}>\n            <Col align=\"center\" xs={1}>\n              <PrefixedEthHashInfo\n                hash={guardAddress}\n                showCopyBtn\n                showAvatar\n                explorerUrl={getExplorerInfo(guardAddress)}\n              />\n            </Col>\n          </Row>\n          <Row className={classes.modalDescription}>\n            <Paragraph noMargin size=\"lg\">\n              Once the transaction guard has been removed, checks by the transaction guard will not be conducted before\n              or after any subsequent transactions.\n            </Paragraph>\n          </Row>\n        </Block>\n      </TxModalWrapper>\n    </Modal>\n  )\n}\n","import { Icon } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { generateColumns } from './dataFetcher'\nimport { RemoveGuardModal } from './RemoveGuardModal'\nimport { useStyles } from './style'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport Table from 'src/components/Table'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { getExplorerInfo } from 'src/config'\n\nexport const REMOVE_GUARD_BTN_TEST_ID = 'remove-guard-btn'\nexport const GUARDS_ROW_TEST_ID = 'guards-row'\n\ninterface TransactionGuardProps {\n  address: string\n}\n\nexport const TransactionGuard = ({ address }: TransactionGuardProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const granted = useSelector(grantedSelector)\n\n  const [viewRemoveGuardModal, setViewRemoveGuardModal] = useState(false)\n  const hideRemoveGuardModal = () => setViewRemoveGuardModal(false)\n\n  const triggerRemoveSelectedGuard = (): void => {\n    setViewRemoveGuardModal(true)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table columns={columns} data={[address]} defaultFixed disablePagination label=\"Modules\" noBorder>\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid={GUARDS_ROW_TEST_ID}\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  return (\n                    <Fragment key={`${columnId}-${index}`}>\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\n                        <Block justify=\"left\">\n                          <PrefixedEthHashInfo hash={row} showCopyBtn showAvatar explorerUrl={getExplorerInfo(row)} />\n                        </Block>\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        <Row align=\"end\" className={classes.actions}>\n                          {granted && (\n                            <ButtonHelper\n                              onClick={triggerRemoveSelectedGuard}\n                              dataTestId={`${row}-${REMOVE_GUARD_BTN_TEST_ID}`}\n                            >\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove module\" />\n                            </ButtonHelper>\n                          )}\n                        </Row>\n                      </TableCell>\n                    </Fragment>\n                  )\n                })}\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {viewRemoveGuardModal && address && <RemoveGuardModal onClose={hideRemoveGuardModal} guardAddress={address} />}\n    </>\n  )\n}\n","import { Text, theme, Title } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport semverSatisfies from 'semver/functions/satisfies'\n\nimport { getModuleData } from './dataFetcher'\nimport { useStyles } from './style'\nimport { ModulesTable } from './ModulesTable'\n\nimport Block from 'src/components/layout/Block'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TransactionGuard } from './TransactionGuard'\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst Bold = styled.strong`\n  color: ${theme.colors.text};\n`\n\nconst NoModuleLegend = (): ReactElement => (\n  <InfoText color=\"secondaryLight\" size=\"xl\">\n    No modules enabled\n  </InfoText>\n)\n\nconst NoTransactionGuardLegend = (): ReactElement => (\n  <InfoText color=\"secondaryLight\" size=\"xl\">\n    No transaction guard set\n  </InfoText>\n)\n\nconst DOCS_LINK = 'https://docs.gnosis-safe.io/contracts/modules-1'\n\nconst Advanced = (): ReactElement => {\n  const classes = useStyles()\n  const { nonce, modules, guard, currentVersion } = useSelector(currentSafe) ?? {}\n\n  const moduleData = modules ? getModuleData(modules) ?? null : null\n  const isVersionWithGuards = semverSatisfies(currentVersion, '>=1.3.0')\n\n  return (\n    <>\n      {/* Nonce */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Safe Nonce\n        </Title>\n        <InfoText size=\"lg\">\n          For security reasons, transactions made with Safe need to be executed in order. The nonce shows you which\n          transaction will be executed next. You can find the nonce for a transaction in the transaction details.\n        </InfoText>\n        <InfoText color=\"secondaryLight\" size=\"xl\">\n          Current Nonce: <Bold data-testid={'current-nonce'}>{nonce}</Bold>\n        </InfoText>\n      </Block>\n\n      {/* Modules */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Safe Modules\n        </Title>\n        <InfoText size=\"lg\">\n          Modules allow you to customize the access-control logic of your Safe. Modules are potentially risky, so make\n          sure to only use modules from trusted sources. Learn more about modules{' '}\n          <a href={DOCS_LINK} rel=\"noopener noreferrer\" target=\"_blank\">\n            here\n          </a>\n          .\n        </InfoText>\n\n        {!moduleData || !moduleData.length ? <NoModuleLegend /> : <ModulesTable moduleData={moduleData} />}\n      </Block>\n\n      {/* Transaction guard */}\n      {isVersionWithGuards && (\n        <Block className={classes.container}>\n          <Title size=\"xs\" withoutMargin>\n            Transaction Guard\n          </Title>\n          <InfoText size=\"lg\">\n            Transaction guards impose additional constraints that are checked prior to executing a Safe transaction.\n            Transaction guards are potentially risky, so make sure to only use modules from trusted sources. Learn more\n            about transaction guards{' '}\n            <a\n              href=\"https://help.gnosis-safe.io/en/articles/5324092-what-is-a-transaction-guard\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              here\n            </a>\n            .\n          </InfoText>\n\n          {!guard ? <NoTransactionGuardLegend /> : <TransactionGuard address={guard} />}\n        </Block>\n      )}\n    </>\n  )\n}\n\nexport default Advanced\n"],"sourceRoot":""}