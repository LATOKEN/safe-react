{"version":3,"sources":["components/forms/SelectField/index.tsx","components/ButtonHelper/index.tsx","assets/icons/safe-created.svg","logic/hooks/useQuery.ts","routes/CreateSafePage/fields/createSafeFields.tsx","routes/CreateSafePage/steps/NameNewSafeStep.tsx","routes/CreateSafePage/steps/OwnersAndConfirmationsNewSafeStep.tsx","logic/hooks/useEstimateSafeCreationGas.tsx","routes/CreateSafePage/steps/ReviewNewSafeStep.tsx","logic/safe/transactions/txMonitor.ts","routes/opening/components/Footer.tsx","routes/opening/steps.ts","routes/opening/assets/vault-error.svg","routes/opening/assets/creation-process.gif","routes/opening/utils/getSafeAddressFromLogs.ts","routes/opening/index.tsx","routes/CreateSafePage/components/SafeCreationProcess.tsx","routes/CreateSafePage/steps/SelectWalletAndNetworkStep.tsx","routes/CreateSafePage/CreateSafePage.tsx"],"names":["style","minWidth","SelectInput","classes","disableError","formControlProps","input","name","onChange","value","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","error","touched","inputProps","htmlFor","variant","UnStyledButton","styled","button","theme","colors","separator","ButtonHelper","onClick","children","dataTestId","type","useQuery","search","useLocation","useMemo","URLSearchParams","FIELD_CREATE_CUSTOM_SAFE_NAME","FIELD_CREATE_SUGGESTED_SAFE_NAME","FIELD_SAFE_OWNERS_LIST","FIELD_SAFE_OWNER_ENS_LIST","FIELD_NEW_SAFE_THRESHOLD","FIELD_MAX_OWNER_NUMBER","FIELD_NEW_SAFE_PROXY_SALT","FIELD_NEW_SAFE_GAS_LIMIT","FIELD_NEW_SAFE_GAS_PRICE","FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE","FIELD_NEW_SAFE_CREATION_TX_HASH","SAFE_PENDING_CREATION_STORAGE_KEY","NameNewSafeStep","useState","ownersWithENSName","setOwnersWithENSName","provider","useSelector","providerNameSelector","setCurrentStep","useStepper","useEffect","createNewSafeForm","useForm","formValues","getState","values","hasCustomSafeName","trackEvent","CREATE_SAFE_EVENTS","NAME_SAFE","getInitialOwnerENSNames","a","owners","Promise","all","filter","addressFieldName","map","address","reverseENSLookup","ensName","ownersWithENSNameRecord","reduce","acc","change","BlockWithPadding","Block","margin","Paragraph","color","noMargin","size","NetworkLabel","FieldContainer","Col","xs","Field","component","TextField","placeholder","testId","Link","href","rel","target","lg","secondary","OwnersAndConfirmationsNewSafeStep","createSafeForm","addressBook","currentNetworkAddressBookAsMap","createSafeFormValues","formErrors","errors","threshold","maxOwnerNumber","getENSName","handleScan","closeQrModal","scannedAddress","startsWith","replace","ParagraphWithMargin","StyledLink","title","as","Hairline","RowHeader","padding","i","nameFieldName","hasOwnerAddressError","ownerAddress","showDeleteIcon","ownerName","OwnerNameField","validate","minMaxLength","AddressInput","fieldMutator","addressName","inputAdornment","endAdornment","InputAdornment","position","CheckIconAddressAdornment","text","validators","_","index","some","owner","sameString","ADDRESS_REPEATED_ERROR","undefined","OwnersIconsContainer","center","middle","ScanQRWrapper","args","ownersUpdated","updatedMaxOwnerNumbers","length","onClickRemoveOwner","tooltip","OwnerContainer","align","grow","Button","newEmptyOwner","SelectField","val","composeValidators","required","minValue","THRESHOLD_ERROR","option","MenuItem","StyledParagraph","Row","sm","extraSmallFontSize","disabled","md","CheckCircle","estimateGas","userAccount","numOwners","safeCreationSalt","addresses","estimateGasForDeployingSafe","calculateGasPrice","isMaxFeeParam","getFeesPerGas","maxPriorityFeePerGas","maxFeePerGas","gasEstimation","gasPrice","feesPerGas","estimatedGasCosts","parseInt","maxPrioFeePerGas","setMaxPrioFeePerGas","nativeCurrency","getNativeCurrency","gasCost","fromTokenUnit","decimals","gasCostFormatted","formatAmount","gasLimit","gasMaxPrioFee","gasMaxPrioFeeFormatted","toString","ReviewNewSafeStep","defaultSafeValue","safeName","numberOfOwners","setGasEstimation","userAccountSelector","addressesSerialized","JSON","stringify","addressesList","parse","then","useEstimateSafeCreationGas","layout","DetailsContainer","SafeNameParagraph","weight","TableContainer","TitleContainer","Fragment","OwnersAddressesContainer","PrefixedEthHashInfo","hash","showAvatar","showCopyBtn","explorerUrl","getExplorerInfo","DescriptionContainer","symbol","border","background","findSpeedupTx","sender","nonce","data","web3","getWeb3ReadOnly","eth","getBlock","latestBlock","replacementTransaction","transactions","find","transaction","sameAddress","from","txMonitor","options","tries","resolve","reject","maxRetries","CodedException","Errors","_805","monitorFn","params","getTransaction","catch","getTransactionReceipt","firstTxReceipt","replacementTx","replacementReceipt","setTimeout","delay","ButtonWithMargin","FooterContainer","div","LoaderText","span","GenericFooter","ErrorFooter","onCancel","onRetry","steps","id","description","instruction","footerComponent","continueButtonDisabled","onContinue","Track","GET_STARTED","abiDecoder","addABI","getProxyFactoryDeployment","version","LATEST_SAFE_VERSION","abi","getNewSafeAddressFromLogs","logs","proxyCreationEvent","decodeLogs","proxyInformation","events","checksumAddress","SafeDeployment","FooterComponent","creationTxHash","onSuccess","submittedPromise","loading","setLoading","stepIndex","setStepIndex","safeCreationTxHash","setSafeCreationTxHash","createdSafeAddress","setCreatedSafeAddress","setError","intervalStarted","setIntervalStarted","waitingSafeDeployed","setWaitingSafeDeployed","setContinueButtonDisabled","dispatch","useDispatch","confirmationStep","isConfirmationStep","showSnackbarError","useCallback","err","isTxPendingError","showNotification","NOTIFICATIONS","TX_PENDING_MSG","CREATE_SAFE_FAILED_MSG","message","onError","logError","_800","onRetryTx","handlePromise","receipt","transactionHash","isWalletRejection","REJECT_CREATE_SAFE","isTxMined","txHash","txResult","blockNumber","status","Error","interval","setInterval","clearInterval","awaitUntilSafeIsDeployed","safeAddress","ProxyCreation","returnValues","proxy","code","EMPTY_DATA","getCode","console","log","LoaderContainer","Wrapper","Title","tag","Nav","activeStepIndex","orientation","Body","BodyImage","Img","alt","height","src","VaultErrorSvg","VaultLoading","SuccessSvg","BodyDescription","CardTitle","BodyInstruction","FullParagraph","inversecolors","$stepIndex","TxText","Center","BodyFooter","Heading","white","connected","fontColor","InlinePrefixedEthHashInfo","ButtonContainer","EmphasisLabel","boldFont","goToWelcomePage","history","push","WELCOME_ROUTE","sleep","ms","parseError","prefix","json","split","pop","actualMessage","slice","e","loadSavedDataOrLeave","loadFromStorage","createNewSafe","userAddress","onHash","safeCreationFormValues","confirmations","ownerAddresses","Date","now","deploymentTx","getSafeDeploymentTransaction","sendParams","createSendParams","ethGasLimit","ethGasPriceInGWei","ethMaxPrioFeeInGWei","send","once","SUBMIT_CREATE_SAFE","saveToStorage","encodeABI","txReceipt","didTxRevert","CREATED_SAFE","pollSafeInfo","backOff","getSafeInfo","startingDelay","maxDelay","numOfAttempts","retry","info","SafeCreationProcess","creationTxPromise","setCreationTxPromise","chainId","currentChainId","redirect","get","showModal","setShowModal","modalData","setModalData","showCouldNotLoadModal","setShowCouldNotLoadModal","newSafeAddress","setNewSafeAddress","newCreationTxHash","onSafeCreated","ownersAddressBookEntry","makeAddressBookEntry","safeAddressBookEntry","addressBookSafeLoad","buildSafe","safeProps","addOrUpdateSafe","CANCEL_CREATE_SAFE","removeFromStorage","onClickModalButton","includes","ADDRESSED_ROUTE","pathname","generateSafeRoute","shortName","getShortName","SAFE_APPS_EVENTS","SHARED_APP_OPEN_AFTER_SAFE_CREATION","SAFE_ROUTES","DASHBOARD","state","tx","RETRY_CREATE_SAFE","onClose","body","footer","GO_TO_SAFE","Container","WalletContainer","StyledDialogTitle","DialogTitle","StyledDialogContent","DialogContent","NetworkLabelItem","SelectWalletAndNetworkStep","isNetworkSelectorPopupOpen","setIsNetworkSelectorPopupOpen","isWalletConnected","availableSelector","isWrongNetwork","shouldSwitchWalletChain","onNetworkSwitch","setChainId","ConnectDetails","WalletSwitch","Dialog","open","disableTypography","Typography","IconButton","dividers","List","getChains","network","role","networkInfo","flexGrow","CreateSafePage","safePendingToBeCreated","setSafePendingToBeCreated","isLoading","setIsLoading","providerName","checkIfSafeIsPendingToBeCreated","userWalletAddress","location","safeRandomName","useMnemonicSafeName","initialFormValues","setInitialFormValues","isCurrent","getInitValues","getInitialValues","initialValuesFromUrl","isInitializing","Page","BackIcon","disableRipple","goBack","StepperForm","initialValues","onSubmit","newSafeFormValues","OWNERS","THRESHOLD","trackingCategory","CREATE_SAFE_CATEGORY","nextButtonLabel","disableNextButton","suggestedSafeName","query","queryString","arrayFormat","owneraddresses","ownernames","isOwnersPresentInTheUrl","ownersFromUrl","Array","isArray","ownersNamesFromUrl","userAddressName","ownerNames","thresholdFromURl","Number","isValidThresholdInTheUrl","isNaN","ownerAddressFields","ownerNameFields"],"mappings":"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","file":"static/js/53.ddc5964b.chunk.js","sourcesContent":["import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select, { SelectProps } from '@material-ui/core/Select'\nimport { FieldMetaState } from 'react-final-form'\nimport { FormControlProps } from '@material-ui/core/FormControl/FormControl'\n\nconst style = {\n  minWidth: '100%',\n}\n\ntype Props = {\n  classes: SelectProps['classes']\n  label: SelectProps['label']\n  renderValue: SelectProps['renderValue']\n  disableError: boolean\n  formControlProps: FormControlProps\n  input: {\n    name: string\n    onChange?: () => void\n    value: string\n    placeholder: string\n    type: string\n  }\n  meta: FieldMetaState<any>\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}: Props): React.ReactElement => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        variant=\"outlined\"\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nconst UnStyledButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 50%;\n  transition: background-color 0.2s ease-in-out;\n  outline-color: transparent;\n  height: 24px;\n  width: 24px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  :hover {\n    background-color: ${({ theme }) => theme.colors.separator};\n  }\n`\ntype Props = {\n  onClick?: () => void\n  children: ReactElement\n  dataTestId?: string\n}\n\nconst ButtonHelper = ({ onClick = () => undefined, children, dataTestId }: Props): React.ReactElement => {\n  return (\n    <UnStyledButton onClick={onClick} type={'button'} data-testid={dataTestId}>\n      {children}\n    </UnStyledButton>\n  )\n}\n\nexport default ButtonHelper\n","export default __webpack_public_path__ + \"static/media/safe-created.ad262168.svg\";","import { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nconst useQuery = (): URLSearchParams => {\n  const { search } = useLocation()\n\n  return useMemo(() => new URLSearchParams(search), [search])\n}\n\nexport { useQuery }\n","export const FIELD_CREATE_CUSTOM_SAFE_NAME = 'customSafeName'\nexport const FIELD_CREATE_SUGGESTED_SAFE_NAME = 'suggestedSafeName'\nexport const FIELD_SAFE_OWNERS_LIST = 'owners'\nexport const FIELD_SAFE_OWNER_ENS_LIST = 'safeOwnerENSList'\nexport const FIELD_NEW_SAFE_THRESHOLD = 'newSafeThreshold'\nexport const FIELD_MAX_OWNER_NUMBER = 'maxOwnerNumber'\nexport const FIELD_NEW_SAFE_PROXY_SALT = 'safeCreationSalt'\nexport const FIELD_NEW_SAFE_GAS_LIMIT = 'gasLimit'\nexport const FIELD_NEW_SAFE_GAS_PRICE = 'gasPrice'\nexport const FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE = 'gasMaxPrioFee'\nexport const FIELD_NEW_SAFE_CREATION_TX_HASH = 'safeCreationTxHash'\n\nexport type OwnerFieldItem = {\n  nameFieldName: string\n  addressFieldName: string\n}\n\nexport type CreateSafeFormValues = {\n  [FIELD_CREATE_SUGGESTED_SAFE_NAME]: string\n  [FIELD_CREATE_CUSTOM_SAFE_NAME]?: string\n  [FIELD_NEW_SAFE_THRESHOLD]: number\n  [FIELD_SAFE_OWNERS_LIST]: Array<OwnerFieldItem>\n  [FIELD_SAFE_OWNER_ENS_LIST]: Record<string, string>\n  [FIELD_MAX_OWNER_NUMBER]: number\n  [FIELD_NEW_SAFE_PROXY_SALT]: number\n  [FIELD_NEW_SAFE_GAS_LIMIT]: number\n  [FIELD_NEW_SAFE_GAS_PRICE]: string\n  [FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE]: number\n  [FIELD_NEW_SAFE_CREATION_TX_HASH]?: string\n}\n\nexport const SAFE_PENDING_CREATION_STORAGE_KEY = 'NEW_SAFE_PENDING_CREATION_STORAGE_KEY'\n","import { ReactElement, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useForm } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport { lg, secondary } from 'src/theme/variables'\nimport Col from 'src/components/layout/Col'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Field from 'src/components/forms/Field'\nimport TextField from 'src/components/forms/TextField'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\nimport {\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_SAFE_OWNER_ENS_LIST,\n} from '../fields/createSafeFields'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { reverseENSLookup } from 'src/logic/wallets/getWeb3'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { CREATE_SAFE_EVENTS } from 'src/utils/events/createLoadSafe'\n\nexport const nameNewSafeStepLabel = 'Name'\n\nfunction NameNewSafeStep(): ReactElement {\n  const [ownersWithENSName, setOwnersWithENSName] = useState<Record<string, string>>({})\n  const provider = useSelector(providerNameSelector)\n\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createNewSafeForm = useForm()\n  const formValues = createNewSafeForm.getState().values\n  const hasCustomSafeName = !!formValues[FIELD_CREATE_CUSTOM_SAFE_NAME]\n\n  useEffect(() => {\n    // On unmount, e.g. go back/next\n    return () => {\n      if (hasCustomSafeName) {\n        trackEvent(CREATE_SAFE_EVENTS.NAME_SAFE)\n      }\n    }\n  }, [hasCustomSafeName])\n\n  useEffect(() => {\n    const getInitialOwnerENSNames = async () => {\n      const formValues = createNewSafeForm.getState().values\n      const owners = formValues[FIELD_SAFE_OWNERS_LIST]\n      const ownersWithENSName = await Promise.all(\n        owners\n          .filter(({ addressFieldName }) => !!formValues[addressFieldName])\n          .map(async ({ addressFieldName }) => {\n            const address = formValues[addressFieldName]\n            const ensName = await reverseENSLookup(address)\n            return {\n              address,\n              name: ensName,\n            }\n          }),\n      )\n\n      const ownersWithENSNameRecord = ownersWithENSName.reduce<Record<string, string>>((acc, { address, name }) => {\n        return {\n          ...acc,\n          [address]: name,\n        }\n      }, {})\n\n      setOwnersWithENSName(ownersWithENSNameRecord)\n    }\n    getInitialOwnerENSNames()\n  }, [createNewSafeForm])\n\n  useEffect(() => {\n    if (ownersWithENSName) {\n      createNewSafeForm.change(FIELD_SAFE_OWNER_ENS_LIST, ownersWithENSName)\n    }\n  }, [ownersWithENSName, createNewSafeForm])\n\n  return (\n    <BlockWithPadding data-testid={'create-safe-name-step'}>\n      <Block margin=\"md\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          You are about to create a new Safe wallet with one or more owners. First, let&apos;s give your new wallet a\n          name. This name is only stored locally and will never be shared with us or any third parties. The new Safe\n          will ONLY be available on <NetworkLabel />\n        </Paragraph>\n      </Block>\n      <label htmlFor={FIELD_CREATE_CUSTOM_SAFE_NAME}>Name of the new Safe</label>\n      <FieldContainer margin=\"lg\">\n        <Col xs={11}>\n          <Field\n            component={TextField}\n            name={FIELD_CREATE_CUSTOM_SAFE_NAME}\n            placeholder={formValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]}\n            label=\"Safe name\"\n            type=\"text\"\n            testId=\"create-safe-name-field\"\n          />\n        </Col>\n      </FieldContainer>\n      <Block margin=\"lg\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          By continuing you consent to the{' '}\n          <Link href=\"https://gnosis-safe.io/terms\" rel=\"noopener noreferrer\" target=\"_blank\">\n            terms of use\n          </Link>\n          {' and '}\n          <Link href=\"https://gnosis-safe.io/privacy\" rel=\"noopener noreferrer\" target=\"_blank\">\n            privacy policy\n          </Link>\n          .\n        </Paragraph>\n      </Block>\n    </BlockWithPadding>\n  )\n}\n\nexport default NameNewSafeStep\n\nconst BlockWithPadding = styled(Block)`\n  padding: ${lg};\n`\n\nconst FieldContainer = styled(Block)`\n  display: flex;\n  max-width: 480px;\n  margin-top: 12px;\n`\n\nconst Link = styled.a`\n  color: ${secondary};\n`\n","import { useEffect, ReactElement, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport CheckCircle from '@material-ui/icons/CheckCircle'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { Icon, Link, Text } from '@gnosis.pm/safe-react-components'\nimport { useForm } from 'react-final-form'\n\nimport Block from 'src/components/layout/Block'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Button from 'src/components/layout/Button'\nimport Field from 'src/components/forms/Field'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport SelectField from 'src/components/forms/SelectField'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\nimport { disabled, extraSmallFontSize, lg, sm, xs, md } from 'src/theme/variables'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport Col from 'src/components/layout/Col'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  ADDRESS_REPEATED_ERROR,\n  composeValidators,\n  minMaxLength,\n  minValue,\n  required,\n  THRESHOLD_ERROR,\n} from 'src/components/forms/validator'\nimport {\n  FIELD_MAX_OWNER_NUMBER,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n} from '../fields/createSafeFields'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport { reverseENSLookup } from 'src/logic/wallets/getWeb3'\nimport { sameString } from 'src/utils/strings'\n\nexport const ownersAndConfirmationsNewSafeStepLabel = 'Owners and Confirmations'\n\nfunction OwnersAndConfirmationsNewSafeStep(): ReactElement {\n  const provider = useSelector(providerNameSelector)\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createSafeForm = useForm()\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\n\n  const createSafeFormValues = createSafeForm.getState().values\n  const formErrors = createSafeForm.getState().errors || {}\n\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n  const ownersWithENSName = createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST]\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\n  const maxOwnerNumber = createSafeFormValues[FIELD_MAX_OWNER_NUMBER]\n\n  function onClickAddNewOwner() {\n    const newEmptyOwner = {\n      nameFieldName: `owner-name-${maxOwnerNumber}`,\n      addressFieldName: `owner-address-${maxOwnerNumber}`,\n    }\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, [...owners, newEmptyOwner])\n    const updatedMaxOwnerNumbers = maxOwnerNumber + 1\n    createSafeForm.change(FIELD_MAX_OWNER_NUMBER, updatedMaxOwnerNumbers)\n  }\n\n  function onClickRemoveOwner({ addressFieldName }) {\n    const ownersUpdated = owners.filter((owner) => owner.addressFieldName !== addressFieldName)\n    createSafeForm.change(FIELD_SAFE_OWNERS_LIST, ownersUpdated)\n    createSafeForm.change(addressFieldName, undefined)\n\n    const updatedMaxOwnerNumbers = maxOwnerNumber - 1\n    createSafeForm.change(FIELD_MAX_OWNER_NUMBER, updatedMaxOwnerNumbers)\n\n    const hasToUpdateThreshold = threshold > ownersUpdated.length\n    if (hasToUpdateThreshold) {\n      createSafeForm.change(FIELD_NEW_SAFE_THRESHOLD, threshold - 1)\n    }\n  }\n\n  const getENSName = async (address: string): Promise<void> => {\n    const ensName = await reverseENSLookup(address)\n    createSafeForm.change(FIELD_SAFE_OWNER_ENS_LIST, { ...ownersWithENSName, [address]: ensName })\n  }\n\n  const handleScan = async (address: string, closeQrModal: () => void, addressFieldName: string): Promise<void> => {\n    const scannedAddress = address.startsWith('ethereum:') ? address.replace('ethereum:', '') : address\n    await getENSName(scannedAddress)\n    createSafeForm.change(addressFieldName, scannedAddress)\n    closeQrModal()\n  }\n\n  return (\n    <>\n      <BlockWithPadding data-testid={'create-safe-owners-confirmation-step'}>\n        <ParagraphWithMargin color=\"primary\" noMargin size=\"lg\">\n          Your Safe will have one or more owners. We have prefilled the first owner with your connected wallet details,\n          but you are free to change this to a different owner.\n        </ParagraphWithMargin>\n        <Paragraph color=\"primary\" size=\"lg\">\n          Add additional owners (e.g. wallets of your teammates) and specify how many of them have to confirm a\n          transaction before it gets executed. In general, the more confirmations required, the more secure your Safe\n          is.\n          <StyledLink\n            href=\"https://help.gnosis-safe.io/en/articles/4772567-what-gnosis-safe- setup-should-i-use\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            title=\"Learn about which Safe setup to use\"\n          >\n            <Text size=\"xl\" as=\"span\" color=\"primary\">\n              Learn about which Safe setup to use\n            </Text>\n            <Icon size=\"sm\" type=\"externalLink\" color=\"primary\" />\n          </StyledLink>\n          . The new Safe will ONLY be available on <NetworkLabel />\n        </Paragraph>\n      </BlockWithPadding>\n      <Hairline />\n      <RowHeader>\n        <Col xs={3}>NAME</Col>\n        <Col xs={7}>ADDRESS</Col>\n      </RowHeader>\n      <Hairline />\n      <Block margin=\"md\" padding=\"md\">\n        <RowHeader>\n          {owners.map(({ nameFieldName, addressFieldName }, i: number) => {\n            const hasOwnerAddressError = formErrors[addressFieldName]\n            const ownerAddress = createSafeFormValues[addressFieldName]\n            const showDeleteIcon = addressFieldName !== 'owner-address-0' // we hide de delete icon for the first owner\n            const ownerName = ownersWithENSName[ownerAddress] || 'Owner Name'\n\n            const isRepeated = (value: string) => {\n              const prevOwners = owners.filter((_: typeof owners[number], index: number) => index !== i)\n              const repeated = prevOwners.some((owner: typeof owners[number]) => {\n                return sameString(createSafeFormValues[owner.addressFieldName], value)\n              })\n              return repeated ? ADDRESS_REPEATED_ERROR : undefined\n            }\n\n            return (\n              <Fragment key={addressFieldName}>\n                <Col xs={3}>\n                  <OwnerNameField\n                    component={TextField}\n                    name={nameFieldName}\n                    placeholder={ownerName}\n                    label=\"Owner Name\"\n                    type=\"text\"\n                    validate={minMaxLength(0, 50)}\n                    testId={nameFieldName}\n                  />\n                </Col>\n                <Col xs={7}>\n                  <AddressInput\n                    fieldMutator={async (address) => {\n                      createSafeForm.change(addressFieldName, address)\n                      const addressName = addressBook[address]?.name\n                      if (addressName) {\n                        createSafeForm.change(nameFieldName, addressName)\n                      } else {\n                        await getENSName(address)\n                      }\n                    }}\n                    inputAdornment={\n                      !hasOwnerAddressError && {\n                        endAdornment: (\n                          <InputAdornment position=\"end\">\n                            <CheckIconAddressAdornment data-testid={`${addressFieldName}-valid-adornment`} />\n                          </InputAdornment>\n                        ),\n                      }\n                    }\n                    name={addressFieldName}\n                    placeholder=\"Owner Address*\"\n                    text=\"Owner Address\"\n                    testId={addressFieldName}\n                    validators={[isRepeated]}\n                  />\n                </Col>\n                <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\n                  <ScanQRWrapper\n                    handleScan={(...args) => handleScan(...args, addressFieldName)}\n                    testId={`${addressFieldName}-scan-QR`}\n                  />\n                </OwnersIconsContainer>\n                {showDeleteIcon && (\n                  <OwnersIconsContainer xs={1} center=\"xs\" middle=\"xs\">\n                    <ButtonHelper\n                      onClick={() => onClickRemoveOwner({ addressFieldName })}\n                      dataTestId={`${addressFieldName}-remove-button`}\n                    >\n                      <Icon size=\"sm\" type=\"delete\" color=\"icon\" tooltip=\"Delete Owner\" />\n                    </ButtonHelper>\n                  </OwnersIconsContainer>\n                )}\n              </Fragment>\n            )\n          })}\n        </RowHeader>\n        <OwnerContainer align=\"center\" grow>\n          <Button color=\"secondary\" data-testid=\"add-new-owner\" onClick={onClickAddNewOwner}>\n            <Paragraph noMargin size=\"lg\">\n              + Add another owner\n            </Paragraph>\n          </Button>\n        </OwnerContainer>\n        <BlockWithPadding>\n          <Block>\n            <Paragraph>Any transaction requires the confirmation of:</Paragraph>\n          </Block>\n          <OwnerContainer align=\"center\" grow>\n            <Col xs={1}>\n              <Field\n                component={SelectField}\n                data-testid=\"threshold-selector-input\"\n                name={FIELD_NEW_SAFE_THRESHOLD}\n                validate={(val) => {\n                  const isValidThreshold = () => {\n                    return !!threshold && threshold <= owners.length ? undefined : THRESHOLD_ERROR\n                  }\n                  return composeValidators(required, minValue(1), isValidThreshold)(val)\n                }}\n              >\n                {owners.map((_, option) => (\n                  <MenuItem\n                    key={`threshold-selector-option-${option}`}\n                    value={option + 1}\n                    data-testid={`threshold-selector-option-${option + 1}`}\n                  >\n                    {option + 1}\n                  </MenuItem>\n                ))}\n              </Field>\n            </Col>\n            <Col xs={11}>\n              <StyledParagraph noMargin>out of {owners.length} owner(s)</StyledParagraph>\n            </Col>\n          </OwnerContainer>\n        </BlockWithPadding>\n      </Block>\n    </>\n  )\n}\n\nexport default OwnersAndConfirmationsNewSafeStep\n\nconst BlockWithPadding = styled(Block)`\n  padding: ${lg};\n`\n\nconst ParagraphWithMargin = styled(Paragraph)`\n  margin-bottom: 12px;\n`\n\nconst StyledLink = styled(Link)`\n  padding: 0 ${xs};\n  & svg {\n    position: relative;\n    top: 1px;\n    left: ${xs};\n    height: 14px;\n    width: 14px;\n  }\n`\nconst RowHeader = styled(Row)`\n  padding: ${sm} ${lg};\n  font-size: ${extraSmallFontSize};\n  color: ${disabled};\n`\n\nconst OwnerNameField = styled(Field)`\n  margin-right: ${md};\n  margin-bottom: ${md};\n`\nconst CheckIconAddressAdornment = styled(CheckCircle)`\n  color: #03ae60;\n  height: 20px;\n`\n\nconst OwnersIconsContainer = styled(Col)`\n  height: 56px;\n  max-width: 32px;\n  cursor: pointer;\n`\n\nconst OwnerContainer = styled(Row)`\n  justify-content: center;\n`\n\nconst StyledParagraph = styled(Paragraph)`\n  padding-left: 12px;\n`\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { estimateGasForDeployingSafe } from 'src/logic/contracts/safeContracts'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\n\nimport { calculateGasPrice, getFeesPerGas, setMaxPrioFeePerGas } from 'src/logic/wallets/ethTransactions'\nimport { userAccountSelector } from '../wallets/store/selectors'\nimport { getNativeCurrency } from 'src/config'\nimport { isMaxFeeParam } from 'src/logic/safe/transactions/gas'\n\ntype EstimateSafeCreationGasProps = {\n  addresses: string[]\n  numOwners: number\n  safeCreationSalt: number\n}\n\ntype SafeCreationEstimationResult = {\n  gasEstimation: number // Amount of gas needed for execute or approve the transaction\n  gasCostFormatted: string // Cost of gas in format '< | > 100'\n  gasLimit: number // Minimum gas requited to execute the Tx\n  gasPrice: string\n  gasMaxPrioFee: number\n  gasMaxPrioFeeFormatted: string\n}\n\nconst estimateGas = async (\n  userAccount: string,\n  numOwners: number,\n  safeCreationSalt: number,\n  addresses: string[],\n): Promise<SafeCreationEstimationResult> => {\n  const [gasEstimation, gasPrice, feesPerGas] = await Promise.all([\n    estimateGasForDeployingSafe(addresses, numOwners, userAccount, safeCreationSalt),\n    calculateGasPrice(),\n    isMaxFeeParam() ? getFeesPerGas() : { maxPriorityFeePerGas: 0, maxFeePerGas: 0 },\n  ])\n\n  const estimatedGasCosts = gasEstimation * parseInt(gasPrice, 10)\n  const maxPrioFeePerGas = setMaxPrioFeePerGas(feesPerGas.maxPriorityFeePerGas, parseInt(gasPrice, 10))\n  const nativeCurrency = getNativeCurrency()\n  const gasCost = fromTokenUnit(estimatedGasCosts, nativeCurrency.decimals)\n  const gasCostFormatted = formatAmount(gasCost)\n\n  return {\n    gasPrice,\n    gasEstimation,\n    gasCostFormatted,\n    gasLimit: gasEstimation,\n    gasMaxPrioFee: maxPrioFeePerGas,\n    gasMaxPrioFeeFormatted: formatAmount(maxPrioFeePerGas.toString()),\n  }\n}\n\nexport const useEstimateSafeCreationGas = ({\n  addresses,\n  numOwners,\n  safeCreationSalt,\n}: EstimateSafeCreationGasProps): SafeCreationEstimationResult => {\n  const [gasEstimation, setGasEstimation] = useState<SafeCreationEstimationResult>({\n    gasEstimation: 0,\n    gasCostFormatted: '> 0.001',\n    gasLimit: 0,\n    gasPrice: '0',\n    gasMaxPrioFee: 0,\n    gasMaxPrioFeeFormatted: '0',\n  })\n  const userAccount = useSelector(userAccountSelector)\n  // Serialize the addresses array so that it doesn't trigger the effect due to the dependencies\n  const addressesSerialized = JSON.stringify(addresses)\n\n  useEffect(() => {\n    const addressesList = JSON.parse(addressesSerialized)\n    if (!addressesList.length || !numOwners || !userAccount) {\n      return\n    }\n\n    estimateGas(userAccount, numOwners, safeCreationSalt, addressesList)?.then(setGasEstimation)\n  }, [numOwners, safeCreationSalt, addressesSerialized, userAccount])\n\n  return gasEstimation\n}\n","import React, { ReactElement, useEffect } from 'react'\nimport { useForm } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport TableContainer from '@material-ui/core/TableContainer'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { background, border, lg, sm } from 'src/theme/variables'\nimport {\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_NEW_SAFE_GAS_LIMIT,\n  FIELD_NEW_SAFE_GAS_PRICE,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE,\n} from '../fields/createSafeFields'\nimport { getExplorerInfo, getNativeCurrency } from 'src/config'\nimport { useEstimateSafeCreationGas } from 'src/logic/hooks/useEstimateSafeCreationGas'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { useStepper } from 'src/components/Stepper/stepperContext'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nexport const reviewNewSafeStepLabel = 'Review'\n\nfunction ReviewNewSafeStep(): ReactElement | null {\n  const provider = useSelector(providerNameSelector)\n\n  const { setCurrentStep } = useStepper()\n\n  useEffect(() => {\n    if (!provider) {\n      setCurrentStep(0)\n    }\n  }, [provider, setCurrentStep])\n\n  const createSafeForm = useForm()\n  const createSafeFormValues = createSafeForm.getState().values\n\n  const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\n  const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\n  const threshold = createSafeFormValues[FIELD_NEW_SAFE_THRESHOLD]\n  const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n  const ownersWithENSName = createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST]\n  const numberOfOwners = owners.length\n  const safeCreationSalt = createSafeFormValues[FIELD_NEW_SAFE_PROXY_SALT]\n  const ownerAddresses = owners.map(({ addressFieldName }) => createSafeFormValues[addressFieldName])\n\n  const { gasCostFormatted, gasLimit, gasPrice, gasMaxPrioFee } = useEstimateSafeCreationGas({\n    addresses: ownerAddresses,\n    numOwners: numberOfOwners,\n    safeCreationSalt,\n  })\n  const nativeCurrency = getNativeCurrency()\n\n  useEffect(() => {\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_LIMIT, gasLimit)\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_PRICE, gasPrice)\n    createSafeForm.change(FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE, gasMaxPrioFee)\n  }, [gasLimit, gasPrice, createSafeForm, gasMaxPrioFee])\n\n  return (\n    <Row data-testid={'create-safe-review-step'}>\n      <Col xs={4} layout=\"column\">\n        <DetailsContainer>\n          <Block margin=\"lg\">\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\n              Details\n            </Paragraph>\n          </Block>\n          <Block margin=\"lg\">\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\n              Name of new Safe\n            </Paragraph>\n            <SafeNameParagraph\n              color=\"primary\"\n              noMargin\n              size=\"md\"\n              weight=\"bolder\"\n              data-testid=\"create-safe-review-safe-name\"\n            >\n              {safeName}\n            </SafeNameParagraph>\n          </Block>\n          <Block margin=\"lg\">\n            <Paragraph color=\"disabled\" noMargin size=\"sm\">\n              Any transaction requires the confirmation of:\n            </Paragraph>\n            <Paragraph\n              color=\"primary\"\n              noMargin\n              size=\"md\"\n              weight=\"bolder\"\n              data-testid={'create-safe-review-threshold-label'}\n            >\n              {`${threshold} out of ${numberOfOwners} owners`}\n            </Paragraph>\n          </Block>\n        </DetailsContainer>\n      </Col>\n      <Col layout=\"column\" xs={8}>\n        <TableContainer>\n          <TitleContainer>\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\n              {`${numberOfOwners} Safe owners`}\n            </Paragraph>\n          </TitleContainer>\n          <Hairline />\n          {owners.map(({ nameFieldName, addressFieldName }) => {\n            const ownerAddress = createSafeFormValues[addressFieldName]\n            const ownerName = createSafeFormValues[nameFieldName] || ownersWithENSName[ownerAddress]\n            return (\n              <React.Fragment key={`owner-${addressFieldName}`}>\n                <OwnersAddressesContainer>\n                  <Col align=\"center\" xs={12} data-testid={`create-safe-owner-details-${ownerAddress}`}>\n                    <PrefixedEthHashInfo\n                      hash={ownerAddress}\n                      name={ownerName}\n                      showAvatar\n                      showCopyBtn\n                      explorerUrl={getExplorerInfo(ownerAddress)}\n                    />\n                  </Col>\n                </OwnersAddressesContainer>\n                <Hairline />\n              </React.Fragment>\n            )\n          })}\n        </TableContainer>\n      </Col>\n      <DescriptionContainer align=\"center\">\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          You&apos;re about to create a new Safe on <NetworkLabel /> and will have to confirm a transaction with your\n          currently connected wallet. The creation will cost approximately {gasCostFormatted} {nativeCurrency.symbol}.\n          The exact amount will be determined by your wallet.\n        </Paragraph>\n      </DescriptionContainer>\n    </Row>\n  )\n}\n\nexport default ReviewNewSafeStep\n\nconst DetailsContainer = styled(Block)`\n  padding: ${lg};\n  border-right: solid 1px ${border};\n  height: 100%;\n`\n\nconst SafeNameParagraph = styled(Paragraph)`\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\nconst TitleContainer = styled(Block)`\n  padding: ${lg};\n`\n\nconst OwnersAddressesContainer = styled(Row)`\n  align-items: center;\n  min-width: fit-content;\n  padding: ${sm};\n  padding-left: ${lg};\n`\nconst DescriptionContainer = styled(Row)`\n  background-color: ${background};\n  padding: ${lg};\n  text-align: center;\n`\n","import { Transaction, TransactionReceipt } from 'web3-core'\n\nimport { getWeb3ReadOnly } from 'src/logic/wallets/getWeb3'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { sameString } from 'src/utils/strings'\nimport { CodedException, Errors } from 'src/logic/exceptions/CodedException'\n\ntype TxMonitorProps = {\n  sender: string\n  hash: string\n  data: string\n  nonce?: number\n  gasPrice?: string\n}\n\ntype TxMonitorOptions = {\n  delay?: number\n  maxRetries?: number\n}\n\nconst MAX_RETRIES = 720\nconst DEFAULT_DELAY = 5000\n\nasync function findSpeedupTx({ sender, hash, nonce, data }: TxMonitorProps): Promise<Transaction | undefined> {\n  const web3 = getWeb3ReadOnly()\n  const latestBlock = await web3.eth.getBlock('latest', true)\n\n  const replacementTransaction = latestBlock.transactions.find((transaction) => {\n    // TODO: use gasPrice, timestamp or another better way to differentiate\n    return (\n      sameAddress(transaction.from, sender) &&\n      transaction.nonce === nonce &&\n      !sameString(transaction.hash, hash) &&\n      // if `data` differs, then it's a replacement tx, not a speedup\n      sameString(transaction.input, data)\n    )\n  })\n\n  return replacementTransaction\n}\n\n/**\n * Recursively inspects a pending tx. Until it's found, and returns the mined tx receipt\n *\n * @param {object} txParams\n * @param {string} txParams.sender\n * @param {string} txParams.hash\n * @param {string} txParams.data\n * @param {number | undefined} txParams.nonce\n * @param {string | undefined} txParams.gasPrice\n * @param {object} options\n * @param {number} options.delay\n * @returns {Promise<TransactionReceipt>}\n */\nexport const txMonitor = (\n  { sender, hash, data, nonce, gasPrice }: TxMonitorProps,\n  options?: TxMonitorOptions,\n  tries = 0,\n): Promise<TransactionReceipt> => {\n  const web3 = getWeb3ReadOnly()\n  return new Promise<TransactionReceipt>((resolve, reject) => {\n    const { maxRetries = MAX_RETRIES } = options || {}\n    if (tries > maxRetries) {\n      reject(new CodedException(Errors._805, 'max retries reached'))\n      return\n    }\n\n    const monitorFn = async (): Promise<unknown> => {\n      // Case 1: this block is accessed for the first time, no nonce\n      if (nonce == null || gasPrice == null) {\n        let params: TxMonitorProps = { sender, hash, data }\n        try {\n          // Find the nonce for the current tx\n          const transaction = await web3.eth.getTransaction(hash)\n          if (transaction) {\n            params = { ...params, nonce: transaction.nonce, gasPrice: transaction.gasPrice }\n          }\n        } catch (e) {\n          // ignore error\n        }\n\n        return txMonitor(params, options, tries + 1)\n          .then(resolve)\n          .catch(reject)\n      }\n\n      // Case 2: the nonce exists, try to get the receipt for the original tx\n      try {\n        const firstTxReceipt = await web3.eth.getTransactionReceipt(hash)\n        if (firstTxReceipt) {\n          return resolve(firstTxReceipt)\n        }\n      } catch (e) {\n        // proceed to case 3\n      }\n\n      // Case 3: original tx not found, try to find a sped-up tx\n      try {\n        const replacementTx = await findSpeedupTx({ sender, hash, nonce, data })\n\n        if (replacementTx) {\n          const replacementReceipt = await web3.eth.getTransactionReceipt(replacementTx.hash)\n\n          // goal achieved\n          if (replacementReceipt) {\n            return resolve(replacementReceipt)\n          }\n\n          // tx exists but no receipt yet, it's pending\n          return txMonitor(\n            {\n              sender,\n              nonce,\n              hash: replacementTx.hash,\n              data: replacementTx.input,\n              gasPrice: replacementTx.gasPrice,\n            },\n            options,\n            tries + 1,\n          )\n            .then(resolve)\n            .catch(reject)\n        }\n      } catch (e) {\n        // ignore error\n      }\n\n      // Neither the original nor a replacement transactions were found, try again\n      txMonitor({ sender, hash, data, nonce, gasPrice }, options, tries + 1)\n        .then(resolve)\n        .catch(reject)\n    }\n\n    setTimeout(monitorFn, options?.delay ?? DEFAULT_DELAY)\n  })\n}\n","import { ReactElement, SyntheticEvent } from 'react'\nimport styled from 'styled-components'\nimport { Loader } from '@gnosis.pm/safe-react-components'\n\nimport Button from 'src/components/layout/Button'\nimport Hairline from 'src/components/layout/Hairline'\nimport Track from 'src/components/Track'\nimport { CREATE_SAFE_EVENTS } from 'src/utils/events/createLoadSafe'\nimport Paragraph from 'src/components/layout/Paragraph'\n\nconst ButtonWithMargin = styled(Button)`\n  margin-right: 16px;\n`\nconst FooterContainer = styled.div`\n  width: 100%;\n  height: 76px;\n\n  button {\n    margin-top: 24px;\n  }\n`\n\nconst LoaderText = styled.span`\n  margin-left: 10px;\n`\n\nexport const GenericFooter = (): ReactElement => {\n  return (\n    <Paragraph size=\"lg\" color=\"primary\">\n      This process should take a couple of minutes.\n    </Paragraph>\n  )\n}\n\nexport const ContinueFooter = ({\n  continueButtonDisabled,\n  onContinue,\n}: {\n  continueButtonDisabled: boolean\n  onContinue: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <Track {...CREATE_SAFE_EVENTS.GET_STARTED}>\n      <Button\n        color=\"primary\"\n        disabled={continueButtonDisabled}\n        onClick={onContinue}\n        variant=\"contained\"\n        data-testid=\"continue-btn\"\n      >\n        {continueButtonDisabled ? (\n          <>\n            <Loader size=\"xs\" color=\"secondaryLight\" /> <LoaderText>Loading your Safe</LoaderText>\n          </>\n        ) : (\n          <>Get started</>\n        )}\n      </Button>\n    </Track>\n  </FooterContainer>\n)\n\nexport const ErrorFooter = ({\n  onCancel,\n  onRetry,\n}: {\n  onCancel: (event: SyntheticEvent) => void\n  onRetry: (event: SyntheticEvent) => void\n}): ReactElement => (\n  <FooterContainer>\n    <Hairline />\n    <ButtonWithMargin onClick={onCancel} variant=\"contained\">\n      Cancel\n    </ButtonWithMargin>\n    <Button color=\"primary\" onClick={onRetry} variant=\"contained\">\n      Retry\n    </Button>\n  </FooterContainer>\n)\n","import { ContinueFooter, GenericFooter } from './components/Footer'\n\nexport const isConfirmationStep = (stepIndex?: number): boolean => stepIndex === 0\n\nexport const steps = [\n  {\n    id: '1',\n    label: 'Waiting for transaction confirmation',\n    description: undefined,\n    instruction: 'Please confirm the Safe creation in your wallet',\n    footerComponent: null,\n  },\n  {\n    id: '2',\n    label: 'Transaction submitted',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '3',\n    label: 'Validating transaction',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '4',\n    label: 'Deploying smart contract',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '5',\n    label: 'Generating your Safe',\n    description: undefined,\n    instruction: 'Please do not leave the page',\n    footerComponent: GenericFooter,\n  },\n  {\n    id: '6',\n    label: 'Success',\n    description: 'Your Safe was created successfully',\n    instruction: undefined,\n    footerComponent: ContinueFooter,\n  },\n]\n","export default __webpack_public_path__ + \"static/media/vault-error.17985c86.svg\";","export default __webpack_public_path__ + \"static/media/creation-process.b0164935.gif\";","import abiDecoder from 'abi-decoder'\nimport { getProxyFactoryDeployment } from '@gnosis.pm/safe-deployments'\nimport { Log } from 'web3-core'\nimport { checksumAddress } from 'src/utils/checksumAddress'\n\nimport { LATEST_SAFE_VERSION } from 'src/utils/constants'\n\n// Init abiDecoder with ProxyCreation ABI\nabiDecoder.addABI(\n  getProxyFactoryDeployment({\n    version: LATEST_SAFE_VERSION,\n  })?.abi,\n)\n\nexport const getNewSafeAddressFromLogs = (logs: Log[]): string => {\n  // We find the ProxyCreation event in the logs\n  const proxyCreationEvent = abiDecoder.decodeLogs(logs).find(({ name }) => name === 'ProxyCreation')\n\n  // We extract the proxy creation information from the event parameters\n  const proxyInformation = proxyCreationEvent?.events?.find(({ name }) => name === 'proxy')\n\n  return checksumAddress(proxyInformation?.value || '')\n}\n","import { Loader, Stepper } from '@gnosis.pm/safe-react-components'\nimport { useEffect, useState, useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ErrorFooter } from 'src/routes/opening/components/Footer'\nimport { isConfirmationStep, steps } from './steps'\n\nimport Heading from 'src/components/layout/Heading'\nimport Img from 'src/components/layout/Img'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { EMPTY_DATA } from 'src/logic/wallets/ethTransactions'\nimport { getWeb3ReadOnly, isTxPendingError } from 'src/logic/wallets/getWeb3'\nimport { background, connected, fontColor } from 'src/theme/variables'\nimport { providerNameSelector } from 'src/logic/wallets/store/selectors'\n\nimport SuccessSvg from 'src/assets/icons/safe-created.svg'\nimport VaultErrorSvg from './assets/vault-error.svg'\nimport VaultLoading from './assets/creation-process.gif'\nimport { TransactionReceipt } from 'web3-core'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport { showNotification } from 'src/logic/notifications/store/notifications'\nimport { getNewSafeAddressFromLogs } from 'src/routes/opening/utils/getSafeAddressFromLogs'\nimport { getExplorerInfo } from 'src/config'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { CREATE_SAFE_EVENTS } from 'src/utils/events/createLoadSafe'\nimport { isWalletRejection } from 'src/logic/wallets/errors'\n\nexport const SafeDeployment = ({\n  creationTxHash,\n  onCancel,\n  onRetry,\n  onSuccess,\n  submittedPromise,\n}: Props): React.ReactElement => {\n  const [loading, setLoading] = useState(true)\n  const [stepIndex, setStepIndex] = useState(0)\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState('')\n  const [createdSafeAddress, setCreatedSafeAddress] = useState('')\n\n  const [error, setError] = useState(false)\n  const [intervalStarted, setIntervalStarted] = useState(false)\n  const [waitingSafeDeployed, setWaitingSafeDeployed] = useState(false)\n  const [continueButtonDisabled, setContinueButtonDisabled] = useState(false)\n  const provider = useSelector(providerNameSelector)\n  const dispatch = useDispatch()\n\n  const confirmationStep = isConfirmationStep(stepIndex)\n\n  const navigateToSafe = () => {\n    setContinueButtonDisabled(true)\n    onSuccess(createdSafeAddress)\n  }\n\n  const showSnackbarError = useCallback(\n    (err: Error) => {\n      if (isTxPendingError(err)) {\n        dispatch(showNotification(NOTIFICATIONS.TX_PENDING_MSG))\n      } else {\n        dispatch(\n          showNotification({\n            ...NOTIFICATIONS.CREATE_SAFE_FAILED_MSG,\n            message: `${NOTIFICATIONS.CREATE_SAFE_FAILED_MSG.message} – ${err.message}`,\n          }),\n        )\n      }\n    },\n    [dispatch],\n  )\n\n  const onError = useCallback(\n    (error: Error) => {\n      setIntervalStarted(false)\n      setWaitingSafeDeployed(false)\n      setContinueButtonDisabled(false)\n      setError(true)\n      logError(Errors._800, error.message)\n      showSnackbarError(error)\n    },\n    [setIntervalStarted, setWaitingSafeDeployed, setContinueButtonDisabled, setError, showSnackbarError],\n  )\n\n  // discard click event value\n  const onRetryTx = () => {\n    setStepIndex(0)\n    setError(false)\n    onRetry()\n  }\n\n  const getImage = () => {\n    if (error) {\n      return VaultErrorSvg\n    }\n\n    if (stepIndex <= 4) {\n      return VaultLoading\n    }\n\n    return SuccessSvg\n  }\n\n  useEffect(() => {\n    if (provider) {\n      setLoading(false)\n    }\n  }, [provider])\n\n  // creating safe from form submission\n  useEffect(() => {\n    if (submittedPromise === undefined) {\n      return\n    }\n\n    const handlePromise = async () => {\n      setStepIndex(0)\n      try {\n        const receipt = await submittedPromise\n        setSafeCreationTxHash(receipt.transactionHash)\n        setStepIndex(1)\n        setIntervalStarted(true)\n      } catch (err) {\n        if (isWalletRejection(err)) {\n          trackEvent(CREATE_SAFE_EVENTS.REJECT_CREATE_SAFE)\n        }\n        onError(err)\n      }\n    }\n\n    handlePromise()\n  }, [submittedPromise, onError])\n\n  // recovering safe creation from txHash\n  useEffect(() => {\n    if (creationTxHash === undefined) {\n      return\n    }\n    setSafeCreationTxHash(creationTxHash)\n    setStepIndex(1)\n    setIntervalStarted(true)\n  }, [creationTxHash])\n\n  useEffect(() => {\n    if (!intervalStarted) {\n      return\n    }\n\n    const isTxMined = async (txHash: string) => {\n      const web3 = getWeb3ReadOnly()\n\n      const txResult = await web3.eth.getTransaction(txHash)\n      if (txResult?.blockNumber == null) {\n        return false\n      }\n\n      const receipt = await web3.eth.getTransactionReceipt(txHash)\n      if (!receipt?.status) {\n        throw Error('TX status reverted')\n      }\n\n      return true\n    }\n\n    const interval = setInterval(async () => {\n      if (stepIndex < 4) {\n        setStepIndex(stepIndex + 1)\n      }\n\n      // safe created using the form\n      if (submittedPromise !== undefined) {\n        submittedPromise.then(() => {\n          setStepIndex(4)\n          setWaitingSafeDeployed(true)\n          setIntervalStarted(false)\n        })\n      }\n\n      // safe pending creation recovered from storage\n      if (creationTxHash !== undefined) {\n        try {\n          const res = await isTxMined(creationTxHash)\n          if (res) {\n            setStepIndex(4)\n            setWaitingSafeDeployed(true)\n            setIntervalStarted(false)\n          }\n        } catch (error) {\n          onError(error)\n        }\n      }\n    }, 3000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [creationTxHash, submittedPromise, intervalStarted, stepIndex, error, onError])\n\n  useEffect(() => {\n    let interval\n\n    const awaitUntilSafeIsDeployed = async (safeCreationTxHash: string) => {\n      try {\n        const web3 = getWeb3ReadOnly()\n        const receipt = await web3.eth.getTransactionReceipt(safeCreationTxHash)\n\n        let safeAddress = ''\n\n        if (receipt?.events) {\n          safeAddress = receipt.events.ProxyCreation.returnValues.proxy\n        } else {\n          // If the node doesn't return the events we try to fetch it from logs\n          safeAddress = getNewSafeAddressFromLogs(receipt?.logs || [])\n        }\n\n        setCreatedSafeAddress(safeAddress)\n\n        interval = setInterval(async () => {\n          let code = EMPTY_DATA\n          try {\n            code = await web3.eth.getCode(safeAddress)\n          } catch (err) {\n            console.log(err)\n          }\n          if (code !== EMPTY_DATA) {\n            setStepIndex(5)\n            setError(false)\n          }\n        }, 1000)\n      } catch (error) {\n        onError(error)\n      }\n    }\n\n    if (!waitingSafeDeployed) {\n      return\n    }\n\n    if (typeof safeCreationTxHash === 'string') {\n      awaitUntilSafeIsDeployed(safeCreationTxHash)\n    }\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [safeCreationTxHash, waitingSafeDeployed, onError])\n\n  if (loading || stepIndex === undefined) {\n    return (\n      <LoaderContainer data-testid={'create-safe-loader'}>\n        <Loader size=\"md\" />\n      </LoaderContainer>\n    )\n  }\n\n  let FooterComponent\n  if (error) {\n    FooterComponent = ErrorFooter\n  } else if (steps[stepIndex].footerComponent) {\n    FooterComponent = steps[stepIndex].footerComponent\n  }\n\n  return (\n    <Wrapper>\n      <Title tag=\"h2\" testId=\"safe-creation-process-title\">\n        Safe creation process\n      </Title>\n      <Nav>\n        <Stepper activeStepIndex={stepIndex} error={error} orientation=\"vertical\" steps={steps} />\n      </Nav>\n      <Body>\n        <BodyImage>\n          <Img alt=\"Vault\" height={92} src={getImage()} />\n        </BodyImage>\n\n        <BodyDescription>\n          <CardTitle>{steps[stepIndex].description || steps[stepIndex].label}</CardTitle>\n        </BodyDescription>\n\n        {steps[stepIndex].instruction && (\n          <BodyInstruction>\n            <FullParagraph\n              color=\"primary\"\n              inversecolors={confirmationStep.toString()}\n              noMargin\n              size=\"md\"\n              $stepIndex={stepIndex}\n            >\n              {error ? 'You can Cancel or Retry the Safe creation process.' : steps[stepIndex].instruction}\n            </FullParagraph>\n          </BodyInstruction>\n        )}\n\n        {steps[stepIndex].instruction && creationTxHash ? (\n          <TxText>\n            Your Safe creation transaction:\n            <br />\n            <Center>\n              <PrefixedEthHashInfo hash={creationTxHash} showCopyBtn explorerUrl={getExplorerInfo(creationTxHash)} />\n            </Center>\n          </TxText>\n        ) : null}\n\n        <BodyFooter>\n          {FooterComponent ? (\n            <FooterComponent\n              continueButtonDisabled={continueButtonDisabled}\n              onCancel={onCancel}\n              onClick={onRetryTx}\n              onContinue={navigateToSafe}\n              onRetry={onRetryTx}\n              safeCreationTxHash={safeCreationTxHash}\n            />\n          ) : null}\n        </BodyFooter>\n      </Body>\n    </Wrapper>\n  )\n}\n\ntype Props = {\n  creationTxHash?: string\n  submittedPromise?: Promise<TransactionReceipt>\n  onRetry: () => void\n  onSuccess: (createdSafeAddress: string) => void\n  onCancel: () => void\n}\n\ninterface FullParagraphProps {\n  inversecolors: string\n  $stepIndex: number\n}\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 250px auto;\n  grid-template-rows: 43px auto;\n  margin-bottom: 30px;\n`\n\nconst Title = styled(Heading)`\n  grid-column: 1/3;\n  grid-row: 1;\n  margin: 7px 0 0 0 !important;\n`\n\nconst Nav = styled.div`\n  grid-column: 1;\n  grid-row: 2;\n`\n\nconst Body = styled.div`\n  grid-column: 2;\n  grid-row: 2;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.white};\n  border-radius: 5px;\n  min-width: 700px;\n  padding-top: 70px;\n  box-shadow: 0 0 10px 0 rgba(33, 48, 77, 0.1);\n\n  display: grid;\n  grid-template-rows: 100px 50px 110px 1fr;\n`\n\nconst CardTitle = styled.div`\n  font-size: 20px;\n  padding-top: 10px;\n`\n\nconst FullParagraph = styled(Paragraph)<FullParagraphProps>`\n  background-color: ${({ $stepIndex }) => ($stepIndex === 0 ? connected : background)};\n  color: ${({ theme, $stepIndex }) => ($stepIndex === 0 ? theme.colors.white : fontColor)};\n  padding: 28px;\n  font-size: 20px;\n  margin-bottom: 16px;\n  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;\n`\n\nconst Center = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  z-index: 2;\n  margin-bottom: -10px;\n`\n\nconst BodyImage = styled.div`\n  grid-row: 1;\n`\nconst BodyDescription = styled.div`\n  grid-row: 2;\n`\nconst BodyInstruction = styled.div`\n  grid-row: 3;\n  margin: 27px 0;\n`\n\nconst TxText = styled.div`\n  grid-row: 4;\n  margin: 3em 0;\n  font-size: 0.8em;\n`\n\nconst BodyFooter = styled.div`\n  grid-row: 5;\n\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n`\n","import { ReactElement, useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { backOff } from 'exponential-backoff'\nimport { TransactionReceipt } from 'web3-core'\nimport { GenericModal } from '@gnosis.pm/safe-react-components'\nimport styled from 'styled-components'\nimport { SafeInfo } from '@gnosis.pm/safe-react-gateway-sdk'\n\nimport { getSafeDeploymentTransaction } from 'src/logic/contracts/safeContracts'\nimport { txMonitor } from 'src/logic/safe/transactions/txMonitor'\nimport { userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport { SafeDeployment } from 'src/routes/opening'\nimport { loadFromStorage, removeFromStorage, saveToStorage } from 'src/utils/storage'\nimport { addOrUpdateSafe } from 'src/logic/safe/store/actions/addOrUpdateSafe'\nimport {\n  SAFE_PENDING_CREATION_STORAGE_KEY,\n  CreateSafeFormValues,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNERS_LIST,\n  FIELD_NEW_SAFE_GAS_LIMIT,\n  FIELD_NEW_SAFE_CREATION_TX_HASH,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_GAS_PRICE,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE,\n} from '../fields/createSafeFields'\nimport { getSafeInfo } from 'src/logic/safe/utils/safeInformation'\nimport { buildSafe } from 'src/logic/safe/store/actions/fetchSafe'\nimport { addressBookSafeLoad } from 'src/logic/addressBook/store/actions'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport Button from 'src/components/layout/Button'\nimport { boldFont } from 'src/theme/variables'\nimport { WELCOME_ROUTE, history, generateSafeRoute, SAFE_ROUTES } from 'src/routes/routes'\nimport { getExplorerInfo, getShortName } from 'src/config'\nimport { createSendParams } from 'src/logic/safe/transactions/gas'\nimport { currentChainId } from 'src/logic/config/store/selectors'\nimport PrefixedEthHashInfo from 'src/components/PrefixedEthHashInfo'\nimport { trackEvent } from 'src/utils/googleTagManager'\nimport { CREATE_SAFE_EVENTS } from 'src/utils/events/createLoadSafe'\nimport Track from 'src/components/Track'\nimport { didTxRevert } from 'src/logic/safe/store/actions/transactions/utils/transactionHelpers'\nimport { useQuery } from 'src/logic/hooks/useQuery'\nimport { ADDRESSED_ROUTE } from 'src/routes/routes'\nimport { SAFE_APPS_EVENTS } from 'src/utils/events/safeApps'\n\nexport const InlinePrefixedEthHashInfo = styled(PrefixedEthHashInfo)`\n  display: inline-flex;\n`\n\nconst ButtonContainer = styled.div`\n  text-align: center;\n`\n\nconst EmphasisLabel = styled.span`\n  font-weight: ${boldFont};\n`\n\ntype ModalDataType = {\n  safeAddress: string\n  safeName?: string\n  safeCreationTxHash?: string\n}\n\nconst goToWelcomePage = () => {\n  history.push(WELCOME_ROUTE)\n}\n\nconst sleep = (ms: number): Promise<void> => new Promise((resolve) => setTimeout(resolve, ms))\n\n/**\n * Parse MM error message, as a workaround for a bug in web3.js that doesn't do it correctly.\n * It returns a formatting error like this:\n *\n * `[ethjs-query] while formatting outputs from RPC '{\"value\":{\"code\":-32000,\"message\":\"intrinsic gas too low\"}}'`\n */\nconst parseError = (err: Error): Error => {\n  const prefix = '[ethjs-query] while formatting outputs from RPC '\n\n  if (!err.message.startsWith(prefix)) return err\n\n  const json = err.message.split(prefix).pop() || ''\n  let actualMessage = ''\n  try {\n    actualMessage = JSON.parse(json.slice(1, -1)).value.message\n  } catch (e) {\n    actualMessage = ''\n  }\n\n  return actualMessage ? new Error(actualMessage) : err\n}\n\nconst getSavedSafeCreation = (): CreateSafeFormValues | void => {\n  return loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY)\n}\n\nconst loadSavedDataOrLeave = (): CreateSafeFormValues | void => {\n  return getSavedSafeCreation() || goToWelcomePage()\n}\n\nconst createNewSafe = (userAddress: string, onHash: (hash: string) => void): Promise<TransactionReceipt> => {\n  if (!userAddress) {\n    return Promise.reject(new Error('No user address'))\n  }\n\n  const safeCreationFormValues = loadSavedDataOrLeave()\n\n  if (!safeCreationFormValues) {\n    return Promise.reject(new Error('No saved Safe creation'))\n  }\n\n  return new Promise((resolve, reject) => {\n    const confirmations = safeCreationFormValues[FIELD_NEW_SAFE_THRESHOLD]\n    const ownerFields = safeCreationFormValues[FIELD_SAFE_OWNERS_LIST]\n    const ownerAddresses = ownerFields.map(({ addressFieldName }) => safeCreationFormValues[addressFieldName])\n    const gasLimit = safeCreationFormValues[FIELD_NEW_SAFE_GAS_LIMIT]\n    const gasPrice = safeCreationFormValues[FIELD_NEW_SAFE_GAS_PRICE]\n    const gasMaxPrioFee = safeCreationFormValues[FIELD_NEW_SAFE_GAS_MAX_PRIO_FEE]\n    const safeCreationSalt = Date.now() // never retry with the same salt\n    const deploymentTx = getSafeDeploymentTransaction(ownerAddresses, confirmations, safeCreationSalt)\n\n    const sendParams = createSendParams(userAddress, {\n      ethGasLimit: gasLimit.toString(),\n      ethGasPriceInGWei: gasPrice,\n      ethMaxPrioFeeInGWei: gasMaxPrioFee.toString(),\n    })\n\n    deploymentTx\n      .send(sendParams)\n      .once('transactionHash', (txHash) => {\n        trackEvent(CREATE_SAFE_EVENTS.SUBMIT_CREATE_SAFE)\n        onHash(txHash)\n\n        saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, {\n          ...safeCreationFormValues,\n          [FIELD_NEW_SAFE_PROXY_SALT]: safeCreationSalt,\n          [FIELD_NEW_SAFE_CREATION_TX_HASH]: txHash,\n        })\n\n        // Monitor the latest block to find a potential speed-up tx\n        txMonitor({ sender: userAddress, hash: txHash, data: deploymentTx.encodeABI() })\n          .then((txReceipt) => {\n            // txMonitor returns the txReceipt from `getTransactionReceipt` which doesn't throw\n            // if it was reverted. We must check the status of the receipt manually.\n            if (didTxRevert(txReceipt)) {\n              reject(new Error('Sped-up tx reverted'))\n              return\n            }\n\n            console.log('Sped-up tx mined:', txReceipt)\n            trackEvent(CREATE_SAFE_EVENTS.CREATED_SAFE)\n            resolve(txReceipt)\n          })\n          .catch((error) => {\n            reject(parseError(error))\n          })\n      })\n      .then((txReceipt) => {\n        console.log('Original tx mined:', txReceipt)\n        trackEvent(CREATE_SAFE_EVENTS.CREATED_SAFE)\n        resolve(txReceipt)\n      })\n      .catch((error) => {\n        // `deploymentTx` will throw if the transaction was reverted\n        reject(parseError(error))\n      })\n  })\n}\n\nconst pollSafeInfo = async (safeAddress: string): Promise<SafeInfo> => {\n  // exponential delay between attempts for around 4 min\n  return await backOff(() => getSafeInfo(safeAddress), {\n    startingDelay: 750,\n    maxDelay: 20000,\n    numOfAttempts: 19,\n    retry: (e) => {\n      console.info('waiting for client-gateway to provide safe information', e)\n      return true\n    },\n  })\n}\n\nconst APP_URL_QUERY_PARAM = 'appUrl'\n\nfunction SafeCreationProcess(): ReactElement {\n  const [safeCreationTxHash, setSafeCreationTxHash] = useState<string | undefined>()\n  const [creationTxPromise, setCreationTxPromise] = useState<Promise<TransactionReceipt>>()\n\n  const dispatch = useDispatch()\n  const userAddress = useSelector(userAccountSelector)\n  const chainId = useSelector(currentChainId)\n  const query = useQuery()\n  const redirect = query.get('redirect')\n\n  const [showModal, setShowModal] = useState(false)\n  const [modalData, setModalData] = useState<ModalDataType>({ safeAddress: '' })\n  const [showCouldNotLoadModal, setShowCouldNotLoadModal] = useState(false)\n  const [newSafeAddress, setNewSafeAddress] = useState<string>('')\n\n  useEffect(() => {\n    const safeCreationFormValues = loadSavedDataOrLeave()\n    if (!safeCreationFormValues) {\n      return\n    }\n\n    const newCreationTxHash = safeCreationFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH]\n    if (newCreationTxHash) {\n      setSafeCreationTxHash(newCreationTxHash)\n    } else {\n      setCreationTxPromise(createNewSafe(userAddress, setSafeCreationTxHash))\n    }\n  }, [userAddress])\n\n  const onSafeCreated = async (safeAddress: string): Promise<void> => {\n    const createSafeFormValues = loadSavedDataOrLeave()\n\n    const defaultSafeValue = createSafeFormValues[FIELD_CREATE_SUGGESTED_SAFE_NAME]\n    const safeName = createSafeFormValues[FIELD_CREATE_CUSTOM_SAFE_NAME] || defaultSafeValue\n    const owners = createSafeFormValues[FIELD_SAFE_OWNERS_LIST]\n\n    // we update the address book with the owners and the new safe\n    const ownersAddressBookEntry = owners.map(({ nameFieldName, addressFieldName }) => {\n      const ownerAddress = createSafeFormValues[addressFieldName]\n      return makeAddressBookEntry({\n        address: createSafeFormValues[addressFieldName],\n        name: createSafeFormValues[nameFieldName] || createSafeFormValues[FIELD_SAFE_OWNER_ENS_LIST][ownerAddress],\n        chainId,\n      })\n    })\n    const safeAddressBookEntry = makeAddressBookEntry({ address: safeAddress, name: safeName, chainId })\n    dispatch(addressBookSafeLoad([...ownersAddressBookEntry, safeAddressBookEntry]))\n\n    // a default 5s wait before starting to request safe information\n    await sleep(5000)\n\n    try {\n      await pollSafeInfo(safeAddress)\n    } catch (e) {\n      setNewSafeAddress(safeAddress)\n      setShowCouldNotLoadModal(true)\n      return\n    }\n\n    const safeProps = await buildSafe(safeAddress)\n    dispatch(addOrUpdateSafe(safeProps))\n\n    setShowModal(true)\n    setModalData({\n      safeAddress: safeProps.address,\n      safeName,\n      safeCreationTxHash: createSafeFormValues[FIELD_NEW_SAFE_CREATION_TX_HASH],\n    })\n  }\n\n  const onRetry = (): void => {\n    trackEvent(CREATE_SAFE_EVENTS.RETRY_CREATE_SAFE)\n    const safeCreationFormValues = loadSavedDataOrLeave()\n\n    if (!safeCreationFormValues) {\n      return\n    }\n\n    // Clear the previous tx hash\n    setSafeCreationTxHash(undefined)\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, {\n      ...safeCreationFormValues,\n      safeCreationTxHash: undefined,\n    })\n\n    setCreationTxPromise(createNewSafe(userAddress, setSafeCreationTxHash))\n  }\n\n  const onCancel = () => {\n    trackEvent(CREATE_SAFE_EVENTS.CANCEL_CREATE_SAFE)\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n    goToWelcomePage()\n  }\n\n  const onClickModalButton = () => {\n    removeFromStorage(SAFE_PENDING_CREATION_STORAGE_KEY)\n\n    const { safeName, safeCreationTxHash, safeAddress } = modalData\n\n    if (redirect) {\n      // If the URL includes ADDRESSED_ROUTE template, then we need to replace it with the new safe address\n      if (redirect.includes(ADDRESSED_ROUTE)) {\n        history.push({\n          pathname: generateSafeRoute(redirect, {\n            shortName: getShortName(),\n            safeAddress,\n          }),\n        })\n      } else {\n        history.push({\n          pathname: redirect,\n        })\n      }\n\n      if (redirect.includes(APP_URL_QUERY_PARAM)) {\n        trackEvent({ ...SAFE_APPS_EVENTS.SHARED_APP_OPEN_AFTER_SAFE_CREATION })\n      }\n\n      return\n    }\n\n    history.push({\n      pathname: generateSafeRoute(SAFE_ROUTES.DASHBOARD, {\n        shortName: getShortName(),\n        safeAddress,\n      }),\n      state: {\n        name: safeName,\n        tx: safeCreationTxHash,\n      },\n    })\n  }\n\n  return (\n    <>\n      <SafeDeployment\n        creationTxHash={safeCreationTxHash}\n        onCancel={onCancel}\n        onRetry={onRetry}\n        onSuccess={onSafeCreated}\n        submittedPromise={creationTxPromise}\n      />\n      {showModal && (\n        <GenericModal\n          onClose={onClickModalButton}\n          title=\"Safe Created!\"\n          body={\n            <div data-testid=\"safe-created-popup\">\n              <Paragraph>\n                You just created a new Safe on <NetworkLabel />\n              </Paragraph>\n              <Paragraph>\n                You will only be able to use this Safe on <NetworkLabel />\n              </Paragraph>\n              <Paragraph>\n                If you send assets on other networks to this address,{' '}\n                <EmphasisLabel>you will not be able to access them</EmphasisLabel>\n              </Paragraph>\n            </div>\n          }\n          footer={\n            <ButtonContainer>\n              <Track {...CREATE_SAFE_EVENTS.GO_TO_SAFE}>\n                <Button\n                  testId=\"safe-created-button\"\n                  onClick={onClickModalButton}\n                  color=\"primary\"\n                  type={'button'}\n                  size=\"small\"\n                  variant=\"contained\"\n                >\n                  Continue\n                </Button>\n              </Track>\n            </ButtonContainer>\n          }\n        />\n      )}\n      {showCouldNotLoadModal && newSafeAddress && (\n        <GenericModal\n          onClose={onCancel}\n          title=\"Unable to load the new Safe\"\n          body={\n            <div>\n              <Paragraph>\n                We are currently unable to load the Safe but it was successfully created and can be found <br />\n                under the following address{' '}\n                <InlinePrefixedEthHashInfo\n                  hash={newSafeAddress}\n                  showCopyBtn\n                  explorerUrl={getExplorerInfo(newSafeAddress)}\n                />\n              </Paragraph>\n            </div>\n          }\n          footer={\n            <ButtonContainer>\n              <Button onClick={onCancel} color=\"primary\" type=\"button\" size=\"small\" variant=\"contained\">\n                OK\n              </Button>\n            </ButtonContainer>\n          }\n        />\n      )}\n    </>\n  )\n}\n\nexport default SafeCreationProcess\n","import { ReactElement, useState, useCallback } from 'react'\nimport { useSelector } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport List from '@material-ui/core/List'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport { ChainId } from 'src/config/chain.d'\nimport { setChainId } from 'src/logic/config/utils'\nimport { lg } from 'src/theme/variables'\nimport NetworkLabel from 'src/components/NetworkLabel/NetworkLabel'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport { availableSelector, shouldSwitchWalletChain } from 'src/logic/wallets/store/selectors'\nimport WalletSwitch from 'src/components/WalletSwitch'\nimport { getChains } from 'src/config/cache/chains'\nimport ConnectDetails from 'src/components/AppLayout/Header/components/ProviderDetails/ConnectDetails'\n\nexport const selectWalletAndNetworkStepLabel = 'Connect wallet & select network'\n\nfunction SelectWalletAndNetworkStep(): ReactElement {\n  const [isNetworkSelectorPopupOpen, setIsNetworkSelectorPopupOpen] = useState(false)\n  const isWalletConnected = !!useSelector(availableSelector)\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\n\n  function openNetworkSelectorPopup() {\n    setIsNetworkSelectorPopupOpen(true)\n  }\n\n  const onNetworkSwitch = useCallback((chainId: ChainId) => {\n    setChainId(chainId)\n    setIsNetworkSelectorPopupOpen(false)\n  }, [])\n\n  return (\n    <Container data-testid={'select-network-step'}>\n      {isWalletConnected ? (\n        <>\n          {!isWrongNetwork && (\n            <Paragraph color=\"primary\" noMargin size=\"lg\">\n              Wallet connected.\n            </Paragraph>\n          )}\n\n          <Paragraph color=\"primary\" size=\"lg\" noMargin={isWrongNetwork}>\n            Creating a Safe on&nbsp;\n            <NetworkLabel onClick={openNetworkSelectorPopup} data-testid=\"switch-network-link\" />\n          </Paragraph>\n        </>\n      ) : (\n        <Paragraph color=\"primary\" noMargin size=\"lg\">\n          In order to create your Safe, you need to connect a wallet\n        </Paragraph>\n      )}\n\n      {!isWalletConnected && (\n        <WalletContainer>\n          <ConnectDetails />\n        </WalletContainer>\n      )}\n\n      {isWalletConnected && isWrongNetwork && (\n        <Paragraph color=\"primary\" size=\"lg\">\n          Your wallet connection must match the selected network. <WalletSwitch />\n        </Paragraph>\n      )}\n\n      <Dialog\n        onClose={() => setIsNetworkSelectorPopupOpen(false)}\n        aria-labelledby=\"select-network\"\n        data-testid={'select-network-popup'}\n        open={isNetworkSelectorPopupOpen}\n      >\n        <StyledDialogTitle disableTypography>\n          <Typography variant={'h5'}>Select Network</Typography>\n          <IconButton aria-label=\"close\" onClick={() => setIsNetworkSelectorPopupOpen(false)}>\n            <CloseIcon />\n          </IconButton>\n        </StyledDialogTitle>\n        <StyledDialogContent dividers>\n          <List component=\"div\">\n            {getChains().map((network) => (\n              <NetworkLabelItem key={network.chainId} role=\"button\" onClick={() => onNetworkSwitch(network.chainId)}>\n                <NetworkLabel networkInfo={network} flexGrow />\n              </NetworkLabelItem>\n            ))}\n          </List>\n        </StyledDialogContent>\n      </Dialog>\n    </Container>\n  )\n}\n\nconst Container = styled(Block)`\n  padding: ${lg};\n`\n\nconst WalletContainer = styled.div`\n  padding: 30px 0;\n  padding-left: 45px;\n\n  > button {\n    margin: auto;\n  }\n`\n\nconst StyledDialogTitle = styled(DialogTitle)`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px 24px;\n`\n\nconst StyledDialogContent = styled(DialogContent)`\n  min-width: 500px;\n`\n\nconst NetworkLabelItem = styled.div`\n  display: flex;\n  margin: ${lg} auto;\n  cursor: pointer;\n  max-width: 50%;\n\n  & > span {\n    font-size: 13px;\n  }\n`\n\nexport default SelectWalletAndNetworkStep\n","import { ReactElement, useEffect, useState } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport queryString from 'query-string'\nimport { useLocation } from 'react-router-dom'\nimport { Loader } from '@gnosis.pm/safe-react-components'\n\nimport Page from 'src/components/layout/Page'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport Heading from 'src/components/layout/Heading'\nimport { history } from 'src/routes/routes'\nimport { secondary, sm } from 'src/theme/variables'\nimport StepperForm, { StepFormElement } from 'src/components/StepperForm/StepperForm'\nimport NameNewSafeStep, { nameNewSafeStepLabel } from './steps/NameNewSafeStep'\nimport {\n  CreateSafeFormValues,\n  FIELD_CREATE_CUSTOM_SAFE_NAME,\n  FIELD_CREATE_SUGGESTED_SAFE_NAME,\n  FIELD_MAX_OWNER_NUMBER,\n  FIELD_NEW_SAFE_PROXY_SALT,\n  FIELD_NEW_SAFE_THRESHOLD,\n  FIELD_SAFE_OWNER_ENS_LIST,\n  FIELD_SAFE_OWNERS_LIST,\n  SAFE_PENDING_CREATION_STORAGE_KEY,\n} from './fields/createSafeFields'\nimport { useMnemonicSafeName } from 'src/logic/hooks/useMnemonicName'\nimport { providerNameSelector, shouldSwitchWalletChain, userAccountSelector } from 'src/logic/wallets/store/selectors'\nimport OwnersAndConfirmationsNewSafeStep, {\n  ownersAndConfirmationsNewSafeStepLabel,\n} from './steps/OwnersAndConfirmationsNewSafeStep'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport ReviewNewSafeStep, { reviewNewSafeStepLabel } from './steps/ReviewNewSafeStep'\nimport { loadFromStorage, saveToStorage } from 'src/utils/storage'\nimport SafeCreationProcess from './components/SafeCreationProcess'\nimport SelectWalletAndNetworkStep, { selectWalletAndNetworkStepLabel } from './steps/SelectWalletAndNetworkStep'\nimport { reverseENSLookup } from 'src/logic/wallets/getWeb3'\nimport { CREATE_SAFE_CATEGORY, CREATE_SAFE_EVENTS } from 'src/utils/events/createLoadSafe'\nimport { trackEvent } from 'src/utils/googleTagManager'\n\nfunction CreateSafePage(): ReactElement {\n  const [safePendingToBeCreated, setSafePendingToBeCreated] = useState<CreateSafeFormValues>()\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const providerName = useSelector(providerNameSelector)\n  const isWrongNetwork = useSelector(shouldSwitchWalletChain)\n  const provider = !!providerName && !isWrongNetwork\n\n  useEffect(() => {\n    const checkIfSafeIsPendingToBeCreated = async (): Promise<void> => {\n      setIsLoading(true)\n\n      // Removing the await completely is breaking the tests for a mysterious reason\n      // @TODO: remove the promise\n      const safePendingToBeCreated = await Promise.resolve(\n        loadFromStorage<CreateSafeFormValues>(SAFE_PENDING_CREATION_STORAGE_KEY),\n      )\n\n      if (provider) {\n        setSafePendingToBeCreated(safePendingToBeCreated)\n      }\n      setIsLoading(false)\n    }\n    checkIfSafeIsPendingToBeCreated()\n  }, [provider])\n\n  const userWalletAddress = useSelector(userAccountSelector)\n  const addressBook = useSelector(currentNetworkAddressBookAsMap)\n  const location = useLocation()\n  const safeRandomName = useMnemonicSafeName()\n\n  const showSafeCreationProcess = (newSafeFormValues: CreateSafeFormValues): void => {\n    // Track number of owners\n    trackEvent({\n      ...CREATE_SAFE_EVENTS.OWNERS,\n      label: newSafeFormValues[FIELD_SAFE_OWNERS_LIST].length,\n    })\n    // Track threshold\n    trackEvent({\n      ...CREATE_SAFE_EVENTS.THRESHOLD,\n      label: newSafeFormValues[FIELD_NEW_SAFE_THRESHOLD],\n    })\n\n    saveToStorage(SAFE_PENDING_CREATION_STORAGE_KEY, { ...newSafeFormValues })\n    setSafePendingToBeCreated(newSafeFormValues)\n  }\n\n  const [initialFormValues, setInitialFormValues] = useState<CreateSafeFormValues>()\n\n  useEffect(() => {\n    let isCurrent = true\n    if (provider && userWalletAddress) {\n      const getInitValues = async () => {\n        const initialValuesFromUrl = await getInitialValues(userWalletAddress, addressBook, location, safeRandomName)\n        if (isCurrent) {\n          setInitialFormValues(initialValuesFromUrl)\n        }\n      }\n      getInitValues()\n    }\n    return () => {\n      isCurrent = false\n    }\n  }, [provider, userWalletAddress, addressBook, location, safeRandomName])\n\n  if (isLoading) {\n    return (\n      <LoaderContainer data-testid={'create-safe-loader'}>\n        <Loader size=\"md\" />\n      </LoaderContainer>\n    )\n  }\n\n  const isInitializing = !provider || !initialFormValues\n\n  return !!safePendingToBeCreated ? (\n    <SafeCreationProcess />\n  ) : (\n    <Page>\n      <Block>\n        <Row align=\"center\">\n          <BackIcon disableRipple onClick={history.goBack}>\n            <ChevronLeft />\n          </BackIcon>\n          <Heading tag=\"h2\">Create new Safe</Heading>\n        </Row>\n        <StepperForm\n          initialValues={initialFormValues}\n          onSubmit={showSafeCreationProcess}\n          testId={'create-safe-form'}\n          trackingCategory={CREATE_SAFE_CATEGORY}\n        >\n          <StepFormElement\n            label={selectWalletAndNetworkStepLabel}\n            nextButtonLabel=\"Continue\"\n            disableNextButton={isInitializing}\n          >\n            <SelectWalletAndNetworkStep />\n          </StepFormElement>\n          <StepFormElement label={nameNewSafeStepLabel} nextButtonLabel=\"Continue\">\n            <NameNewSafeStep />\n          </StepFormElement>\n          <StepFormElement label={ownersAndConfirmationsNewSafeStepLabel} nextButtonLabel=\"Continue\">\n            <OwnersAndConfirmationsNewSafeStep />\n          </StepFormElement>\n          <StepFormElement label={reviewNewSafeStepLabel} nextButtonLabel=\"Create\">\n            <ReviewNewSafeStep />\n          </StepFormElement>\n        </StepperForm>\n      </Block>\n    </Page>\n  )\n}\n\nexport default CreateSafePage\n\nconst DEFAULT_THRESHOLD_VALUE = 1\n\n// initial values can be present in the URL because the Old MultiSig migration\nasync function getInitialValues(userAddress, addressBook, location, suggestedSafeName): Promise<CreateSafeFormValues> {\n  const query = queryString.parse(location.search, { arrayFormat: 'comma' })\n  const { name, owneraddresses, ownernames, threshold } = query\n\n  // if owners are not present in the URL we use current user account as default owner\n  const isOwnersPresentInTheUrl = !!owneraddresses\n  const ownersFromUrl = Array.isArray(owneraddresses) ? owneraddresses : [owneraddresses]\n  const owners = isOwnersPresentInTheUrl ? ownersFromUrl : [userAddress]\n\n  // we set the owner names\n  const ownersNamesFromUrl = Array.isArray(ownernames) ? ownernames : [ownernames]\n  const userAddressName = [addressBook[userAddress]?.name || '']\n  const ownerNames = isOwnersPresentInTheUrl ? ownersNamesFromUrl : userAddressName\n\n  const thresholdFromURl = Number(threshold)\n  const isValidThresholdInTheUrl =\n    threshold && !Number.isNaN(threshold) && thresholdFromURl <= owners.length && thresholdFromURl > 0\n\n  return {\n    [FIELD_CREATE_SUGGESTED_SAFE_NAME]: suggestedSafeName,\n    [FIELD_CREATE_CUSTOM_SAFE_NAME]: name,\n    [FIELD_NEW_SAFE_THRESHOLD]: isValidThresholdInTheUrl ? threshold : DEFAULT_THRESHOLD_VALUE,\n    [FIELD_SAFE_OWNERS_LIST]: owners.map((owner, index) => ({\n      nameFieldName: `owner-name-${index}`,\n      addressFieldName: `owner-address-${index}`,\n    })),\n    [FIELD_SAFE_OWNER_ENS_LIST]: (\n      await Promise.all(\n        owners.map(async (address) => {\n          return { [address]: await reverseENSLookup(address) }\n        }),\n      )\n    ).reduce((acc, owner) => {\n      return { ...acc, ...owner }\n    }, {}),\n    // we set owners address values as owner-address-${index} format in the form state\n    ...owners.reduce(\n      (ownerAddressFields, ownerAddress, index) => ({\n        ...ownerAddressFields,\n        [`owner-address-${index}`]: ownerAddress,\n      }),\n      {},\n    ),\n    // we set owners name values as owner-name-${index} format in the form state\n    ...ownerNames.reduce(\n      (ownerNameFields, ownerName, index) => ({\n        ...ownerNameFields,\n        [`owner-name-${index}`]: ownerName,\n      }),\n      {},\n    ),\n    [FIELD_MAX_OWNER_NUMBER]: owners.length,\n    [FIELD_NEW_SAFE_PROXY_SALT]: Date.now(),\n  }\n}\n\nconst LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`\n\nconst BackIcon = styled(IconButton)`\n  color: ${secondary};\n  padding: ${sm};\n  margin-right: 5px;\n`\n"],"sourceRoot":""}